GNU gdb (Ubuntu 7.10-1ubuntu2) 7.10
Copyright (C) 2015 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "arm-linux-gnueabihf".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /usr/bin/vim.tiny...Reading symbols from /usr/lib/debug//usr/bin/vim.tiny...done.
done.
Dump of assembler code for function flush_buffers:
   0x0002cad0 <+0>:	70 b5	push	{r4, r5, r6, lr}
   0x0002cad2 <+2>:	06 46	mov	r6, r0
   0x0002cad4 <+4>:	22 4d	ldr	r5, [pc, #136]	; (0x2cb60 <flush_buffers+144>)
   0x0002cad6 <+6>:	23 4b	ldr	r3, [pc, #140]	; (0x2cb64 <flush_buffers+148>)
   0x0002cad8 <+8>:	7d 44	add	r5, pc
   0x0002cada <+10>:	ec 58	ldr	r4, [r5, r3]
   0x0002cadc <+12>:	23 68	ldr	r3, [r4, #0]
   0x0002cade <+14>:	00 2b	cmp	r3, #0
   0x0002cae0 <+16>:	3a d0	beq.n	0x2cb58 <flush_buffers+136>
   0x0002cae2 <+18>:	21 4b	ldr	r3, [pc, #132]	; (0x2cb68 <flush_buffers+152>)
   0x0002cae4 <+20>:	7b 44	add	r3, pc
   0x0002cae6 <+22>:	d3 f8 38 26	ldr.w	r2, [r3, #1592]	; 0x638
   0x0002caea <+26>:	32 b1	cbz	r2, 0x2cafa <flush_buffers+42>
   0x0002caec <+28>:	03 f5 c7 61	add.w	r1, r3, #1592	; 0x638
   0x0002caf0 <+32>:	00 22	movs	r2, #0
   0x0002caf2 <+34>:	c3 f8 40 16	str.w	r1, [r3, #1600]	; 0x640
   0x0002caf6 <+38>:	c3 f8 48 26	str.w	r2, [r3, #1608]	; 0x648
   0x0002cafa <+42>:	1c 4b	ldr	r3, [pc, #112]	; (0x2cb6c <flush_buffers+156>)
   0x0002cafc <+44>:	7b 44	add	r3, pc
   0x0002cafe <+46>:	d3 f8 24 26	ldr.w	r2, [r3, #1572]	; 0x624
   0x0002cb02 <+50>:	32 b1	cbz	r2, 0x2cb12 <flush_buffers+66>
   0x0002cb04 <+52>:	03 f2 24 61	addw	r1, r3, #1572	; 0x624
   0x0002cb08 <+56>:	00 22	movs	r2, #0
   0x0002cb0a <+58>:	c3 f8 2c 16	str.w	r1, [r3, #1580]	; 0x62c
   0x0002cb0e <+62>:	c3 f8 34 26	str.w	r2, [r3, #1588]	; 0x634
   0x0002cb12 <+66>:	01 20	movs	r0, #1
   0x0002cb14 <+68>:	ff f7 ce f8	bl	0x2bcb4 <read_readbuffers>
   0x0002cb18 <+72>:	00 28	cmp	r0, #0
   0x0002cb1a <+74>:	fa d1	bne.n	0x2cb12 <flush_buffers+66>
   0x0002cb1c <+76>:	a6 b1	cbz	r6, 0x2cb48 <flush_buffers+120>
   0x0002cb1e <+78>:	26 46	mov	r6, r4
   0x0002cb20 <+80>:	a1 68	ldr	r1, [r4, #8]
   0x0002cb22 <+82>:	0a 22	movs	r2, #10
   0x0002cb24 <+84>:	23 6a	ldr	r3, [r4, #32]
   0x0002cb26 <+86>:	01 39	subs	r1, #1
   0x0002cb28 <+88>:	20 68	ldr	r0, [r4, #0]
   0x0002cb2a <+90>:	ff f7 1f ff	bl	0x2c96c <inchar>
   0x0002cb2e <+94>:	00 28	cmp	r0, #0
   0x0002cb30 <+96>:	f6 d1	bne.n	0x2cb20 <flush_buffers+80>
   0x0002cb32 <+98>:	32 23	movs	r3, #50	; 0x32
   0x0002cb34 <+100>:	30 61	str	r0, [r6, #16]
   0x0002cb36 <+102>:	f3 60	str	r3, [r6, #12]
   0x0002cb38 <+104>:	0d 4a	ldr	r2, [pc, #52]	; (0x2cb70 <flush_buffers+160>)
   0x0002cb3a <+106>:	00 23	movs	r3, #0
   0x0002cb3c <+108>:	63 61	str	r3, [r4, #20]
   0x0002cb3e <+110>:	a3 61	str	r3, [r4, #24]
   0x0002cb40 <+112>:	aa 58	ldr	r2, [r5, r2]
   0x0002cb42 <+114>:	e3 61	str	r3, [r4, #28]
   0x0002cb44 <+116>:	13 60	str	r3, [r2, #0]
   0x0002cb46 <+118>:	70 bd	pop	{r4, r5, r6, pc}
   0x0002cb48 <+120>:	61 69	ldr	r1, [r4, #20]
   0x0002cb4a <+122>:	e2 68	ldr	r2, [r4, #12]
   0x0002cb4c <+124>:	23 69	ldr	r3, [r4, #16]
   0x0002cb4e <+126>:	0a 44	add	r2, r1
   0x0002cb50 <+128>:	e2 60	str	r2, [r4, #12]
   0x0002cb52 <+130>:	5b 1a	subs	r3, r3, r1
   0x0002cb54 <+132>:	23 61	str	r3, [r4, #16]
   0x0002cb56 <+134>:	ef e7	b.n	0x2cb38 <flush_buffers+104>
   0x0002cb58 <+136>:	fe f7 d0 ff	bl	0x2bafc <init_typebuf>
   0x0002cb5c <+140>:	c1 e7	b.n	0x2cae2 <flush_buffers+18>
   0x0002cb5e <+142>:	00 bf	nop
   0x0002cb60 <+144>:	c0 ab	add	r3, sp, #768	; 0x300
   0x0002cb62 <+146>:	07 00	movs	r7, r0
   0x0002cb64 <+148>:	70 08	lsrs	r0, r6, #1
   0x0002cb66 <+150>:	00 00	movs	r0, r0
   0x0002cb68 <+152>:	6c 26	movs	r6, #108	; 0x6c
   0x0002cb6a <+154>:	08 00	movs	r0, r1
   0x0002cb6c <+156>:	54 26	movs	r6, #84	; 0x54
   0x0002cb6e <+158>:	08 00	movs	r0, r1
   0x0002cb70 <+160>:	20 05	lsls	r0, r4, #20
   0x0002cb72 <+162>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function free_buff:
   0x0002bd30 <+0>:	38 b5	push	{r3, r4, r5, lr}
   0x0002bd32 <+2>:	05 46	mov	r5, r0
   0x0002bd34 <+4>:	00 68	ldr	r0, [r0, #0]
   0x0002bd36 <+6>:	28 b1	cbz	r0, 0x2bd44 <free_buff+20>
   0x0002bd38 <+8>:	04 68	ldr	r4, [r0, #0]
   0x0002bd3a <+10>:	11 f0 33 fb	bl	0x3d3a4 <vim_free>
   0x0002bd3e <+14>:	20 46	mov	r0, r4
   0x0002bd40 <+16>:	00 2c	cmp	r4, #0
   0x0002bd42 <+18>:	f9 d1	bne.n	0x2bd38 <free_buff+8>
   0x0002bd44 <+20>:	00 23	movs	r3, #0
   0x0002bd46 <+22>:	2b 60	str	r3, [r5, #0]
   0x0002bd48 <+24>:	38 bd	pop	{r3, r4, r5, pc}
End of assembler dump.
Dump of assembler code for function free_typebuf:
   0x0002c5d4 <+0>:	38 b5	push	{r3, r4, r5, lr}
   0x0002c5d6 <+2>:	13 4c	ldr	r4, [pc, #76]	; (0x2c624 <free_typebuf+80>)
   0x0002c5d8 <+4>:	13 4a	ldr	r2, [pc, #76]	; (0x2c628 <free_typebuf+84>)
   0x0002c5da <+6>:	7c 44	add	r4, pc
   0x0002c5dc <+8>:	13 4b	ldr	r3, [pc, #76]	; (0x2c62c <free_typebuf+88>)
   0x0002c5de <+10>:	a5 58	ldr	r5, [r4, r2]
   0x0002c5e0 <+12>:	7b 44	add	r3, pc
   0x0002c5e2 <+14>:	08 33	adds	r3, #8
   0x0002c5e4 <+16>:	28 68	ldr	r0, [r5, #0]
   0x0002c5e6 <+18>:	98 42	cmp	r0, r3
   0x0002c5e8 <+20>:	0c d0	beq.n	0x2c604 <free_typebuf+48>
   0x0002c5ea <+22>:	10 f0 db fe	bl	0x3d3a4 <vim_free>
   0x0002c5ee <+26>:	10 4b	ldr	r3, [pc, #64]	; (0x2c630 <free_typebuf+92>)
   0x0002c5f0 <+28>:	68 68	ldr	r0, [r5, #4]
   0x0002c5f2 <+30>:	7b 44	add	r3, pc
   0x0002c5f4 <+32>:	03 f5 8a 73	add.w	r3, r3, #276	; 0x114
   0x0002c5f8 <+36>:	98 42	cmp	r0, r3
   0x0002c5fa <+38>:	0a d0	beq.n	0x2c612 <free_typebuf+62>
   0x0002c5fc <+40>:	bd e8 38 40	ldmia.w	sp!, {r3, r4, r5, lr}
   0x0002c600 <+44>:	10 f0 d0 be	b.w	0x3d3a4 <vim_free>
   0x0002c604 <+48>:	0b 4b	ldr	r3, [pc, #44]	; (0x2c634 <free_typebuf+96>)
   0x0002c606 <+50>:	0c 49	ldr	r1, [pc, #48]	; (0x2c638 <free_typebuf+100>)
   0x0002c608 <+52>:	e0 58	ldr	r0, [r4, r3]
   0x0002c60a <+54>:	79 44	add	r1, pc
   0x0002c60c <+56>:	09 f0 b6 fb	bl	0x35d7c <emsg2>
   0x0002c610 <+60>:	ed e7	b.n	0x2c5ee <free_typebuf+26>
   0x0002c612 <+62>:	08 4b	ldr	r3, [pc, #32]	; (0x2c634 <free_typebuf+96>)
   0x0002c614 <+64>:	09 49	ldr	r1, [pc, #36]	; (0x2c63c <free_typebuf+104>)
   0x0002c616 <+66>:	e0 58	ldr	r0, [r4, r3]
   0x0002c618 <+68>:	79 44	add	r1, pc
   0x0002c61a <+70>:	bd e8 38 40	ldmia.w	sp!, {r3, r4, r5, lr}
   0x0002c61e <+74>:	09 f0 ad bb	b.w	0x35d7c <emsg2>
   0x0002c622 <+78>:	00 bf	nop
   0x0002c624 <+80>:	be b0	sub	sp, #248	; 0xf8
   0x0002c626 <+82>:	07 00	movs	r7, r0
   0x0002c628 <+84>:	70 08	lsrs	r0, r6, #1
   0x0002c62a <+86>:	00 00	movs	r0, r0
   0x0002c62c <+88>:	70 2b	cmp	r3, #112	; 0x70
   0x0002c62e <+90>:	08 00	movs	r0, r1
   0x0002c630 <+92>:	5e 2b	cmp	r3, #94	; 0x5e
   0x0002c632 <+94>:	08 00	movs	r0, r1
   0x0002c634 <+96>:	e4 07	lsls	r4, r4, #31
   0x0002c636 <+98>:	00 00	movs	r0, r0
   0x0002c638 <+100>:	62 e1	b.n	0x2c900 <vungetc+40>
   0x0002c63a <+102>:	05 00	movs	r5, r0
   0x0002c63c <+104>:	64 e1	b.n	0x2c908 <fix_input_buffer+4>
   0x0002c63e <+106>:	05 00	movs	r5, r0
End of assembler dump.
Dump of assembler code for function get_inserted:
   0x0002bdbc <+0>:	02 48	ldr	r0, [pc, #8]	; (0x2bdc8 <get_inserted+12>)
   0x0002bdbe <+2>:	00 21	movs	r1, #0
   0x0002bdc0 <+4>:	78 44	add	r0, pc
   0x0002bdc2 <+6>:	00 f2 64 60	addw	r0, r0, #1636	; 0x664
   0x0002bdc6 <+10>:	c5 e6	b.n	0x2bb54 <get_buffcont>
   0x0002bdc8 <+12>:	90 33	adds	r3, #144	; 0x90
   0x0002bdca <+14>:	08 00	movs	r0, r1
End of assembler dump.
Dump of assembler code for function get_map_mode:
   0x0002e1c0 <+0>:	02 68	ldr	r2, [r0, #0]
   0x0002e1c2 <+2>:	10 b4	push	{r4}
   0x0002e1c4 <+4>:	54 1c	adds	r4, r2, #1
   0x0002e1c6 <+6>:	13 78	ldrb	r3, [r2, #0]
   0x0002e1c8 <+8>:	69 2b	cmp	r3, #105	; 0x69
   0x0002e1ca <+10>:	08 bf	it	eq
   0x0002e1cc <+12>:	10 23	moveq	r3, #16
   0x0002e1ce <+14>:	12 d0	beq.n	0x2e1f6 <get_map_mode+54>
   0x0002e1d0 <+16>:	6c 2b	cmp	r3, #108	; 0x6c
   0x0002e1d2 <+18>:	08 bf	it	eq
   0x0002e1d4 <+20>:	20 23	moveq	r3, #32
   0x0002e1d6 <+22>:	0e d0	beq.n	0x2e1f6 <get_map_mode+54>
   0x0002e1d8 <+24>:	63 2b	cmp	r3, #99	; 0x63
   0x0002e1da <+26>:	08 bf	it	eq
   0x0002e1dc <+28>:	08 23	moveq	r3, #8
   0x0002e1de <+30>:	0a d0	beq.n	0x2e1f6 <get_map_mode+54>
   0x0002e1e0 <+32>:	6e 2b	cmp	r3, #110	; 0x6e
   0x0002e1e2 <+34>:	1d d0	beq.n	0x2e220 <get_map_mode+96>
   0x0002e1e4 <+36>:	76 2b	cmp	r3, #118	; 0x76
   0x0002e1e6 <+38>:	08 bf	it	eq
   0x0002e1e8 <+40>:	41 f2 02 03	movweq	r3, #4098	; 0x1002
   0x0002e1ec <+44>:	03 d0	beq.n	0x2e1f6 <get_map_mode+54>
   0x0002e1ee <+46>:	78 2b	cmp	r3, #120	; 0x78
   0x0002e1f0 <+48>:	08 bf	it	eq
   0x0002e1f2 <+50>:	02 23	moveq	r3, #2
   0x0002e1f4 <+52>:	04 d1	bne.n	0x2e200 <get_map_mode+64>
   0x0002e1f6 <+54>:	04 60	str	r4, [r0, #0]
   0x0002e1f8 <+56>:	18 46	mov	r0, r3
   0x0002e1fa <+58>:	5d f8 04 4b	ldr.w	r4, [sp], #4
   0x0002e1fe <+62>:	70 47	bx	lr
   0x0002e200 <+64>:	73 2b	cmp	r3, #115	; 0x73
   0x0002e202 <+66>:	08 bf	it	eq
   0x0002e204 <+68>:	4f f4 80 53	moveq.w	r3, #4096	; 0x1000
   0x0002e208 <+72>:	f5 d0	beq.n	0x2e1f6 <get_map_mode+54>
   0x0002e20a <+74>:	6f 2b	cmp	r3, #111	; 0x6f
   0x0002e20c <+76>:	08 bf	it	eq
   0x0002e20e <+78>:	04 23	moveq	r3, #4
   0x0002e210 <+80>:	f1 d0	beq.n	0x2e1f6 <get_map_mode+54>
   0x0002e212 <+82>:	00 29	cmp	r1, #0
   0x0002e214 <+84>:	41 f2 07 03	movw	r3, #4103	; 0x1007
   0x0002e218 <+88>:	14 46	mov	r4, r2
   0x0002e21a <+90>:	18 bf	it	ne
   0x0002e21c <+92>:	18 23	movne	r3, #24
   0x0002e21e <+94>:	ea e7	b.n	0x2e1f6 <get_map_mode+54>
   0x0002e220 <+96>:	53 78	ldrb	r3, [r2, #1]
   0x0002e222 <+98>:	6f 2b	cmp	r3, #111	; 0x6f
   0x0002e224 <+100>:	18 bf	it	ne
   0x0002e226 <+102>:	01 23	movne	r3, #1
   0x0002e228 <+104>:	e5 d1	bne.n	0x2e1f6 <get_map_mode+54>
   0x0002e22a <+106>:	f2 e7	b.n	0x2e212 <get_map_mode+82>
End of assembler dump.
Dump of assembler code for function get_recorded:
   0x0002bd4c <+0>:	f8 b5	push	{r3, r4, r5, r6, r7, lr}
   0x0002bd4e <+2>:	01 21	movs	r1, #1
   0x0002bd50 <+4>:	16 4c	ldr	r4, [pc, #88]	; (0x2bdac <get_recorded+96>)
   0x0002bd52 <+6>:	17 4e	ldr	r6, [pc, #92]	; (0x2bdb0 <get_recorded+100>)
   0x0002bd54 <+8>:	7c 44	add	r4, pc
   0x0002bd56 <+10>:	04 f2 4c 60	addw	r0, r4, #1612	; 0x64c
   0x0002bd5a <+14>:	7e 44	add	r6, pc
   0x0002bd5c <+16>:	ff f7 fa fe	bl	0x2bb54 <get_buffcont>
   0x0002bd60 <+20>:	05 46	mov	r5, r0
   0x0002bd62 <+22>:	d4 f8 4c 06	ldr.w	r0, [r4, #1612]	; 0x64c
   0x0002bd66 <+26>:	28 b1	cbz	r0, 0x2bd74 <get_recorded+40>
   0x0002bd68 <+28>:	04 68	ldr	r4, [r0, #0]
   0x0002bd6a <+30>:	11 f0 1b fb	bl	0x3d3a4 <vim_free>
   0x0002bd6e <+34>:	20 46	mov	r0, r4
   0x0002bd70 <+36>:	00 2c	cmp	r4, #0
   0x0002bd72 <+38>:	f9 d1	bne.n	0x2bd68 <get_recorded+28>
   0x0002bd74 <+40>:	0f 4c	ldr	r4, [pc, #60]	; (0x2bdb4 <get_recorded+104>)
   0x0002bd76 <+42>:	28 46	mov	r0, r5
   0x0002bd78 <+44>:	00 27	movs	r7, #0
   0x0002bd7a <+46>:	7c 44	add	r4, pc
   0x0002bd7c <+48>:	c4 f8 4c 76	str.w	r7, [r4, #1612]	; 0x64c
   0x0002bd80 <+52>:	e1 f7 a8 e9	blx	0xd0d4 <strlen@plt>
   0x0002bd84 <+56>:	d4 f8 60 36	ldr.w	r3, [r4, #1632]	; 0x660
   0x0002bd88 <+60>:	98 42	cmp	r0, r3
   0x0002bd8a <+62>:	a4 bf	itt	ge
   0x0002bd8c <+64>:	c0 1a	subge	r0, r0, r3
   0x0002bd8e <+66>:	2f 54	strbge	r7, [r5, r0]
   0x0002bd90 <+68>:	48 b1	cbz	r0, 0x2bda6 <get_recorded+90>
   0x0002bd92 <+70>:	09 4b	ldr	r3, [pc, #36]	; (0x2bdb8 <get_recorded+108>)
   0x0002bd94 <+72>:	f3 58	ldr	r3, [r6, r3]
   0x0002bd96 <+74>:	1b 68	ldr	r3, [r3, #0]
   0x0002bd98 <+76>:	2b b1	cbz	r3, 0x2bda6 <get_recorded+90>
   0x0002bd9a <+78>:	01 38	subs	r0, #1
   0x0002bd9c <+80>:	2b 5c	ldrb	r3, [r5, r0]
   0x0002bd9e <+82>:	0f 2b	cmp	r3, #15
   0x0002bda0 <+84>:	04 bf	itt	eq
   0x0002bda2 <+86>:	00 23	moveq	r3, #0
   0x0002bda4 <+88>:	2b 54	strbeq	r3, [r5, r0]
   0x0002bda6 <+90>:	28 46	mov	r0, r5
   0x0002bda8 <+92>:	f8 bd	pop	{r3, r4, r5, r6, r7, pc}
   0x0002bdaa <+94>:	00 bf	nop
   0x0002bdac <+96>:	fc 33	adds	r3, #252	; 0xfc
   0x0002bdae <+98>:	08 00	movs	r0, r1
   0x0002bdb0 <+100>:	3e b9	cbnz	r6, 0x2bdc2 <get_inserted+6>
   0x0002bdb2 <+102>:	07 00	movs	r7, r0
   0x0002bdb4 <+104>:	d6 33	adds	r3, #214	; 0xd6
   0x0002bdb6 <+106>:	08 00	movs	r0, r1
   0x0002bdb8 <+108>:	10 08	lsrs	r0, r2, #32
   0x0002bdba <+110>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function inchar:
   0x0002c96c <+0>:	2d e9 f0 4f	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
   0x0002c970 <+4>:	ad b0	sub	sp, #180	; 0xb4
   0x0002c972 <+6>:	4d 4e	ldr	r6, [pc, #308]	; (0x2caa8 <inchar+316>)
   0x0002c974 <+8>:	14 46	mov	r4, r2
   0x0002c976 <+10>:	03 92	str	r2, [sp, #12]
   0x0002c978 <+12>:	64 2c	cmp	r4, #100	; 0x64
   0x0002c97a <+14>:	4c 4a	ldr	r2, [pc, #304]	; (0x2caac <inchar+320>)
   0x0002c97c <+16>:	7e 44	add	r6, pc
   0x0002c97e <+18>:	01 93	str	r3, [sp, #4]
   0x0002c980 <+20>:	23 46	mov	r3, r4
   0x0002c982 <+22>:	02 91	str	r1, [sp, #8]
   0x0002c984 <+24>:	d8 bf	it	le
   0x0002c986 <+26>:	00 23	movle	r3, #0
   0x0002c988 <+28>:	b2 58	ldr	r2, [r6, r2]
   0x0002c98a <+30>:	c8 bf	it	gt
   0x0002c98c <+32>:	01 23	movgt	r3, #1
   0x0002c98e <+34>:	b4 f1 ff 3f	cmp.w	r4, #4294967295
   0x0002c992 <+38>:	08 bf	it	eq
   0x0002c994 <+40>:	43 f0 01 03	orreq.w	r3, r3, #1
   0x0002c998 <+44>:	82 46	mov	r10, r0
   0x0002c99a <+46>:	00 92	str	r2, [sp, #0]
   0x0002c99c <+48>:	12 68	ldr	r2, [r2, #0]
   0x0002c99e <+50>:	2b 92	str	r2, [sp, #172]	; 0xac
   0x0002c9a0 <+52>:	00 2b	cmp	r3, #0
   0x0002c9a2 <+54>:	77 d1	bne.n	0x2ca94 <inchar+296>
   0x0002c9a4 <+56>:	42 4b	ldr	r3, [pc, #264]	; (0x2cab0 <inchar+324>)
   0x0002c9a6 <+58>:	40 f2 01 22	movw	r2, #513	; 0x201
   0x0002c9aa <+62>:	f3 58	ldr	r3, [r6, r3]
   0x0002c9ac <+64>:	1b 68	ldr	r3, [r3, #0]
   0x0002c9ae <+66>:	93 42	cmp	r3, r2
   0x0002c9b0 <+68>:	06 d0	beq.n	0x2c9c0 <inchar+84>
   0x0002c9b2 <+70>:	40 4a	ldr	r2, [pc, #256]	; (0x2cab4 <inchar+328>)
   0x0002c9b4 <+72>:	00 21	movs	r1, #0
   0x0002c9b6 <+74>:	40 4b	ldr	r3, [pc, #256]	; (0x2cab8 <inchar+332>)
   0x0002c9b8 <+76>:	b2 58	ldr	r2, [r6, r2]
   0x0002c9ba <+78>:	11 60	str	r1, [r2, #0]
   0x0002c9bc <+80>:	f3 58	ldr	r3, [r6, r3]
   0x0002c9be <+82>:	19 60	str	r1, [r3, #0]
   0x0002c9c0 <+84>:	3e 49	ldr	r1, [pc, #248]	; (0x2cabc <inchar+336>)
   0x0002c9c2 <+86>:	00 20	movs	r0, #0
   0x0002c9c4 <+88>:	3e 4a	ldr	r2, [pc, #248]	; (0x2cac0 <inchar+340>)
   0x0002c9c6 <+90>:	81 46	mov	r9, r0
   0x0002c9c8 <+92>:	3e 4b	ldr	r3, [pc, #248]	; (0x2cac4 <inchar+344>)
   0x0002c9ca <+94>:	83 46	mov	r11, r0
   0x0002c9cc <+96>:	71 58	ldr	r1, [r6, r1]
   0x0002c9ce <+98>:	4f f0 ff 35	mov.w	r5, #4294967295
   0x0002c9d2 <+102>:	08 60	str	r0, [r1, #0]
   0x0002c9d4 <+104>:	56 f8 02 80	ldr.w	r8, [r6, r2]
   0x0002c9d8 <+108>:	f7 58	ldr	r7, [r6, r3]
   0x0002c9da <+110>:	3b 68	ldr	r3, [r7, #0]
   0x0002c9dc <+112>:	58 f8 23 00	ldr.w	r0, [r8, r3, lsl #2]
   0x0002c9e0 <+116>:	d0 b1	cbz	r0, 0x2ca18 <inchar+172>
   0x0002c9e2 <+118>:	00 2d	cmp	r5, #0
   0x0002c9e4 <+120>:	3f da	bge.n	0x2ca66 <inchar+250>
   0x0002c9e6 <+122>:	38 4b	ldr	r3, [pc, #224]	; (0x2cac8 <inchar+348>)
   0x0002c9e8 <+124>:	f4 58	ldr	r4, [r6, r3]
   0x0002c9ea <+126>:	23 68	ldr	r3, [r4, #0]
   0x0002c9ec <+128>:	43 b9	cbnz	r3, 0x2ca00 <inchar+148>
   0x0002c9ee <+130>:	e0 f7 0e ea	blx	0xce0c <_IO_getc@plt>
   0x0002c9f2 <+134>:	05 1e	subs	r5, r0, #0
   0x0002c9f4 <+136>:	a4 bf	itt	ge
   0x0002c9f6 <+138>:	8a f8 00 50	strbge.w	r5, [r10]
   0x0002c9fa <+142>:	4f f0 01 0b	movge.w	r11, #1
   0x0002c9fe <+146>:	ec da	bge.n	0x2c9da <inchar+110>
   0x0002ca00 <+148>:	ff f7 50 fe	bl	0x2c6a4 <closescript>
   0x0002ca04 <+152>:	23 68	ldr	r3, [r4, #0]
   0x0002ca06 <+154>:	00 2b	cmp	r3, #0
   0x0002ca08 <+156>:	49 d0	beq.n	0x2ca9e <inchar+306>
   0x0002ca0a <+158>:	3b 68	ldr	r3, [r7, #0]
   0x0002ca0c <+160>:	4f f0 01 09	mov.w	r9, #1
   0x0002ca10 <+164>:	58 f8 23 00	ldr.w	r0, [r8, r3, lsl #2]
   0x0002ca14 <+168>:	00 28	cmp	r0, #0
   0x0002ca16 <+170>:	e4 d1	bne.n	0x2c9e2 <inchar+118>
   0x0002ca18 <+172>:	00 2d	cmp	r5, #0
   0x0002ca1a <+174>:	24 da	bge.n	0x2ca66 <inchar+250>
   0x0002ca1c <+176>:	2a 4b	ldr	r3, [pc, #168]	; (0x2cac8 <inchar+348>)
   0x0002ca1e <+178>:	f3 58	ldr	r3, [r6, r3]
   0x0002ca20 <+180>:	1b 68	ldr	r3, [r3, #0]
   0x0002ca22 <+182>:	7b b1	cbz	r3, 0x2ca44 <inchar+216>
   0x0002ca24 <+184>:	04 ac	add	r4, sp, #16
   0x0002ca26 <+186>:	00 23	movs	r3, #0
   0x0002ca28 <+188>:	99 21	movs	r1, #153	; 0x99
   0x0002ca2a <+190>:	1a 46	mov	r2, r3
   0x0002ca2c <+192>:	20 46	mov	r0, r4
   0x0002ca2e <+194>:	52 f0 db fd	bl	0x7f5e8 <ui_inchar>
   0x0002ca32 <+198>:	28 b1	cbz	r0, 0x2ca40 <inchar+212>
   0x0002ca34 <+200>:	01 28	cmp	r0, #1
   0x0002ca36 <+202>:	f6 d1	bne.n	0x2ca26 <inchar+186>
   0x0002ca38 <+204>:	9d f8 10 30	ldrb.w	r3, [sp, #16]
   0x0002ca3c <+208>:	03 2b	cmp	r3, #3
   0x0002ca3e <+210>:	f2 d1	bne.n	0x2ca26 <inchar+186>
   0x0002ca40 <+212>:	48 46	mov	r0, r9
   0x0002ca42 <+214>:	18 e0	b.n	0x2ca76 <inchar+266>
   0x0002ca44 <+216>:	50 f0 80 fb	bl	0x7d148 <out_flush>
   0x0002ca48 <+220>:	02 9c	ldr	r4, [sp, #8]
   0x0002ca4a <+222>:	45 f2 56 50	movw	r0, #21846	; 0x5556
   0x0002ca4e <+226>:	03 9a	ldr	r2, [sp, #12]
   0x0002ca50 <+228>:	c5 f2 55 50	movt	r0, #21845	; 0x5555
   0x0002ca54 <+232>:	01 9b	ldr	r3, [sp, #4]
   0x0002ca56 <+234>:	84 fb 00 01	smull	r0, r1, r4, r0
   0x0002ca5a <+238>:	50 46	mov	r0, r10
   0x0002ca5c <+240>:	a1 eb e4 71	sub.w	r1, r1, r4, asr #31
   0x0002ca60 <+244>:	52 f0 c2 fd	bl	0x7f5e8 <ui_inchar>
   0x0002ca64 <+248>:	83 46	mov	r11, r0
   0x0002ca66 <+250>:	01 9a	ldr	r2, [sp, #4]
   0x0002ca68 <+252>:	6a b9	cbnz	r2, 0x2ca86 <inchar+282>
   0x0002ca6a <+254>:	ea 43	mvns	r2, r5
   0x0002ca6c <+256>:	59 46	mov	r1, r11
   0x0002ca6e <+258>:	d2 0f	lsrs	r2, r2, #31
   0x0002ca70 <+260>:	50 46	mov	r0, r10
   0x0002ca72 <+262>:	ff f7 47 ff	bl	0x2c904 <fix_input_buffer>
   0x0002ca76 <+266>:	00 9b	ldr	r3, [sp, #0]
   0x0002ca78 <+268>:	2b 9a	ldr	r2, [sp, #172]	; 0xac
   0x0002ca7a <+270>:	1b 68	ldr	r3, [r3, #0]
   0x0002ca7c <+272>:	9a 42	cmp	r2, r3
   0x0002ca7e <+274>:	11 d1	bne.n	0x2caa4 <inchar+312>
   0x0002ca80 <+276>:	2d b0	add	sp, #180	; 0xb4
   0x0002ca82 <+278>:	bd e8 f0 8f	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
   0x0002ca86 <+282>:	11 4b	ldr	r3, [pc, #68]	; (0x2cacc <inchar+352>)
   0x0002ca88 <+284>:	f3 58	ldr	r3, [r6, r3]
   0x0002ca8a <+286>:	1b 6a	ldr	r3, [r3, #32]
   0x0002ca8c <+288>:	9a 42	cmp	r2, r3
   0x0002ca8e <+290>:	ec d0	beq.n	0x2ca6a <inchar+254>
   0x0002ca90 <+292>:	00 20	movs	r0, #0
   0x0002ca92 <+294>:	f0 e7	b.n	0x2ca76 <inchar+266>
   0x0002ca94 <+296>:	51 f0 72 f8	bl	0x7db7c <cursor_on>
   0x0002ca98 <+300>:	50 f0 56 fb	bl	0x7d148 <out_flush>
   0x0002ca9c <+304>:	82 e7	b.n	0x2c9a4 <inchar+56>
   0x0002ca9e <+306>:	4f f0 ff 30	mov.w	r0, #4294967295
   0x0002caa2 <+310>:	e8 e7	b.n	0x2ca76 <inchar+266>
   0x0002caa4 <+312>:	e0 f7 dc e9	blx	0xce60 <__stack_chk_fail@plt>
   0x0002caa8 <+316>:	1c ad	add	r5, sp, #112	; 0x70
   0x0002caaa <+318>:	07 00	movs	r7, r0
   0x0002caac <+320>:	78 03	lsls	r0, r7, #13
   0x0002caae <+322>:	00 00	movs	r0, r0
   0x0002cab0 <+324>:	ac 08	lsrs	r4, r5, #2
   0x0002cab2 <+326>:	00 00	movs	r0, r0
   0x0002cab4 <+328>:	2c 06	lsls	r4, r5, #24
   0x0002cab6 <+330>:	00 00	movs	r0, r0
   0x0002cab8 <+332>:	94 08	lsrs	r4, r2, #2
   0x0002caba <+334>:	00 00	movs	r0, r0
   0x0002cabc <+336>:	e8 03	lsls	r0, r5, #15
   0x0002cabe <+338>:	00 00	movs	r0, r0
   0x0002cac0 <+340>:	7c 05	lsls	r4, r7, #21
   0x0002cac2 <+342>:	00 00	movs	r0, r0
   0x0002cac4 <+344>:	74 03	lsls	r4, r6, #13
   0x0002cac6 <+346>:	00 00	movs	r0, r0
   0x0002cac8 <+348>:	44 04	lsls	r4, r0, #17
   0x0002caca <+350>:	00 00	movs	r0, r0
   0x0002cacc <+352>:	70 08	lsrs	r0, r6, #1
   0x0002cace <+354>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function init_mappings:
   0x0002fb1c <+0>:	70 47	bx	lr
End of assembler dump.
Dump of assembler code for function input_available:
   0x0002e1b0 <+0>:	08 b5	push	{r3, lr}
   0x0002e1b2 <+2>:	51 f0 b3 fa	bl	0x7f71c <vim_is_input_buf_empty>
   0x0002e1b6 <+6>:	b0 fa 80 f0	clz	r0, r0
   0x0002e1ba <+10>:	40 09	lsrs	r0, r0, #5
   0x0002e1bc <+12>:	08 bd	pop	{r3, pc}
End of assembler dump.
