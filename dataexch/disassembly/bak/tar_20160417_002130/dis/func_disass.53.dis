GNU gdb (Ubuntu 7.10-1ubuntu2) 7.10
Copyright (C) 2015 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "arm-linux-gnueabihf".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /bin/tar...Reading symbols from /usr/lib/debug//bin/tar...done.
done.
Dump of assembler code for function get_quoting_style:
   0x0002e9fc <+0>:	02 4b	ldr	r3, [pc, #8]	; (0x2ea08 <get_quoting_style+12>)
   0x0002e9fe <+2>:	00 28	cmp	r0, #0
   0x0002ea00 <+4>:	08 bf	it	eq
   0x0002ea02 <+6>:	18 46	moveq	r0, r3
   0x0002ea04 <+8>:	00 68	ldr	r0, [r0, #0]
   0x0002ea06 <+10>:	70 47	bx	lr
   0x0002ea08 <+12>:	e0 5f	ldrsh	r0, [r4, r7]
   0x0002ea0a <+14>:	04 00	movs	r4, r0
End of assembler dump.
Dump of assembler code for function quote:
   0x0002edb0 <+0>:	01 46	mov	r1, r0
   0x0002edb2 <+2>:	4f f0 ff 32	mov.w	r2, #4294967295
   0x0002edb6 <+6>:	00 20	movs	r0, #0
   0x0002edb8 <+8>:	00 4b	ldr	r3, [pc, #0]	; (0x2edbc <quote+12>)
   0x0002edba <+10>:	71 e5	b.n	0x2e8a0 <quotearg_n_options>
   0x0002edbc <+12>:	1c 57	ldrsb	r4, [r3, r4]
   0x0002edbe <+14>:	04 00	movs	r4, r0
End of assembler dump.
Dump of assembler code for function quote_mem:
   0x0002ed94 <+0>:	0a 46	mov	r2, r1
   0x0002ed96 <+2>:	02 4b	ldr	r3, [pc, #8]	; (0x2eda0 <quote_mem+12>)
   0x0002ed98 <+4>:	01 46	mov	r1, r0
   0x0002ed9a <+6>:	00 20	movs	r0, #0
   0x0002ed9c <+8>:	80 e5	b.n	0x2e8a0 <quotearg_n_options>
   0x0002ed9e <+10>:	00 bf	nop
   0x0002eda0 <+12>:	1c 57	ldrsb	r4, [r3, r4]
   0x0002eda2 <+14>:	04 00	movs	r4, r0
End of assembler dump.
Dump of assembler code for function quote_n:
   0x0002eda4 <+0>:	4f f0 ff 32	mov.w	r2, #4294967295
   0x0002eda8 <+4>:	00 4b	ldr	r3, [pc, #0]	; (0x2edac <quote_n+8>)
   0x0002edaa <+6>:	79 e5	b.n	0x2e8a0 <quotearg_n_options>
   0x0002edac <+8>:	1c 57	ldrsb	r4, [r3, r4]
   0x0002edae <+10>:	04 00	movs	r4, r0
End of assembler dump.
Dump of assembler code for function quote_n_mem:
   0x0002ed8c <+0>:	00 4b	ldr	r3, [pc, #0]	; (0x2ed90 <quote_n_mem+4>)
   0x0002ed8e <+2>:	87 e5	b.n	0x2e8a0 <quotearg_n_options>
   0x0002ed90 <+4>:	1c 57	ldrsb	r4, [r3, r4]
   0x0002ed92 <+6>:	04 00	movs	r4, r0
End of assembler dump.
Dump of assembler code for function quotearg:
   0x0002ebfc <+0>:	01 46	mov	r1, r0
   0x0002ebfe <+2>:	4f f0 ff 32	mov.w	r2, #4294967295
   0x0002ec02 <+6>:	00 20	movs	r0, #0
   0x0002ec04 <+8>:	00 4b	ldr	r3, [pc, #0]	; (0x2ec08 <quotearg+12>)
   0x0002ec06 <+10>:	4b e6	b.n	0x2e8a0 <quotearg_n_options>
   0x0002ec08 <+12>:	e0 5f	ldrsh	r0, [r4, r7]
   0x0002ec0a <+14>:	04 00	movs	r4, r0
End of assembler dump.
Dump of assembler code for function quotearg_alloc:
   0x0002eb78 <+0>:	13 46	mov	r3, r2
   0x0002eb7a <+2>:	00 22	movs	r2, #0
   0x0002eb7c <+4>:	ff f7 b0 bf	b.w	0x2eae0 <quotearg_alloc_mem>
End of assembler dump.
Dump of assembler code for function quotearg_alloc_mem:
   0x0002eae0 <+0>:	2d e9 f0 4f	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
   0x0002eae4 <+4>:	8b b0	sub	sp, #44	; 0x2c
   0x0002eae6 <+6>:	23 4c	ldr	r4, [pc, #140]	; (0x2eb74 <quotearg_alloc_mem+148>)
   0x0002eae8 <+8>:	07 46	mov	r7, r0
   0x0002eaea <+10>:	15 46	mov	r5, r2
   0x0002eaec <+12>:	07 91	str	r1, [sp, #28]
   0x0002eaee <+14>:	00 2b	cmp	r3, #0
   0x0002eaf0 <+16>:	18 bf	it	ne
   0x0002eaf2 <+18>:	1c 46	movne	r4, r3
   0x0002eaf4 <+20>:	dc f7 60 ea	blx	0xafb8 <__errno_location@plt>
   0x0002eaf8 <+24>:	04 f1 08 09	add.w	r9, r4, #8
   0x0002eafc <+28>:	3a 46	mov	r2, r7
   0x0002eafe <+30>:	26 68	ldr	r6, [r4, #0]
   0x0002eb00 <+32>:	61 68	ldr	r1, [r4, #4]
   0x0002eb02 <+34>:	80 46	mov	r8, r0
   0x0002eb04 <+36>:	00 20	movs	r0, #0
   0x0002eb06 <+38>:	d8 f8 00 30	ldr.w	r3, [r8]
   0x0002eb0a <+42>:	85 42	cmp	r5, r0
   0x0002eb0c <+44>:	14 bf	ite	ne
   0x0002eb0e <+46>:	8a 46	movne	r10, r1
   0x0002eb10 <+48>:	41 f0 01 0a	orreq.w	r10, r1, #1
   0x0002eb14 <+52>:	cd f8 08 90	str.w	r9, [sp, #8]
   0x0002eb18 <+56>:	01 46	mov	r1, r0
   0x0002eb1a <+58>:	8d e8 40 04	stmia.w	sp, {r6, r10}
   0x0002eb1e <+62>:	a6 6a	ldr	r6, [r4, #40]	; 0x28
   0x0002eb20 <+64>:	09 93	str	r3, [sp, #36]	; 0x24
   0x0002eb22 <+66>:	07 9b	ldr	r3, [sp, #28]
   0x0002eb24 <+68>:	03 96	str	r6, [sp, #12]
   0x0002eb26 <+70>:	e6 6a	ldr	r6, [r4, #44]	; 0x2c
   0x0002eb28 <+72>:	04 96	str	r6, [sp, #16]
   0x0002eb2a <+74>:	ff f7 b7 fa	bl	0x2e09c <quotearg_buffer_restyled>
   0x0002eb2e <+78>:	41 1c	adds	r1, r0, #1
   0x0002eb30 <+80>:	83 46	mov	r11, r0
   0x0002eb32 <+82>:	08 91	str	r1, [sp, #32]
   0x0002eb34 <+84>:	08 46	mov	r0, r1
   0x0002eb36 <+86>:	00 f0 ff fb	bl	0x2f338 <xmalloc>
   0x0002eb3a <+90>:	26 68	ldr	r6, [r4, #0]
   0x0002eb3c <+92>:	cd f8 04 a0	str.w	r10, [sp, #4]
   0x0002eb40 <+96>:	3a 46	mov	r2, r7
   0x0002eb42 <+98>:	cd f8 08 90	str.w	r9, [sp, #8]
   0x0002eb46 <+102>:	00 96	str	r6, [sp, #0]
   0x0002eb48 <+104>:	a6 6a	ldr	r6, [r4, #40]	; 0x28
   0x0002eb4a <+106>:	08 99	ldr	r1, [sp, #32]
   0x0002eb4c <+108>:	07 9b	ldr	r3, [sp, #28]
   0x0002eb4e <+110>:	03 96	str	r6, [sp, #12]
   0x0002eb50 <+112>:	e4 6a	ldr	r4, [r4, #44]	; 0x2c
   0x0002eb52 <+114>:	04 94	str	r4, [sp, #16]
   0x0002eb54 <+116>:	08 90	str	r0, [sp, #32]
   0x0002eb56 <+118>:	ff f7 a1 fa	bl	0x2e09c <quotearg_buffer_restyled>
   0x0002eb5a <+122>:	09 9e	ldr	r6, [sp, #36]	; 0x24
   0x0002eb5c <+124>:	dd f8 20 c0	ldr.w	r12, [sp, #32]
   0x0002eb60 <+128>:	c8 f8 00 60	str.w	r6, [r8]
   0x0002eb64 <+132>:	0d b1	cbz	r5, 0x2eb6a <quotearg_alloc_mem+138>
   0x0002eb66 <+134>:	c5 f8 00 b0	str.w	r11, [r5]
   0x0002eb6a <+138>:	60 46	mov	r0, r12
   0x0002eb6c <+140>:	0b b0	add	sp, #44	; 0x2c
   0x0002eb6e <+142>:	bd e8 f0 8f	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
   0x0002eb72 <+146>:	00 bf	nop
   0x0002eb74 <+148>:	e0 5f	ldrsh	r0, [r4, r7]
   0x0002eb76 <+150>:	04 00	movs	r4, r0
End of assembler dump.
Dump of assembler code for function quotearg_buffer:
   0x0002ea90 <+0>:	2d e9 f0 47	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
   0x0002ea94 <+4>:	86 b0	sub	sp, #24
   0x0002ea96 <+6>:	06 46	mov	r6, r0
   0x0002ea98 <+8>:	10 48	ldr	r0, [pc, #64]	; (0x2eadc <quotearg_buffer+76>)
   0x0002ea9a <+10>:	0e 9c	ldr	r4, [sp, #56]	; 0x38
   0x0002ea9c <+12>:	8a 46	mov	r10, r1
   0x0002ea9e <+14>:	91 46	mov	r9, r2
   0x0002eaa0 <+16>:	98 46	mov	r8, r3
   0x0002eaa2 <+18>:	00 2c	cmp	r4, #0
   0x0002eaa4 <+20>:	08 bf	it	eq
   0x0002eaa6 <+22>:	04 46	moveq	r4, r0
   0x0002eaa8 <+24>:	dc f7 86 ea	blx	0xafb8 <__errno_location@plt>
   0x0002eaac <+28>:	04 f1 08 0e	add.w	lr, r4, #8
   0x0002eab0 <+32>:	51 46	mov	r1, r10
   0x0002eab2 <+34>:	4a 46	mov	r2, r9
   0x0002eab4 <+36>:	43 46	mov	r3, r8
   0x0002eab6 <+38>:	05 46	mov	r5, r0
   0x0002eab8 <+40>:	30 46	mov	r0, r6
   0x0002eaba <+42>:	26 68	ldr	r6, [r4, #0]
   0x0002eabc <+44>:	2f 68	ldr	r7, [r5, #0]
   0x0002eabe <+46>:	00 96	str	r6, [sp, #0]
   0x0002eac0 <+48>:	66 68	ldr	r6, [r4, #4]
   0x0002eac2 <+50>:	cd f8 08 e0	str.w	lr, [sp, #8]
   0x0002eac6 <+54>:	01 96	str	r6, [sp, #4]
   0x0002eac8 <+56>:	a6 6a	ldr	r6, [r4, #40]	; 0x28
   0x0002eaca <+58>:	03 96	str	r6, [sp, #12]
   0x0002eacc <+60>:	e4 6a	ldr	r4, [r4, #44]	; 0x2c
   0x0002eace <+62>:	04 94	str	r4, [sp, #16]
   0x0002ead0 <+64>:	ff f7 e4 fa	bl	0x2e09c <quotearg_buffer_restyled>
   0x0002ead4 <+68>:	2f 60	str	r7, [r5, #0]
   0x0002ead6 <+70>:	06 b0	add	sp, #24
   0x0002ead8 <+72>:	bd e8 f0 87	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
   0x0002eadc <+76>:	e0 5f	ldrsh	r0, [r4, r7]
   0x0002eade <+78>:	04 00	movs	r4, r0
End of assembler dump.
