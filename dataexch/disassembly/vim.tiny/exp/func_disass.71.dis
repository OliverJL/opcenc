GNU gdb (Ubuntu 7.10-1ubuntu2) 7.10
Copyright (C) 2015 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "arm-linux-gnueabihf".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /usr/bin/vim.tiny...Reading symbols from /usr/lib/debug//usr/bin/vim.tiny...done.
done.
Dump of assembler code for function emsg:
   0x00038428 <+0>:	f8 b5	push	{r3, r4, r5, r6, r7, lr}
   0x0003842a <+2>:	05 46	mov	r5, r0
   0x0003842c <+4>:	46 4c	ldr	r4, [pc, #280]	; (0x38548 <emsg+288>)
   0x0003842e <+6>:	7c 44	add	r4, pc
   0x00038430 <+8>:	fd f7 82 fc	bl	0x35d38 <emsg_not_now>
   0x00038434 <+12>:	00 28	cmp	r0, #0
   0x00038436 <+14>:	73 d1	bne.n	0x38520 <emsg+248>
   0x00038438 <+16>:	44 49	ldr	r1, [pc, #272]	; (0x3854c <emsg+292>)
   0x0003843a <+18>:	01 20	movs	r0, #1
   0x0003843c <+20>:	44 4a	ldr	r2, [pc, #272]	; (0x38550 <emsg+296>)
   0x0003843e <+22>:	45 4b	ldr	r3, [pc, #276]	; (0x38554 <emsg+300>)
   0x00038440 <+24>:	61 58	ldr	r1, [r4, r1]
   0x00038442 <+26>:	08 60	str	r0, [r1, #0]
   0x00038444 <+28>:	a2 58	ldr	r2, [r4, r2]
   0x00038446 <+30>:	10 60	str	r0, [r2, #0]
   0x00038448 <+32>:	e3 58	ldr	r3, [r4, r3]
   0x0003844a <+34>:	1b 68	ldr	r3, [r3, #0]
   0x0003844c <+36>:	00 2b	cmp	r3, #0
   0x0003844e <+38>:	6c d1	bne.n	0x3852a <emsg+258>
   0x00038450 <+40>:	41 4b	ldr	r3, [pc, #260]	; (0x38558 <emsg+304>)
   0x00038452 <+42>:	e3 58	ldr	r3, [r4, r3]
   0x00038454 <+44>:	1b 68	ldr	r3, [r3, #0]
   0x00038456 <+46>:	00 2b	cmp	r3, #0
   0x00038458 <+48>:	37 d1	bne.n	0x384ca <emsg+162>
   0x0003845a <+50>:	40 48	ldr	r0, [pc, #256]	; (0x3855c <emsg+308>)
   0x0003845c <+52>:	40 49	ldr	r1, [pc, #256]	; (0x38560 <emsg+312>)
   0x0003845e <+54>:	41 4a	ldr	r2, [pc, #260]	; (0x38564 <emsg+316>)
   0x00038460 <+56>:	20 58	ldr	r0, [r4, r0]
   0x00038462 <+58>:	03 60	str	r3, [r0, #0]
   0x00038464 <+60>:	61 58	ldr	r1, [r4, r1]
   0x00038466 <+62>:	0b 60	str	r3, [r1, #0]
   0x00038468 <+64>:	a2 58	ldr	r2, [r4, r2]
   0x0003846a <+66>:	13 68	ldr	r3, [r2, #0]
   0x0003846c <+68>:	0b b1	cbz	r3, 0x38472 <emsg+74>
   0x0003846e <+70>:	01 33	adds	r3, #1
   0x00038470 <+72>:	13 60	str	r3, [r2, #0]
   0x00038472 <+74>:	3d 4b	ldr	r3, [pc, #244]	; (0x38568 <emsg+320>)
   0x00038474 <+76>:	e3 58	ldr	r3, [r4, r3]
   0x00038476 <+78>:	18 68	ldr	r0, [r3, #0]
   0x00038478 <+80>:	00 28	cmp	r0, #0
   0x0003847a <+82>:	53 d0	beq.n	0x38524 <emsg+252>
   0x0003847c <+84>:	02 f0 98 ff	bl	0x3b3b0 <beep_flush>
   0x00038480 <+88>:	3a 4b	ldr	r3, [pc, #232]	; (0x3856c <emsg+324>)
   0x00038482 <+90>:	01 22	movs	r2, #1
   0x00038484 <+92>:	e3 58	ldr	r3, [r4, r3]
   0x00038486 <+94>:	1a 60	str	r2, [r3, #0]
   0x00038488 <+96>:	39 4b	ldr	r3, [pc, #228]	; (0x38570 <emsg+328>)
   0x0003848a <+98>:	01 20	movs	r0, #1
   0x0003848c <+100>:	39 49	ldr	r1, [pc, #228]	; (0x38574 <emsg+332>)
   0x0003848e <+102>:	3a 4a	ldr	r2, [pc, #232]	; (0x38578 <emsg+336>)
   0x00038490 <+104>:	e6 58	ldr	r6, [r4, r3]
   0x00038492 <+106>:	3a 4b	ldr	r3, [pc, #232]	; (0x3857c <emsg+340>)
   0x00038494 <+108>:	30 60	str	r0, [r6, #0]
   0x00038496 <+110>:	66 58	ldr	r6, [r4, r1]
   0x00038498 <+112>:	31 68	ldr	r1, [r6, #0]
   0x0003849a <+114>:	01 44	add	r1, r0
   0x0003849c <+116>:	31 60	str	r1, [r6, #0]
   0x0003849e <+118>:	a1 58	ldr	r1, [r4, r2]
   0x000384a0 <+120>:	e2 58	ldr	r2, [r4, r3]
   0x000384a2 <+122>:	0b 68	ldr	r3, [r1, #0]
   0x000384a4 <+124>:	d7 68	ldr	r7, [r2, #12]
   0x000384a6 <+126>:	13 b1	cbz	r3, 0x384ae <emsg+134>
   0x000384a8 <+128>:	35 4b	ldr	r3, [pc, #212]	; (0x38580 <emsg+344>)
   0x000384aa <+130>:	e3 58	ldr	r3, [r4, r3]
   0x000384ac <+132>:	18 60	str	r0, [r3, #0]
   0x000384ae <+134>:	38 46	mov	r0, r7
   0x000384b0 <+136>:	00 26	movs	r6, #0
   0x000384b2 <+138>:	ff f7 05 ff	bl	0x382c0 <msg_source>
   0x000384b6 <+142>:	33 4b	ldr	r3, [pc, #204]	; (0x38584 <emsg+348>)
   0x000384b8 <+144>:	39 46	mov	r1, r7
   0x000384ba <+146>:	28 46	mov	r0, r5
   0x000384bc <+148>:	32 46	mov	r2, r6
   0x000384be <+150>:	e3 58	ldr	r3, [r4, r3]
   0x000384c0 <+152>:	1e 60	str	r6, [r3, #0]
   0x000384c2 <+154>:	bd e8 f8 40	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   0x000384c6 <+158>:	ff f7 55 be	b.w	0x38174 <msg_attr_keep>
   0x000384ca <+162>:	ff f7 d5 fd	bl	0x38078 <msg_start>
   0x000384ce <+166>:	fd f7 91 f8	bl	0x355f4 <get_emsg_source>
   0x000384d2 <+170>:	04 46	mov	r4, r0
   0x000384d4 <+172>:	68 b1	cbz	r0, 0x384f2 <emsg+202>
   0x000384d6 <+174>:	d4 f7 fe ed	blx	0xd0d4 <strlen@plt>
   0x000384da <+178>:	2b 4b	ldr	r3, [pc, #172]	; (0x38588 <emsg+352>)
   0x000384dc <+180>:	4f f0 ff 31	mov.w	r1, #4294967295
   0x000384e0 <+184>:	7b 44	add	r3, pc
   0x000384e2 <+186>:	1b 88	ldrh	r3, [r3, #0]
   0x000384e4 <+188>:	23 52	strh	r3, [r4, r0]
   0x000384e6 <+190>:	20 46	mov	r0, r4
   0x000384e8 <+192>:	fe f7 38 fd	bl	0x36f5c <redir_write>
   0x000384ec <+196>:	20 46	mov	r0, r4
   0x000384ee <+198>:	04 f0 59 ff	bl	0x3d3a4 <vim_free>
   0x000384f2 <+202>:	fd f7 a1 f8	bl	0x35638 <get_emsg_lnum>
   0x000384f6 <+206>:	04 46	mov	r4, r0
   0x000384f8 <+208>:	68 b1	cbz	r0, 0x38516 <emsg+238>
   0x000384fa <+210>:	d4 f7 ec ed	blx	0xd0d4 <strlen@plt>
   0x000384fe <+214>:	23 4b	ldr	r3, [pc, #140]	; (0x3858c <emsg+356>)
   0x00038500 <+216>:	4f f0 ff 31	mov.w	r1, #4294967295
   0x00038504 <+220>:	7b 44	add	r3, pc
   0x00038506 <+222>:	1b 88	ldrh	r3, [r3, #0]
   0x00038508 <+224>:	23 52	strh	r3, [r4, r0]
   0x0003850a <+226>:	20 46	mov	r0, r4
   0x0003850c <+228>:	fe f7 26 fd	bl	0x36f5c <redir_write>
   0x00038510 <+232>:	20 46	mov	r0, r4
   0x00038512 <+234>:	04 f0 47 ff	bl	0x3d3a4 <vim_free>
   0x00038516 <+238>:	28 46	mov	r0, r5
   0x00038518 <+240>:	4f f0 ff 31	mov.w	r1, #4294967295
   0x0003851c <+244>:	fe f7 1e fd	bl	0x36f5c <redir_write>
   0x00038520 <+248>:	01 20	movs	r0, #1
   0x00038522 <+250>:	f8 bd	pop	{r3, r4, r5, r6, r7, pc}
   0x00038524 <+252>:	f4 f7 d4 fa	bl	0x2cad0 <flush_buffers>
   0x00038528 <+256>:	aa e7	b.n	0x38480 <emsg+88>
   0x0003852a <+258>:	19 4b	ldr	r3, [pc, #100]	; (0x38590 <emsg+360>)
   0x0003852c <+260>:	74 21	movs	r1, #116	; 0x74
   0x0003852e <+262>:	e3 58	ldr	r3, [r4, r3]
   0x00038530 <+264>:	18 68	ldr	r0, [r3, #0]
   0x00038532 <+266>:	04 f0 45 ff	bl	0x3d3c0 <vim_strchr>
   0x00038536 <+270>:	00 28	cmp	r0, #0
   0x00038538 <+272>:	a6 d0	beq.n	0x38488 <emsg+96>
   0x0003853a <+274>:	07 4b	ldr	r3, [pc, #28]	; (0x38558 <emsg+304>)
   0x0003853c <+276>:	e3 58	ldr	r3, [r4, r3]
   0x0003853e <+278>:	1b 68	ldr	r3, [r3, #0]
   0x00038540 <+280>:	00 2b	cmp	r3, #0
   0x00038542 <+282>:	8a d0	beq.n	0x3845a <emsg+50>
   0x00038544 <+284>:	c1 e7	b.n	0x384ca <emsg+162>
   0x00038546 <+286>:	00 bf	nop
   0x00038548 <+288>:	6a f2 06 00			; <UNDEFINED> instruction: 0xf26a0006
   0x0003854c <+292>:	a8 06	lsls	r0, r5, #26
   0x0003854e <+294>:	00 00	movs	r0, r0
   0x00038550 <+296>:	10 09	lsrs	r0, r2, #4
   0x00038552 <+298>:	00 00	movs	r0, r0
   0x00038554 <+300>:	bc 07	lsls	r4, r7, #30
   0x00038556 <+302>:	00 00	movs	r0, r0
   0x00038558 <+304>:	d8 08	lsrs	r0, r3, #3
   0x0003855a <+306>:	00 00	movs	r0, r0
   0x0003855c <+308>:	74 02	lsls	r4, r6, #9
   0x0003855e <+310>:	00 00	movs	r0, r0
   0x00038560 <+312>:	20 05	lsls	r0, r4, #20
   0x00038562 <+314>:	00 00	movs	r0, r0
   0x00038564 <+316>:	88 08	lsrs	r0, r1, #2
   0x00038566 <+318>:	00 00	movs	r0, r0
   0x00038568 <+320>:	00 08	lsrs	r0, r0, #32
   0x0003856a <+322>:	00 00	movs	r0, r0
   0x0003856c <+324>:	e8 04	lsls	r0, r5, #19
   0x0003856e <+326>:	00 00	movs	r0, r0
   0x00038570 <+328>:	ec 03	lsls	r4, r5, #15
   0x00038572 <+330>:	00 00	movs	r0, r0
   0x00038574 <+332>:	8c 04	lsls	r4, r1, #18
   0x00038576 <+334>:	00 00	movs	r0, r0
   0x00038578 <+336>:	ac 04	lsls	r4, r5, #18
   0x0003857a <+338>:	00 00	movs	r0, r0
   0x0003857c <+340>:	80 07	lsls	r0, r0, #30
   0x0003857e <+342>:	00 00	movs	r0, r0
   0x00038580 <+344>:	58 08	lsrs	r0, r3, #1
   0x00038582 <+346>:	00 00	movs	r0, r0
   0x00038584 <+348>:	dc 05	lsls	r4, r3, #23
   0x00038586 <+350>:	00 00	movs	r0, r0
   0x00038588 <+352>:	b0 29	cmp	r1, #176	; 0xb0
   0x0003858a <+354>:	05 00	movs	r5, r0
   0x0003858c <+356>:	8c 29	cmp	r1, #140	; 0x8c
   0x0003858e <+358>:	05 00	movs	r5, r0
   0x00038590 <+360>:	9c 04	lsls	r4, r3, #18
   0x00038592 <+362>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function emsg2:
   0x00035d7c <+0>:	00 22	movs	r2, #0
   0x00035d7e <+2>:	08 f0 65 bb	b.w	0x3e44c <emsg3>
End of assembler dump.
Dump of assembler code for function emsg_invreg:
   0x00035d84 <+0>:	08 b5	push	{r3, lr}
   0x00035d86 <+2>:	db f7 6d fb	bl	0x11464 <transchar>
   0x00035d8a <+6>:	00 22	movs	r2, #0
   0x00035d8c <+8>:	bd e8 08 40	ldmia.w	sp!, {r3, lr}
   0x00035d90 <+12>:	01 46	mov	r1, r0
   0x00035d92 <+14>:	02 48	ldr	r0, [pc, #8]	; (0x35d9c <emsg_invreg+24>)
   0x00035d94 <+16>:	78 44	add	r0, pc
   0x00035d96 <+18>:	08 f0 59 bb	b.w	0x3e44c <emsg3>
   0x00035d9a <+22>:	00 bf	nop
   0x00035d9c <+24>:	90 59	ldr	r0, [r2, r6]
   0x00035d9e <+26>:	05 00	movs	r5, r0
End of assembler dump.
Dump of assembler code for function emsg_not_now:
   0x00035d38 <+0>:	0d 4b	ldr	r3, [pc, #52]	; (0x35d70 <emsg_not_now+56>)
   0x00035d3a <+2>:	0e 4a	ldr	r2, [pc, #56]	; (0x35d74 <emsg_not_now+60>)
   0x00035d3c <+4>:	7b 44	add	r3, pc
   0x00035d3e <+6>:	9a 58	ldr	r2, [r3, r2]
   0x00035d40 <+8>:	12 68	ldr	r2, [r2, #0]
   0x00035d42 <+10>:	00 2a	cmp	r2, #0
   0x00035d44 <+12>:	09 dd	ble.n	0x35d5a <emsg_not_now+34>
   0x00035d46 <+14>:	0c 4a	ldr	r2, [pc, #48]	; (0x35d78 <emsg_not_now+64>)
   0x00035d48 <+16>:	6d 21	movs	r1, #109	; 0x6d
   0x00035d4a <+18>:	10 b5	push	{r4, lr}
   0x00035d4c <+20>:	9c 58	ldr	r4, [r3, r2]
   0x00035d4e <+22>:	20 68	ldr	r0, [r4, #0]
   0x00035d50 <+24>:	07 f0 36 fb	bl	0x3d3c0 <vim_strchr>
   0x00035d54 <+28>:	18 b1	cbz	r0, 0x35d5e <emsg_not_now+38>
   0x00035d56 <+30>:	00 20	movs	r0, #0
   0x00035d58 <+32>:	10 bd	pop	{r4, pc}
   0x00035d5a <+34>:	00 20	movs	r0, #0
   0x00035d5c <+36>:	70 47	bx	lr
   0x00035d5e <+38>:	20 68	ldr	r0, [r4, #0]
   0x00035d60 <+40>:	74 21	movs	r1, #116	; 0x74
   0x00035d62 <+42>:	07 f0 2d fb	bl	0x3d3c0 <vim_strchr>
   0x00035d66 <+46>:	b0 fa 80 f0	clz	r0, r0
   0x00035d6a <+50>:	40 09	lsrs	r0, r0, #5
   0x00035d6c <+52>:	10 bd	pop	{r4, pc}
   0x00035d6e <+54>:	00 bf	nop
   0x00035d70 <+56>:	5c 19	adds	r4, r3, r5
   0x00035d72 <+58>:	07 00	movs	r7, r0
   0x00035d74 <+60>:	bc 07	lsls	r4, r7, #30
   0x00035d76 <+62>:	00 00	movs	r0, r0
   0x00035d78 <+64>:	9c 04	lsls	r4, r3, #18
   0x00035d7a <+66>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function ex_messages:
   0x000383b0 <+0>:	70 b5	push	{r4, r5, r6, lr}
   0x000383b2 <+2>:	01 22	movs	r2, #1
   0x000383b4 <+4>:	15 4d	ldr	r5, [pc, #84]	; (0x3840c <ex_messages+92>)
   0x000383b6 <+6>:	16 4b	ldr	r3, [pc, #88]	; (0x38410 <ex_messages+96>)
   0x000383b8 <+8>:	7d 44	add	r5, pc
   0x000383ba <+10>:	16 48	ldr	r0, [pc, #88]	; (0x38414 <ex_messages+100>)
   0x000383bc <+12>:	ee 58	ldr	r6, [r5, r3]
   0x000383be <+14>:	78 44	add	r0, pc
   0x000383c0 <+16>:	32 60	str	r2, [r6, #0]
   0x000383c2 <+18>:	d4 f7 0a ee	blx	0xcfd8 <getenv@plt>
   0x000383c6 <+22>:	08 b1	cbz	r0, 0x383cc <ex_messages+28>
   0x000383c8 <+24>:	03 78	ldrb	r3, [r0, #0]
   0x000383ca <+26>:	ab b9	cbnz	r3, 0x383f8 <ex_messages+72>
   0x000383cc <+28>:	12 4b	ldr	r3, [pc, #72]	; (0x38418 <ex_messages+104>)
   0x000383ce <+30>:	7b 44	add	r3, pc
   0x000383d0 <+32>:	5c 69	ldr	r4, [r3, #20]
   0x000383d2 <+34>:	74 b1	cbz	r4, 0x383f2 <ex_messages+66>
   0x000383d4 <+36>:	11 4b	ldr	r3, [pc, #68]	; (0x3841c <ex_messages+108>)
   0x000383d6 <+38>:	ed 58	ldr	r5, [r5, r3]
   0x000383d8 <+40>:	08 e0	b.n	0x383ec <ex_messages+60>
   0x000383da <+42>:	63 68	ldr	r3, [r4, #4]
   0x000383dc <+44>:	00 22	movs	r2, #0
   0x000383de <+46>:	18 46	mov	r0, r3
   0x000383e0 <+48>:	13 b1	cbz	r3, 0x383e8 <ex_messages+56>
   0x000383e2 <+50>:	a1 68	ldr	r1, [r4, #8]
   0x000383e4 <+52>:	ff f7 c6 fe	bl	0x38174 <msg_attr_keep>
   0x000383e8 <+56>:	24 68	ldr	r4, [r4, #0]
   0x000383ea <+58>:	14 b1	cbz	r4, 0x383f2 <ex_messages+66>
   0x000383ec <+60>:	2b 68	ldr	r3, [r5, #0]
   0x000383ee <+62>:	00 2b	cmp	r3, #0
   0x000383f0 <+64>:	f3 d0	beq.n	0x383da <ex_messages+42>
   0x000383f2 <+66>:	00 23	movs	r3, #0
   0x000383f4 <+68>:	33 60	str	r3, [r6, #0]
   0x000383f6 <+70>:	70 bd	pop	{r4, r5, r6, pc}
   0x000383f8 <+72>:	09 4b	ldr	r3, [pc, #36]	; (0x38420 <ex_messages+112>)
   0x000383fa <+74>:	00 22	movs	r2, #0
   0x000383fc <+76>:	09 48	ldr	r0, [pc, #36]	; (0x38424 <ex_messages+116>)
   0x000383fe <+78>:	eb 58	ldr	r3, [r5, r3]
   0x00038400 <+80>:	78 44	add	r0, pc
   0x00038402 <+82>:	d9 6b	ldr	r1, [r3, #60]	; 0x3c
   0x00038404 <+84>:	ff f7 b6 fe	bl	0x38174 <msg_attr_keep>
   0x00038408 <+88>:	e0 e7	b.n	0x383cc <ex_messages+28>
   0x0003840a <+90>:	00 bf	nop
   0x0003840c <+92>:	e0 f2 06 00			; <UNDEFINED> instruction: 0xf2e00006
   0x00038410 <+96>:	b8 07	lsls	r0, r7, #30
   0x00038412 <+98>:	00 00	movs	r0, r0
   0x00038414 <+100>:	32 01	lsls	r2, r6, #4
   0x00038416 <+102>:	05 00	movs	r5, r0
   0x00038418 <+104>:	9a 78	ldrb	r2, [r3, #2]
   0x0003841a <+106>:	07 00	movs	r7, r0
   0x0003841c <+108>:	44 04	lsls	r4, r0, #17
   0x0003841e <+110>:	00 00	movs	r0, r0
   0x00038420 <+112>:	80 07	lsls	r0, r0, #30
   0x00038422 <+114>:	00 00	movs	r0, r0
   0x00038424 <+116>:	cc 33	adds	r3, #204	; 0xcc
   0x00038426 <+118>:	05 00	movs	r5, r0
End of assembler dump.
Dump of assembler code for function give_warning:
   0x00038594 <+0>:	2d e9 f8 43	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   0x00038598 <+4>:	23 4c	ldr	r4, [pc, #140]	; (0x38628 <give_warning+148>)
   0x0003859a <+6>:	24 4b	ldr	r3, [pc, #144]	; (0x3862c <give_warning+152>)
   0x0003859c <+8>:	7c 44	add	r4, pc
   0x0003859e <+10>:	e3 58	ldr	r3, [r4, r3]
   0x000385a0 <+12>:	1d 68	ldr	r5, [r3, #0]
   0x000385a2 <+14>:	0d b1	cbz	r5, 0x385a8 <give_warning+20>
   0x000385a4 <+16>:	bd e8 f8 83	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   0x000385a8 <+20>:	21 4a	ldr	r2, [pc, #132]	; (0x38630 <give_warning+156>)
   0x000385aa <+22>:	0f 46	mov	r7, r1
   0x000385ac <+24>:	21 4b	ldr	r3, [pc, #132]	; (0x38634 <give_warning+160>)
   0x000385ae <+26>:	06 46	mov	r6, r0
   0x000385b0 <+28>:	54 f8 02 80	ldr.w	r8, [r4, r2]
   0x000385b4 <+32>:	d8 f8 00 20	ldr.w	r2, [r8]
   0x000385b8 <+36>:	01 32	adds	r2, #1
   0x000385ba <+38>:	c8 f8 00 20	str.w	r2, [r8]
   0x000385be <+42>:	54 f8 03 90	ldr.w	r9, [r4, r3]
   0x000385c2 <+46>:	d9 f8 00 00	ldr.w	r0, [r9]
   0x000385c6 <+50>:	04 f0 ed fe	bl	0x3d3a4 <vim_free>
   0x000385ca <+54>:	c9 f8 00 50	str.w	r5, [r9]
   0x000385ce <+58>:	f7 b9	cbnz	r7, 0x3860e <give_warning+122>
   0x000385d0 <+60>:	19 4b	ldr	r3, [pc, #100]	; (0x38638 <give_warning+164>)
   0x000385d2 <+62>:	e7 58	ldr	r7, [r4, r3]
   0x000385d4 <+64>:	3d 60	str	r5, [r7, #0]
   0x000385d6 <+66>:	29 46	mov	r1, r5
   0x000385d8 <+68>:	00 22	movs	r2, #0
   0x000385da <+70>:	30 46	mov	r0, r6
   0x000385dc <+72>:	ff f7 ca fd	bl	0x38174 <msg_attr_keep>
   0x000385e0 <+76>:	18 b1	cbz	r0, 0x385ea <give_warning+86>
   0x000385e2 <+78>:	16 4b	ldr	r3, [pc, #88]	; (0x3863c <give_warning+168>)
   0x000385e4 <+80>:	e3 58	ldr	r3, [r4, r3]
   0x000385e6 <+82>:	1b 68	ldr	r3, [r3, #0]
   0x000385e8 <+84>:	c3 b1	cbz	r3, 0x3861c <give_warning+136>
   0x000385ea <+86>:	15 4b	ldr	r3, [pc, #84]	; (0x38640 <give_warning+172>)
   0x000385ec <+88>:	00 20	movs	r0, #0
   0x000385ee <+90>:	15 49	ldr	r1, [pc, #84]	; (0x38644 <give_warning+176>)
   0x000385f0 <+92>:	01 25	movs	r5, #1
   0x000385f2 <+94>:	15 4a	ldr	r2, [pc, #84]	; (0x38648 <give_warning+180>)
   0x000385f4 <+96>:	e6 58	ldr	r6, [r4, r3]
   0x000385f6 <+98>:	d8 f8 00 30	ldr.w	r3, [r8]
   0x000385fa <+102>:	30 60	str	r0, [r6, #0]
   0x000385fc <+104>:	01 3b	subs	r3, #1
   0x000385fe <+106>:	61 58	ldr	r1, [r4, r1]
   0x00038600 <+108>:	0d 60	str	r5, [r1, #0]
   0x00038602 <+110>:	a2 58	ldr	r2, [r4, r2]
   0x00038604 <+112>:	c8 f8 00 30	str.w	r3, [r8]
   0x00038608 <+116>:	10 60	str	r0, [r2, #0]
   0x0003860a <+118>:	bd e8 f8 83	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   0x0003860e <+122>:	0f 4a	ldr	r2, [pc, #60]	; (0x3864c <give_warning+184>)
   0x00038610 <+124>:	09 4b	ldr	r3, [pc, #36]	; (0x38638 <give_warning+164>)
   0x00038612 <+126>:	a2 58	ldr	r2, [r4, r2]
   0x00038614 <+128>:	e7 58	ldr	r7, [r4, r3]
   0x00038616 <+130>:	95 6c	ldr	r5, [r2, #72]	; 0x48
   0x00038618 <+132>:	3d 60	str	r5, [r7, #0]
   0x0003861a <+134>:	dc e7	b.n	0x385d6 <give_warning+66>
   0x0003861c <+136>:	39 68	ldr	r1, [r7, #0]
   0x0003861e <+138>:	30 46	mov	r0, r6
   0x00038620 <+140>:	fd f7 9c fc	bl	0x35f5c <set_keep_msg>
   0x00038624 <+144>:	e1 e7	b.n	0x385ea <give_warning+86>
   0x00038626 <+146>:	00 bf	nop
   0x00038628 <+148>:	fc f0 06 00			; <UNDEFINED> instruction: 0xf0fc0006
   0x0003862c <+152>:	74 02	lsls	r4, r6, #9
   0x0003862e <+154>:	00 00	movs	r0, r0
   0x00038630 <+156>:	e4 04	lsls	r4, r4, #19
   0x00038632 <+158>:	00 00	movs	r0, r0
   0x00038634 <+160>:	9c 08	lsrs	r4, r3, #2
   0x00038636 <+162>:	00 00	movs	r0, r0
   0x00038638 <+164>:	0c 04	lsls	r4, r1, #16
   0x0003863a <+166>:	00 00	movs	r0, r0
   0x0003863c <+168>:	ac 04	lsls	r4, r5, #18
   0x0003863e <+170>:	00 00	movs	r0, r0
   0x00038640 <+172>:	54 04	lsls	r4, r2, #17
   0x00038642 <+174>:	00 00	movs	r0, r0
   0x00038644 <+176>:	dc 05	lsls	r4, r3, #23
   0x00038646 <+178>:	00 00	movs	r0, r0
   0x00038648 <+180>:	e0 06	lsls	r0, r4, #27
   0x0003864a <+182>:	00 00	movs	r0, r0
   0x0003864c <+184>:	80 07	lsls	r0, r0, #30
   0x0003864e <+186>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function may_clear_sb_text:
   0x000361c0 <+0>:	02 4b	ldr	r3, [pc, #8]	; (0x361cc <may_clear_sb_text+12>)
   0x000361c2 <+2>:	01 22	movs	r2, #1
   0x000361c4 <+4>:	7b 44	add	r3, pc
   0x000361c6 <+6>:	9a 60	str	r2, [r3, #8]
   0x000361c8 <+8>:	70 47	bx	lr
   0x000361ca <+10>:	00 bf	nop
   0x000361cc <+12>:	a4 9a	ldr	r2, [sp, #656]	; 0x290
   0x000361ce <+14>:	07 00	movs	r7, r0
End of assembler dump.
Dump of assembler code for function msg:
   0x000382b0 <+0>:	00 22	movs	r2, #0
   0x000382b2 <+2>:	11 46	mov	r1, r2
   0x000382b4 <+4>:	ff f7 5e bf	b.w	0x38174 <msg_attr_keep>
End of assembler dump.
Dump of assembler code for function msg_advance:
   0x00038650 <+0>:	38 b5	push	{r3, r4, r5, lr}
   0x00038652 <+2>:	04 46	mov	r4, r0
   0x00038654 <+4>:	0e 4b	ldr	r3, [pc, #56]	; (0x38690 <msg_advance+64>)
   0x00038656 <+6>:	0f 4a	ldr	r2, [pc, #60]	; (0x38694 <msg_advance+68>)
   0x00038658 <+8>:	7b 44	add	r3, pc
   0x0003865a <+10>:	9a 58	ldr	r2, [r3, r2]
   0x0003865c <+12>:	12 68	ldr	r2, [r2, #0]
   0x0003865e <+14>:	9a b9	cbnz	r2, 0x38688 <msg_advance+56>
   0x00038660 <+16>:	0d 4a	ldr	r2, [pc, #52]	; (0x38698 <msg_advance+72>)
   0x00038662 <+18>:	9a 58	ldr	r2, [r3, r2]
   0x00038664 <+20>:	12 68	ldr	r2, [r2, #0]
   0x00038666 <+22>:	90 42	cmp	r0, r2
   0x00038668 <+24>:	a8 bf	it	ge
   0x0003866a <+26>:	02 f1 ff 34	addge.w	r4, r2, #4294967295
   0x0003866e <+30>:	0b 4a	ldr	r2, [pc, #44]	; (0x3869c <msg_advance+76>)
   0x00038670 <+32>:	9d 58	ldr	r5, [r3, r2]
   0x00038672 <+34>:	2b 68	ldr	r3, [r5, #0]
   0x00038674 <+36>:	a3 42	cmp	r3, r4
   0x00038676 <+38>:	06 da	bge.n	0x38686 <msg_advance+54>
   0x00038678 <+40>:	00 21	movs	r1, #0
   0x0003867a <+42>:	20 20	movs	r0, #32
   0x0003867c <+44>:	fe f7 fa fd	bl	0x37274 <msg_putchar_attr>
   0x00038680 <+48>:	2b 68	ldr	r3, [r5, #0]
   0x00038682 <+50>:	9c 42	cmp	r4, r3
   0x00038684 <+52>:	f8 dc	bgt.n	0x38678 <msg_advance+40>
   0x00038686 <+54>:	38 bd	pop	{r3, r4, r5, pc}
   0x00038688 <+56>:	04 4a	ldr	r2, [pc, #16]	; (0x3869c <msg_advance+76>)
   0x0003868a <+58>:	9b 58	ldr	r3, [r3, r2]
   0x0003868c <+60>:	18 60	str	r0, [r3, #0]
   0x0003868e <+62>:	38 bd	pop	{r3, r4, r5, pc}
   0x00038690 <+64>:	40 f0 06 00	orr.w	r0, r0, #6
   0x00038694 <+68>:	74 02	lsls	r4, r6, #9
   0x00038696 <+70>:	00 00	movs	r0, r0
   0x00038698 <+72>:	fc 07	lsls	r4, r7, #31
   0x0003869a <+74>:	00 00	movs	r0, r0
   0x0003869c <+76>:	e0 06	lsls	r0, r4, #27
   0x0003869e <+78>:	00 00	movs	r0, r0
End of assembler dump.
