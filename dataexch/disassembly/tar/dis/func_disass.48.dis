GNU gdb (Ubuntu 7.10-1ubuntu2) 7.10
Copyright (C) 2015 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "arm-linux-gnueabihf".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /bin/tar...Reading symbols from /usr/lib/debug//bin/tar...done.
done.
Dump of assembler code for function chown_error_details:
   0x000238ac <+0>:	2d e9 f0 41	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   0x000238b0 <+4>:	82 b0	sub	sp, #8
   0x000238b2 <+6>:	0d 46	mov	r5, r1
   0x000238b4 <+8>:	14 46	mov	r4, r2
   0x000238b6 <+10>:	07 46	mov	r7, r0
   0x000238b8 <+12>:	e7 f7 7e eb	blx	0xafb8 <__errno_location@plt>
   0x000238bc <+16>:	05 22	movs	r2, #5
   0x000238be <+18>:	48 f6 8c 61	movw	r1, #36492	; 0x8e8c
   0x000238c2 <+22>:	c0 f2 03 01	movt	r1, #3
   0x000238c6 <+26>:	06 68	ldr	r6, [r0, #0]
   0x000238c8 <+28>:	00 20	movs	r0, #0
   0x000238ca <+30>:	e7 f7 a6 e9	blx	0xac18 <dcgettext@plt>
   0x000238ce <+34>:	80 46	mov	r8, r0
   0x000238d0 <+36>:	38 46	mov	r0, r7
   0x000238d2 <+38>:	0b f0 09 fa	bl	0x2ece8 <quotearg_colon>
   0x000238d6 <+42>:	42 46	mov	r2, r8
   0x000238d8 <+44>:	31 46	mov	r1, r6
   0x000238da <+46>:	00 95	str	r5, [sp, #0]
   0x000238dc <+48>:	01 94	str	r4, [sp, #4]
   0x000238de <+50>:	03 46	mov	r3, r0
   0x000238e0 <+52>:	00 20	movs	r0, #0
   0x000238e2 <+54>:	e7 f7 6e ea	blx	0xadc0 <error@plt+4>
   0x000238e6 <+58>:	45 f6 ac 63	movw	r3, #24236	; 0x5eac
   0x000238ea <+62>:	c0 f2 04 03	movt	r3, #4
   0x000238ee <+66>:	02 22	movs	r2, #2
   0x000238f0 <+68>:	1a 60	str	r2, [r3, #0]
   0x000238f2 <+70>:	02 b0	add	sp, #8
   0x000238f4 <+72>:	bd e8 f0 81	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
End of assembler dump.
Dump of assembler code for function close_error:
   0x000238f8 <+0>:	01 46	mov	r1, r0
   0x000238fa <+2>:	48 f6 bc 60	movw	r0, #36540	; 0x8ebc
   0x000238fe <+6>:	c0 f2 03 00	movt	r0, #3
   0x00023902 <+10>:	ff f7 43 bf	b.w	0x2378c <call_arg_error>
End of assembler dump.
Dump of assembler code for function close_warn:
   0x00023908 <+0>:	01 46	mov	r1, r0
   0x0002390a <+2>:	48 f6 bc 60	movw	r0, #36540	; 0x8ebc
   0x0002390e <+6>:	c0 f2 03 00	movt	r0, #3
   0x00023912 <+10>:	ff f7 79 bf	b.w	0x23808 <call_arg_warn>
End of assembler dump.
Dump of assembler code for function exec_fatal:
   0x00023918 <+0>:	01 46	mov	r1, r0
   0x0002391a <+2>:	48 f6 c4 60	movw	r0, #36548	; 0x8ec4
   0x0002391e <+6>:	08 b5	push	{r3, lr}
   0x00023920 <+8>:	c0 f2 03 00	movt	r0, #3
   0x00023924 <+12>:	ff f7 54 ff	bl	0x237d0 <call_arg_fatal>
End of assembler dump.
Dump of assembler code for function link_error:
   0x00023928 <+0>:	f0 b5	push	{r4, r5, r6, r7, lr}
   0x0002392a <+2>:	83 b0	sub	sp, #12
   0x0002392c <+4>:	0d 46	mov	r5, r1
   0x0002392e <+6>:	06 46	mov	r6, r0
   0x00023930 <+8>:	e7 f7 42 eb	blx	0xafb8 <__errno_location@plt>
   0x00023934 <+12>:	05 22	movs	r2, #5
   0x00023936 <+14>:	48 f6 cc 61	movw	r1, #36556	; 0x8ecc
   0x0002393a <+18>:	c0 f2 03 01	movt	r1, #3
   0x0002393e <+22>:	04 68	ldr	r4, [r0, #0]
   0x00023940 <+24>:	00 20	movs	r0, #0
   0x00023942 <+26>:	e7 f7 6a e9	blx	0xac18 <dcgettext@plt>
   0x00023946 <+30>:	07 46	mov	r7, r0
   0x00023948 <+32>:	28 46	mov	r0, r5
   0x0002394a <+34>:	0b f0 cd f9	bl	0x2ece8 <quotearg_colon>
   0x0002394e <+38>:	31 46	mov	r1, r6
   0x00023950 <+40>:	05 46	mov	r5, r0
   0x00023952 <+42>:	01 20	movs	r0, #1
   0x00023954 <+44>:	0b f0 26 fa	bl	0x2eda4 <quote_n>
   0x00023958 <+48>:	3a 46	mov	r2, r7
   0x0002395a <+50>:	2b 46	mov	r3, r5
   0x0002395c <+52>:	21 46	mov	r1, r4
   0x0002395e <+54>:	00 90	str	r0, [sp, #0]
   0x00023960 <+56>:	00 20	movs	r0, #0
   0x00023962 <+58>:	e7 f7 2e ea	blx	0xadc0 <error@plt+4>
   0x00023966 <+62>:	45 f6 ac 63	movw	r3, #24236	; 0x5eac
   0x0002396a <+66>:	c0 f2 04 03	movt	r3, #4
   0x0002396e <+70>:	02 22	movs	r2, #2
   0x00023970 <+72>:	1a 60	str	r2, [r3, #0]
   0x00023972 <+74>:	03 b0	add	sp, #12
   0x00023974 <+76>:	f0 bd	pop	{r4, r5, r6, r7, pc}
End of assembler dump.
Dump of assembler code for function mkdir_error:
   0x00023978 <+0>:	01 46	mov	r1, r0
   0x0002397a <+2>:	48 f6 e8 60	movw	r0, #36584	; 0x8ee8
   0x0002397e <+6>:	c0 f2 03 00	movt	r0, #3
   0x00023982 <+10>:	ff f7 03 bf	b.w	0x2378c <call_arg_error>
End of assembler dump.
Dump of assembler code for function mkfifo_error:
   0x00023988 <+0>:	01 46	mov	r1, r0
   0x0002398a <+2>:	48 f6 f0 60	movw	r0, #36592	; 0x8ef0
   0x0002398e <+6>:	c0 f2 03 00	movt	r0, #3
   0x00023992 <+10>:	ff f7 fb be	b.w	0x2378c <call_arg_error>
End of assembler dump.
Dump of assembler code for function mknod_error:
   0x00023998 <+0>:	01 46	mov	r1, r0
   0x0002399a <+2>:	48 f6 f8 60	movw	r0, #36600	; 0x8ef8
   0x0002399e <+6>:	c0 f2 03 00	movt	r0, #3
   0x000239a2 <+10>:	ff f7 f3 be	b.w	0x2378c <call_arg_error>
End of assembler dump.
Dump of assembler code for function open_error:
   0x000239a8 <+0>:	01 46	mov	r1, r0
   0x000239aa <+2>:	48 f6 00 70	movw	r0, #36608	; 0x8f00
   0x000239ae <+6>:	c0 f2 03 00	movt	r0, #3
   0x000239b2 <+10>:	ff f7 eb be	b.w	0x2378c <call_arg_error>
End of assembler dump.
