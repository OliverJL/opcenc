GNU gdb (Ubuntu 7.10-1ubuntu2) 7.10
Copyright (C) 2015 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "arm-linux-gnueabihf".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /usr/bin/vim.tiny...Reading symbols from /usr/lib/debug//usr/bin/vim.tiny...done.
done.
Dump of assembler code for function ins_s_left:
   0x00012fb4 <+0>:	38 b5	push	{r3, r4, r5, lr}
   0x00012fb6 <+2>:	13 4c	ldr	r4, [pc, #76]	; (0x13004 <ins_s_left+80>)
   0x00012fb8 <+4>:	13 4b	ldr	r3, [pc, #76]	; (0x13008 <ins_s_left+84>)
   0x00012fba <+6>:	7c 44	add	r4, pc
   0x00012fbc <+8>:	e3 58	ldr	r3, [r4, r3]
   0x00012fbe <+10>:	1b 68	ldr	r3, [r3, #0]
   0x00012fc0 <+12>:	00 2b	cmp	r3, #0
   0x00012fc2 <+14>:	01 db	blt.n	0x12fc8 <ins_s_left+20>
   0x00012fc4 <+16>:	ff f7 74 fb	bl	0x126b0 <undisplay_dollar>
   0x00012fc8 <+20>:	10 4b	ldr	r3, [pc, #64]	; (0x1300c <ins_s_left+88>)
   0x00012fca <+22>:	e5 58	ldr	r5, [r4, r3]
   0x00012fcc <+24>:	28 68	ldr	r0, [r5, #0]
   0x00012fce <+26>:	03 69	ldr	r3, [r0, #16]
   0x00012fd0 <+28>:	01 2b	cmp	r3, #1
   0x00012fd2 <+30>:	0f dd	ble.n	0x12ff4 <ins_s_left+64>
   0x00012fd4 <+32>:	0e 4b	ldr	r3, [pc, #56]	; (0x13010 <ins_s_left+92>)
   0x00012fd6 <+34>:	e3 58	ldr	r3, [r4, r3]
   0x00012fd8 <+36>:	1b 68	ldr	r3, [r3, #0]
   0x00012fda <+38>:	13 b9	cbnz	r3, 0x12fe2 <ins_s_left+46>
   0x00012fdc <+40>:	10 30	adds	r0, #16
   0x00012fde <+42>:	ff f7 d1 ff	bl	0x12f84 <start_arrow>
   0x00012fe2 <+46>:	00 22	movs	r2, #0
   0x00012fe4 <+48>:	01 20	movs	r0, #1
   0x00012fe6 <+50>:	11 46	mov	r1, r2
   0x00012fe8 <+52>:	65 f0 f4 fc	bl	0x789d4 <bck_word>
   0x00012fec <+56>:	2b 68	ldr	r3, [r5, #0]
   0x00012fee <+58>:	01 22	movs	r2, #1
   0x00012ff0 <+60>:	da 61	str	r2, [r3, #28]
   0x00012ff2 <+62>:	38 bd	pop	{r3, r4, r5, pc}
   0x00012ff4 <+64>:	43 69	ldr	r3, [r0, #20]
   0x00012ff6 <+66>:	00 2b	cmp	r3, #0
   0x00012ff8 <+68>:	ec dc	bgt.n	0x12fd4 <ins_s_left+32>
   0x00012ffa <+70>:	bd e8 38 40	ldmia.w	sp!, {r3, r4, r5, lr}
   0x00012ffe <+74>:	28 f0 a1 b9	b.w	0x3b344 <vim_beep>
   0x00013002 <+78>:	00 bf	nop
   0x00013004 <+80>:	de 46	mov	lr, r11
   0x00013006 <+82>:	09 00	movs	r1, r1
   0x00013008 <+84>:	78 07	lsls	r0, r7, #29
   0x0001300a <+86>:	00 00	movs	r0, r0
   0x0001300c <+88>:	24 04	lsls	r4, r4, #16
   0x0001300e <+90>:	00 00	movs	r0, r0
   0x00013010 <+92>:	30 08	lsrs	r0, r6, #32
   0x00013012 <+94>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function ins_s_right:
   0x00013014 <+0>:	38 b5	push	{r3, r4, r5, lr}
   0x00013016 <+2>:	16 4c	ldr	r4, [pc, #88]	; (0x13070 <ins_s_right+92>)
   0x00013018 <+4>:	16 4b	ldr	r3, [pc, #88]	; (0x13074 <ins_s_right+96>)
   0x0001301a <+6>:	7c 44	add	r4, pc
   0x0001301c <+8>:	e3 58	ldr	r3, [r4, r3]
   0x0001301e <+10>:	1b 68	ldr	r3, [r3, #0]
   0x00013020 <+12>:	00 2b	cmp	r3, #0
   0x00013022 <+14>:	01 db	blt.n	0x13028 <ins_s_right+20>
   0x00013024 <+16>:	ff f7 44 fb	bl	0x126b0 <undisplay_dollar>
   0x00013028 <+20>:	13 4a	ldr	r2, [pc, #76]	; (0x13078 <ins_s_right+100>)
   0x0001302a <+22>:	14 4b	ldr	r3, [pc, #80]	; (0x1307c <ins_s_right+104>)
   0x0001302c <+24>:	a5 58	ldr	r5, [r4, r2]
   0x0001302e <+26>:	e3 58	ldr	r3, [r4, r3]
   0x00013030 <+28>:	28 68	ldr	r0, [r5, #0]
   0x00013032 <+30>:	1b 68	ldr	r3, [r3, #0]
   0x00013034 <+32>:	02 69	ldr	r2, [r0, #16]
   0x00013036 <+34>:	1b 68	ldr	r3, [r3, #0]
   0x00013038 <+36>:	9a 42	cmp	r2, r3
   0x0001303a <+38>:	0f da	bge.n	0x1305c <ins_s_right+72>
   0x0001303c <+40>:	10 4b	ldr	r3, [pc, #64]	; (0x13080 <ins_s_right+108>)
   0x0001303e <+42>:	e3 58	ldr	r3, [r4, r3]
   0x00013040 <+44>:	1b 68	ldr	r3, [r3, #0]
   0x00013042 <+46>:	13 b9	cbnz	r3, 0x1304a <ins_s_right+54>
   0x00013044 <+48>:	10 30	adds	r0, #16
   0x00013046 <+50>:	ff f7 9d ff	bl	0x12f84 <start_arrow>
   0x0001304a <+54>:	00 22	movs	r2, #0
   0x0001304c <+56>:	01 20	movs	r0, #1
   0x0001304e <+58>:	11 46	mov	r1, r2
   0x00013050 <+60>:	65 f0 5c fc	bl	0x7890c <fwd_word>
   0x00013054 <+64>:	2b 68	ldr	r3, [r5, #0]
   0x00013056 <+66>:	01 22	movs	r2, #1
   0x00013058 <+68>:	da 61	str	r2, [r3, #28]
   0x0001305a <+70>:	38 bd	pop	{r3, r4, r5, pc}
   0x0001305c <+72>:	26 f0 da fb	bl	0x39814 <gchar_cursor>
   0x00013060 <+76>:	08 b1	cbz	r0, 0x13066 <ins_s_right+82>
   0x00013062 <+78>:	28 68	ldr	r0, [r5, #0]
   0x00013064 <+80>:	ea e7	b.n	0x1303c <ins_s_right+40>
   0x00013066 <+82>:	bd e8 38 40	ldmia.w	sp!, {r3, r4, r5, lr}
   0x0001306a <+86>:	28 f0 6b b9	b.w	0x3b344 <vim_beep>
   0x0001306e <+90>:	00 bf	nop
   0x00013070 <+92>:	7e 46	mov	r6, pc
   0x00013072 <+94>:	09 00	movs	r1, r1
   0x00013074 <+96>:	78 07	lsls	r0, r7, #29
   0x00013076 <+98>:	00 00	movs	r0, r0
   0x00013078 <+100>:	24 04	lsls	r4, r4, #16
   0x0001307a <+102>:	00 00	movs	r0, r0
   0x0001307c <+104>:	b0 07	lsls	r0, r6, #30
   0x0001307e <+106>:	00 00	movs	r0, r0
   0x00013080 <+108>:	30 08	lsrs	r0, r6, #32
   0x00013082 <+110>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function ins_up:
   0x00013d00 <+0>:	2d e9 f0 43	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   0x00013d04 <+4>:	85 b0	sub	sp, #20
   0x00013d06 <+6>:	22 4c	ldr	r4, [pc, #136]	; (0x13d90 <ins_up+144>)
   0x00013d08 <+8>:	06 46	mov	r6, r0
   0x00013d0a <+10>:	22 49	ldr	r1, [pc, #136]	; (0x13d94 <ins_up+148>)
   0x00013d0c <+12>:	7c 44	add	r4, pc
   0x00013d0e <+14>:	22 4a	ldr	r2, [pc, #136]	; (0x13d98 <ins_up+152>)
   0x00013d10 <+16>:	22 4b	ldr	r3, [pc, #136]	; (0x13d9c <ins_up+156>)
   0x00013d12 <+18>:	65 58	ldr	r5, [r4, r1]
   0x00013d14 <+20>:	29 68	ldr	r1, [r5, #0]
   0x00013d16 <+22>:	03 91	str	r1, [sp, #12]
   0x00013d18 <+24>:	a7 58	ldr	r7, [r4, r2]
   0x00013d1a <+26>:	e2 58	ldr	r2, [r4, r3]
   0x00013d1c <+28>:	3b 68	ldr	r3, [r7, #0]
   0x00013d1e <+30>:	12 68	ldr	r2, [r2, #0]
   0x00013d20 <+32>:	00 2a	cmp	r2, #0
   0x00013d22 <+34>:	d3 f8 3c 90	ldr.w	r9, [r3, #60]	; 0x3c
   0x00013d26 <+38>:	02 db	blt.n	0x13d2e <ins_up+46>
   0x00013d28 <+40>:	fe f7 c2 fc	bl	0x126b0 <undisplay_dollar>
   0x00013d2c <+44>:	3b 68	ldr	r3, [r7, #0]
   0x00013d2e <+46>:	10 33	adds	r3, #16
   0x00013d30 <+48>:	0d f1 04 08	add.w	r8, sp, #4
   0x00013d34 <+52>:	93 e8 03 00	ldmia.w	r3, {r0, r1}
   0x00013d38 <+56>:	88 e8 03 00	stmia.w	r8, {r0, r1}
   0x00013d3c <+60>:	01 21	movs	r1, #1
   0x00013d3e <+62>:	08 46	mov	r0, r1
   0x00013d40 <+64>:	ff f7 ae ff	bl	0x13ca0 <cursor_up>
   0x00013d44 <+68>:	01 28	cmp	r0, #1
   0x00013d46 <+70>:	08 d0	beq.n	0x13d5a <ins_up+90>
   0x00013d48 <+72>:	27 f0 fc fa	bl	0x3b344 <vim_beep>
   0x00013d4c <+76>:	03 9a	ldr	r2, [sp, #12]
   0x00013d4e <+78>:	2b 68	ldr	r3, [r5, #0]
   0x00013d50 <+80>:	9a 42	cmp	r2, r3
   0x00013d52 <+82>:	1a d1	bne.n	0x13d8a <ins_up+138>
   0x00013d54 <+84>:	05 b0	add	sp, #20
   0x00013d56 <+86>:	bd e8 f0 83	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   0x00013d5a <+90>:	7e b9	cbnz	r6, 0x13d7c <ins_up+124>
   0x00013d5c <+92>:	3b 68	ldr	r3, [r7, #0]
   0x00013d5e <+94>:	db 6b	ldr	r3, [r3, #60]	; 0x3c
   0x00013d60 <+96>:	99 45	cmp	r9, r3
   0x00013d62 <+98>:	02 d0	beq.n	0x13d6a <ins_up+106>
   0x00013d64 <+100>:	0a 20	movs	r0, #10
   0x00013d66 <+102>:	5b f0 1f fa	bl	0x6f1a8 <redraw_later>
   0x00013d6a <+106>:	0d 4b	ldr	r3, [pc, #52]	; (0x13da0 <ins_up+160>)
   0x00013d6c <+108>:	e3 58	ldr	r3, [r4, r3]
   0x00013d6e <+110>:	1b 68	ldr	r3, [r3, #0]
   0x00013d70 <+112>:	00 2b	cmp	r3, #0
   0x00013d72 <+114>:	eb d1	bne.n	0x13d4c <ins_up+76>
   0x00013d74 <+116>:	40 46	mov	r0, r8
   0x00013d76 <+118>:	ff f7 05 f9	bl	0x12f84 <start_arrow>
   0x00013d7a <+122>:	e7 e7	b.n	0x13d4c <ins_up+76>
   0x00013d7c <+124>:	09 4b	ldr	r3, [pc, #36]	; (0x13da4 <ins_up+164>)
   0x00013d7e <+126>:	e0 58	ldr	r0, [r4, r3]
   0x00013d80 <+128>:	fd f7 b0 fe	bl	0x11ae4 <getvcol_nolist>
   0x00013d84 <+132>:	29 f0 c6 f8	bl	0x3cf14 <coladvance>
   0x00013d88 <+136>:	e8 e7	b.n	0x13d5c <ins_up+92>
   0x00013d8a <+138>:	f9 f7 6a e8	blx	0xce60 <__stack_chk_fail@plt>
   0x00013d8e <+142>:	00 bf	nop
   0x00013d90 <+144>:	8c 39	subs	r1, #140	; 0x8c
   0x00013d92 <+146>:	09 00	movs	r1, r1
   0x00013d94 <+148>:	78 03	lsls	r0, r7, #13
   0x00013d96 <+150>:	00 00	movs	r0, r0
   0x00013d98 <+152>:	24 04	lsls	r4, r4, #16
   0x00013d9a <+154>:	00 00	movs	r0, r0
   0x00013d9c <+156>:	78 07	lsls	r0, r7, #29
   0x00013d9e <+158>:	00 00	movs	r0, r0
   0x00013da0 <+160>:	30 08	lsrs	r0, r6, #32
   0x00013da2 <+162>:	00 00	movs	r0, r0
   0x00013da4 <+164>:	30 04	lsls	r0, r6, #16
   0x00013da6 <+166>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function insert_special:
   0x00013a04 <+0>:	f8 b5	push	{r3, r4, r5, r6, r7, lr}
   0x00013a06 <+2>:	15 46	mov	r5, r2
   0x00013a08 <+4>:	1c 4b	ldr	r3, [pc, #112]	; (0x13a7c <insert_special+120>)
   0x00013a0a <+6>:	04 1e	subs	r4, r0, #0
   0x00013a0c <+8>:	1c 4a	ldr	r2, [pc, #112]	; (0x13a80 <insert_special+124>)
   0x00013a0e <+10>:	7b 44	add	r3, pc
   0x00013a10 <+12>:	9b 58	ldr	r3, [r3, r2]
   0x00013a12 <+14>:	1b 68	ldr	r3, [r3, #0]
   0x00013a14 <+16>:	08 db	blt.n	0x13a28 <insert_special+36>
   0x00013a16 <+18>:	00 29	cmp	r1, #0
   0x00013a18 <+20>:	18 bf	it	ne
   0x00013a1a <+22>:	00 2b	cmpne	r3, #0
   0x00013a1c <+24>:	04 d1	bne.n	0x13a28 <insert_special+36>
   0x00013a1e <+26>:	ff f7 81 ff	bl	0x13924 <stop_arrow>
   0x00013a22 <+30>:	01 28	cmp	r0, #1
   0x00013a24 <+32>:	1f d0	beq.n	0x13a66 <insert_special+98>
   0x00013a26 <+34>:	f8 bd	pop	{r3, r4, r5, r6, r7, pc}
   0x00013a28 <+36>:	19 46	mov	r1, r3
   0x00013a2a <+38>:	20 46	mov	r0, r4
   0x00013a2c <+40>:	29 f0 2a ff	bl	0x3d884 <get_special_key_name>
   0x00013a30 <+44>:	06 46	mov	r6, r0
   0x00013a32 <+46>:	f9 f7 50 eb	blx	0xd0d4 <strlen@plt>
   0x00013a36 <+50>:	47 1e	subs	r7, r0, #1
   0x00013a38 <+52>:	02 28	cmp	r0, #2
   0x00013a3a <+54>:	f4 5d	ldrb	r4, [r6, r7]
   0x00013a3c <+56>:	ef dd	ble.n	0x13a1e <insert_special+26>
   0x00013a3e <+58>:	ff f7 71 ff	bl	0x13924 <stop_arrow>
   0x00013a42 <+62>:	00 28	cmp	r0, #0
   0x00013a44 <+64>:	ef d0	beq.n	0x13a26 <insert_special+34>
   0x00013a46 <+66>:	30 46	mov	r0, r6
   0x00013a48 <+68>:	00 25	movs	r5, #0
   0x00013a4a <+70>:	f5 55	strb	r5, [r6, r7]
   0x00013a4c <+72>:	26 f0 50 fd	bl	0x3a4f0 <ins_str>
   0x00013a50 <+76>:	30 46	mov	r0, r6
   0x00013a52 <+78>:	4f f0 ff 31	mov.w	r1, #4294967295
   0x00013a56 <+82>:	18 f0 49 fa	bl	0x2beec <AppendToRedobuffLit>
   0x00013a5a <+86>:	ff f7 63 ff	bl	0x13924 <stop_arrow>
   0x00013a5e <+90>:	01 28	cmp	r0, #1
   0x00013a60 <+92>:	e1 d1	bne.n	0x13a26 <insert_special+34>
   0x00013a62 <+94>:	29 46	mov	r1, r5
   0x00013a64 <+96>:	03 e0	b.n	0x13a6e <insert_special+106>
   0x00013a66 <+98>:	00 2d	cmp	r5, #0
   0x00013a68 <+100>:	0c bf	ite	eq
   0x00013a6a <+102>:	00 21	moveq	r1, #0
   0x00013a6c <+104>:	04 21	movne	r1, #4
   0x00013a6e <+106>:	20 46	mov	r0, r4
   0x00013a70 <+108>:	4f f0 ff 32	mov.w	r2, #4294967295
   0x00013a74 <+112>:	bd e8 f8 40	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   0x00013a78 <+116>:	ff f7 f4 bb	b.w	0x13264 <insertchar>
   0x00013a7c <+120>:	8a 3c	subs	r4, #138	; 0x8a
   0x00013a7e <+122>:	09 00	movs	r1, r1
   0x00013a80 <+124>:	90 05	lsls	r0, r2, #22
   0x00013a82 <+126>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function mb_replace_pop_ins:
   0x000140c0 <+0>:	2d e9 f0 4f	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
   0x000140c4 <+4>:	89 b0	sub	sp, #36	; 0x24
   0x000140c6 <+6>:	4e 4d	ldr	r5, [pc, #312]	; (0x14200 <mb_replace_pop_ins+320>)
   0x000140c8 <+8>:	4e 4a	ldr	r2, [pc, #312]	; (0x14204 <mb_replace_pop_ins+324>)
   0x000140ca <+10>:	7d 44	add	r5, pc
   0x000140cc <+12>:	4e 4b	ldr	r3, [pc, #312]	; (0x14208 <mb_replace_pop_ins+328>)
   0x000140ce <+14>:	55 f8 02 b0	ldr.w	r11, [r5, r2]
   0x000140d2 <+18>:	db f8 00 20	ldr.w	r2, [r11]
   0x000140d6 <+22>:	07 92	str	r2, [sp, #28]
   0x000140d8 <+24>:	eb 58	ldr	r3, [r5, r3]
   0x000140da <+26>:	1b 68	ldr	r3, [r3, #0]
   0x000140dc <+28>:	00 2b	cmp	r3, #0
   0x000140de <+30>:	74 d0	beq.n	0x141ca <mb_replace_pop_ins+266>
   0x000140e0 <+32>:	4a 4b	ldr	r3, [pc, #296]	; (0x1420c <mb_replace_pop_ins+332>)
   0x000140e2 <+34>:	eb 58	ldr	r3, [r5, r3]
   0x000140e4 <+36>:	19 5c	ldrb	r1, [r3, r0]
   0x000140e6 <+38>:	01 29	cmp	r1, #1
   0x000140e8 <+40>:	6f dd	ble.n	0x141ca <mb_replace_pop_ins+266>
   0x000140ea <+42>:	49 4a	ldr	r2, [pc, #292]	; (0x14210 <mb_replace_pop_ins+336>)
   0x000140ec <+44>:	0d f1 20 09	add.w	r9, sp, #32
   0x000140f0 <+48>:	4c 1e	subs	r4, r1, #1
   0x000140f2 <+50>:	00 26	movs	r6, #0
   0x000140f4 <+52>:	7a 44	add	r2, pc
   0x000140f6 <+54>:	09 f8 1c 0d	strb.w	r0, [r9, #-28]!
   0x000140fa <+58>:	4c 44	add	r4, r9
   0x000140fc <+60>:	4b 46	mov	r3, r9
   0x000140fe <+62>:	10 46	mov	r0, r2
   0x00014100 <+64>:	12 68	ldr	r2, [r2, #0]
   0x00014102 <+66>:	d0 f8 04 e0	ldr.w	lr, [r0, #4]
   0x00014106 <+70>:	ff 20	movs	r0, #255	; 0xff
   0x00014108 <+72>:	1a b1	cbz	r2, 0x14112 <mb_replace_pop_ins+82>
   0x0001410a <+74>:	01 3a	subs	r2, #1
   0x0001410c <+76>:	01 26	movs	r6, #1
   0x0001410e <+78>:	1e f8 02 00	ldrb.w	r0, [lr, r2]
   0x00014112 <+82>:	03 f8 01 0f	strb.w	r0, [r3, #1]!
   0x00014116 <+86>:	a3 42	cmp	r3, r4
   0x00014118 <+88>:	f5 d1	bne.n	0x14106 <mb_replace_pop_ins+70>
   0x0001411a <+90>:	00 2e	cmp	r6, #0
   0x0001411c <+92>:	6b d1	bne.n	0x141f6 <mb_replace_pop_ins+310>
   0x0001411e <+94>:	48 46	mov	r0, r9
   0x00014120 <+96>:	26 f0 9e f9	bl	0x3a460 <ins_bytes_len>
   0x00014124 <+100>:	3b 4b	ldr	r3, [pc, #236]	; (0x14214 <mb_replace_pop_ins+340>)
   0x00014126 <+102>:	eb 58	ldr	r3, [r5, r3]
   0x00014128 <+104>:	1b 68	ldr	r3, [r3, #0]
   0x0001412a <+106>:	00 2b	cmp	r3, #0
   0x0001412c <+108>:	45 d0	beq.n	0x141ba <mb_replace_pop_ins+250>
   0x0001412e <+110>:	3a 49	ldr	r1, [pc, #232]	; (0x14218 <mb_replace_pop_ins+344>)
   0x00014130 <+112>:	79 44	add	r1, pc
   0x00014132 <+114>:	0b 68	ldr	r3, [r1, #0]
   0x00014134 <+116>:	00 2b	cmp	r3, #0
   0x00014136 <+118>:	40 d0	beq.n	0x141ba <mb_replace_pop_ins+250>
   0x00014138 <+120>:	48 68	ldr	r0, [r1, #4]
   0x0001413a <+122>:	01 3b	subs	r3, #1
   0x0001413c <+124>:	33 4a	ldr	r2, [pc, #204]	; (0x1420c <mb_replace_pop_ins+332>)
   0x0001413e <+126>:	0b 60	str	r3, [r1, #0]
   0x00014140 <+128>:	c0 5c	ldrb	r0, [r0, r3]
   0x00014142 <+130>:	ae 58	ldr	r6, [r5, r2]
   0x00014144 <+132>:	16 f8 00 a0	ldrb.w	r10, [r6, r0]
   0x00014148 <+136>:	ba f1 01 0f	cmp.w	r10, #1
   0x0001414c <+140>:	33 d0	beq.n	0x141b6 <mb_replace_pop_ins+246>
   0x0001414e <+142>:	33 4d	ldr	r5, [pc, #204]	; (0x1421c <mb_replace_pop_ins+348>)
   0x00014150 <+144>:	0d f1 04 09	add.w	r9, sp, #4
   0x00014154 <+148>:	df f8 c8 80	ldr.w	r8, [pc, #200]	; 0x14220 <mb_replace_pop_ins+352>
   0x00014158 <+152>:	32 4c	ldr	r4, [pc, #200]	; (0x14224 <mb_replace_pop_ins+356>)
   0x0001415a <+154>:	7d 44	add	r5, pc
   0x0001415c <+156>:	f8 44	add	r8, pc
   0x0001415e <+158>:	7c 44	add	r4, pc
   0x00014160 <+160>:	ba f1 01 0f	cmp.w	r10, #1
   0x00014164 <+164>:	8d f8 04 00	strb.w	r0, [sp, #4]
   0x00014168 <+168>:	10 dd	ble.n	0x1418c <mb_replace_pop_ins+204>
   0x0001416a <+170>:	0a f1 ff 3e	add.w	lr, r10, #4294967295
   0x0001416e <+174>:	2a 68	ldr	r2, [r5, #0]
   0x00014170 <+176>:	69 68	ldr	r1, [r5, #4]
   0x00014172 <+178>:	ce 44	add	lr, r9
   0x00014174 <+180>:	4b 46	mov	r3, r9
   0x00014176 <+182>:	00 27	movs	r7, #0
   0x00014178 <+184>:	ff 20	movs	r0, #255	; 0xff
   0x0001417a <+186>:	12 b1	cbz	r2, 0x14182 <mb_replace_pop_ins+194>
   0x0001417c <+188>:	01 3a	subs	r2, #1
   0x0001417e <+190>:	01 27	movs	r7, #1
   0x00014180 <+192>:	88 5c	ldrb	r0, [r1, r2]
   0x00014182 <+194>:	03 f8 01 0f	strb.w	r0, [r3, #1]!
   0x00014186 <+198>:	73 45	cmp	r3, lr
   0x00014188 <+200>:	f6 d1	bne.n	0x14178 <mb_replace_pop_ins+184>
   0x0001418a <+202>:	7f bb	cbnz	r7, 0x141ec <mb_replace_pop_ins+300>
   0x0001418c <+204>:	48 46	mov	r0, r9
   0x0001418e <+206>:	2c f0 15 fe	bl	0x40dbc <utf_ptr2char>
   0x00014192 <+210>:	2d f0 45 fe	bl	0x41e20 <utf_iscomposing>
   0x00014196 <+214>:	d8 b1	cbz	r0, 0x141d0 <mb_replace_pop_ins+272>
   0x00014198 <+216>:	51 46	mov	r1, r10
   0x0001419a <+218>:	48 46	mov	r0, r9
   0x0001419c <+220>:	26 f0 60 f9	bl	0x3a460 <ins_bytes_len>
   0x000141a0 <+224>:	23 68	ldr	r3, [r4, #0]
   0x000141a2 <+226>:	53 b1	cbz	r3, 0x141ba <mb_replace_pop_ins+250>
   0x000141a4 <+228>:	62 68	ldr	r2, [r4, #4]
   0x000141a6 <+230>:	01 3b	subs	r3, #1
   0x000141a8 <+232>:	23 60	str	r3, [r4, #0]
   0x000141aa <+234>:	d0 5c	ldrb	r0, [r2, r3]
   0x000141ac <+236>:	16 f8 00 a0	ldrb.w	r10, [r6, r0]
   0x000141b0 <+240>:	ba f1 01 0f	cmp.w	r10, #1
   0x000141b4 <+244>:	d4 d1	bne.n	0x14160 <mb_replace_pop_ins+160>
   0x000141b6 <+246>:	ff f7 39 ff	bl	0x1402c <replace_push>
   0x000141ba <+250>:	07 9a	ldr	r2, [sp, #28]
   0x000141bc <+252>:	db f8 00 30	ldr.w	r3, [r11]
   0x000141c0 <+256>:	9a 42	cmp	r2, r3
   0x000141c2 <+258>:	16 d1	bne.n	0x141f2 <mb_replace_pop_ins+306>
   0x000141c4 <+260>:	09 b0	add	sp, #36	; 0x24
   0x000141c6 <+262>:	bd e8 f0 8f	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
   0x000141ca <+266>:	26 f0 23 f9	bl	0x3a414 <ins_char>
   0x000141ce <+270>:	a9 e7	b.n	0x14124 <mb_replace_pop_ins+100>
   0x000141d0 <+272>:	0a f1 ff 34	add.w	r4, r10, #4294967295
   0x000141d4 <+276>:	ba f1 00 0f	cmp.w	r10, #0
   0x000141d8 <+280>:	ef d0	beq.n	0x141ba <mb_replace_pop_ins+250>
   0x000141da <+282>:	d1 44	add	r9, r10
   0x000141dc <+284>:	01 3c	subs	r4, #1
   0x000141de <+286>:	19 f8 01 0d	ldrb.w	r0, [r9, #-1]!
   0x000141e2 <+290>:	ff f7 23 ff	bl	0x1402c <replace_push>
   0x000141e6 <+294>:	63 1c	adds	r3, r4, #1
   0x000141e8 <+296>:	f8 d1	bne.n	0x141dc <mb_replace_pop_ins+284>
   0x000141ea <+298>:	e6 e7	b.n	0x141ba <mb_replace_pop_ins+250>
   0x000141ec <+300>:	c8 f8 00 20	str.w	r2, [r8]
   0x000141f0 <+304>:	cc e7	b.n	0x1418c <mb_replace_pop_ins+204>
   0x000141f2 <+306>:	f8 f7 36 ee	blx	0xce60 <__stack_chk_fail@plt>
   0x000141f6 <+310>:	0c 4b	ldr	r3, [pc, #48]	; (0x14228 <mb_replace_pop_ins+360>)
   0x000141f8 <+312>:	7b 44	add	r3, pc
   0x000141fa <+314>:	1a 60	str	r2, [r3, #0]
   0x000141fc <+316>:	8f e7	b.n	0x1411e <mb_replace_pop_ins+94>
   0x000141fe <+318>:	00 bf	nop
   0x00014200 <+320>:	ce 35	adds	r5, #206	; 0xce
   0x00014202 <+322>:	09 00	movs	r1, r1
   0x00014204 <+324>:	78 03	lsls	r0, r7, #13
   0x00014206 <+326>:	00 00	movs	r0, r0
   0x00014208 <+328>:	24 05	lsls	r4, r4, #20
   0x0001420a <+330>:	00 00	movs	r0, r0
   0x0001420c <+332>:	54 06	lsls	r4, r2, #25
   0x0001420e <+334>:	00 00	movs	r0, r0
   0x00014210 <+336>:	14 af	add	r7, sp, #80	; 0x50
   0x00014212 <+338>:	09 00	movs	r1, r1
   0x00014214 <+340>:	48 09	lsrs	r0, r1, #5
   0x00014216 <+342>:	00 00	movs	r0, r0
   0x00014218 <+344>:	d8 ae	add	r6, sp, #864	; 0x360
   0x0001421a <+346>:	09 00	movs	r1, r1
   0x0001421c <+348>:	ae ae	add	r6, sp, #696	; 0x2b8
   0x0001421e <+350>:	09 00	movs	r1, r1
   0x00014220 <+352>:	ac ae	add	r6, sp, #688	; 0x2b0
   0x00014222 <+354>:	09 00	movs	r1, r1
   0x00014224 <+356>:	aa ae	add	r6, sp, #680	; 0x2a8
   0x00014226 <+358>:	09 00	movs	r1, r1
   0x00014228 <+360>:	10 ae	add	r6, sp, #64	; 0x40
   0x0001422a <+362>:	09 00	movs	r1, r1
End of assembler dump.
Dump of assembler code for function redo_literal:
   0x0001278c <+0>:	10 4a	ldr	r2, [pc, #64]	; (0x127d0 <redo_literal+68>)
   0x0001278e <+2>:	11 49	ldr	r1, [pc, #68]	; (0x127d4 <redo_literal+72>)
   0x00012790 <+4>:	7a 44	add	r2, pc
   0x00012792 <+6>:	30 b5	push	{r4, r5, lr}
   0x00012794 <+8>:	a0 f1 30 05	sub.w	r5, r0, #48	; 0x30
   0x00012798 <+12>:	54 58	ldr	r4, [r2, r1]
   0x0001279a <+14>:	85 b0	sub	sp, #20
   0x0001279c <+16>:	09 2d	cmp	r5, #9
   0x0001279e <+18>:	22 68	ldr	r2, [r4, #0]
   0x000127a0 <+20>:	03 92	str	r2, [sp, #12]
   0x000127a2 <+22>:	07 d9	bls.n	0x127b4 <redo_literal+40>
   0x000127a4 <+24>:	19 f0 68 fc	bl	0x2c078 <AppendCharToRedobuff>
   0x000127a8 <+28>:	03 9a	ldr	r2, [sp, #12]
   0x000127aa <+30>:	23 68	ldr	r3, [r4, #0]
   0x000127ac <+32>:	9a 42	cmp	r2, r3
   0x000127ae <+34>:	0c d1	bne.n	0x127ca <redo_literal+62>
   0x000127b0 <+36>:	05 b0	add	sp, #20
   0x000127b2 <+38>:	30 bd	pop	{r4, r5, pc}
   0x000127b4 <+40>:	08 4a	ldr	r2, [pc, #32]	; (0x127d8 <redo_literal+76>)
   0x000127b6 <+42>:	03 46	mov	r3, r0
   0x000127b8 <+44>:	0a 21	movs	r1, #10
   0x000127ba <+46>:	68 46	mov	r0, sp
   0x000127bc <+48>:	7a 44	add	r2, pc
   0x000127be <+50>:	26 f0 2b fd	bl	0x39218 <vim_snprintf>
   0x000127c2 <+54>:	68 46	mov	r0, sp
   0x000127c4 <+56>:	19 f0 84 fb	bl	0x2bed0 <AppendToRedobuff>
   0x000127c8 <+60>:	ee e7	b.n	0x127a8 <redo_literal+28>
   0x000127ca <+62>:	fa f7 4a eb	blx	0xce60 <__stack_chk_fail@plt>
   0x000127ce <+66>:	00 bf	nop
   0x000127d0 <+68>:	08 4f	ldr	r7, [pc, #32]	; (0x127f4 <get_literal+24>)
   0x000127d2 <+70>:	09 00	movs	r1, r1
   0x000127d4 <+72>:	78 03	lsls	r0, r7, #13
   0x000127d6 <+74>:	00 00	movs	r0, r0
   0x000127d8 <+76>:	cc 53	strh	r4, [r1, r7]
   0x000127da <+78>:	07 00	movs	r7, r0
End of assembler dump.
Dump of assembler code for function replace_do_bs:
   0x00014504 <+0>:	15 4a	ldr	r2, [pc, #84]	; (0x1455c <replace_do_bs+88>)
   0x00014506 <+2>:	38 b5	push	{r3, r4, r5, lr}
   0x00014508 <+4>:	7a 44	add	r2, pc
   0x0001450a <+6>:	15 4c	ldr	r4, [pc, #84]	; (0x14560 <replace_do_bs+92>)
   0x0001450c <+8>:	13 68	ldr	r3, [r2, #0]
   0x0001450e <+10>:	7c 44	add	r4, pc
   0x00014510 <+12>:	03 b9	cbnz	r3, 0x14514 <replace_do_bs+16>
   0x00014512 <+14>:	38 bd	pop	{r3, r4, r5, pc}
   0x00014514 <+16>:	51 68	ldr	r1, [r2, #4]
   0x00014516 <+18>:	01 3b	subs	r3, #1
   0x00014518 <+20>:	13 60	str	r3, [r2, #0]
   0x0001451a <+22>:	cd 5c	ldrb	r5, [r1, r3]
   0x0001451c <+24>:	c5 b1	cbz	r5, 0x14550 <replace_do_bs+76>
   0x0001451e <+26>:	11 4b	ldr	r3, [pc, #68]	; (0x14564 <replace_do_bs+96>)
   0x00014520 <+28>:	e3 58	ldr	r3, [r4, r3]
   0x00014522 <+30>:	1b 68	ldr	r3, [r3, #0]
   0x00014524 <+32>:	6b b9	cbnz	r3, 0x14542 <replace_do_bs+62>
   0x00014526 <+34>:	28 46	mov	r0, r5
   0x00014528 <+36>:	25 f0 8e f9	bl	0x39848 <pchar_cursor>
   0x0001452c <+40>:	ff f7 7e fe	bl	0x1422c <replace_pop_ins>
   0x00014530 <+44>:	0d 4b	ldr	r3, [pc, #52]	; (0x14568 <replace_do_bs+100>)
   0x00014532 <+46>:	e3 58	ldr	r3, [r4, r3]
   0x00014534 <+48>:	1b 68	ldr	r3, [r3, #0]
   0x00014536 <+50>:	59 69	ldr	r1, [r3, #20]
   0x00014538 <+52>:	18 69	ldr	r0, [r3, #16]
   0x0001453a <+54>:	bd e8 38 40	ldmia.w	sp!, {r3, r4, r5, lr}
   0x0001453e <+58>:	25 f0 95 bc	b.w	0x39e6c <changed_bytes>
   0x00014542 <+62>:	00 20	movs	r0, #0
   0x00014544 <+64>:	26 f0 06 f9	bl	0x3a754 <del_char>
   0x00014548 <+68>:	28 46	mov	r0, r5
   0x0001454a <+70>:	ff f7 6f fd	bl	0x1402c <replace_push>
   0x0001454e <+74>:	ed e7	b.n	0x1452c <replace_do_bs+40>
   0x00014550 <+76>:	28 46	mov	r0, r5
   0x00014552 <+78>:	bd e8 38 40	ldmia.w	sp!, {r3, r4, r5, lr}
   0x00014556 <+82>:	26 f0 fd b8	b.w	0x3a754 <del_char>
   0x0001455a <+86>:	00 bf	nop
   0x0001455c <+88>:	00 ab	add	r3, sp, #0
   0x0001455e <+90>:	09 00	movs	r1, r1
   0x00014560 <+92>:	8a 31	adds	r1, #138	; 0x8a
   0x00014562 <+94>:	09 00	movs	r1, r1
   0x00014564 <+96>:	24 05	lsls	r4, r4, #20
   0x00014566 <+98>:	00 00	movs	r0, r0
   0x00014568 <+100>:	24 04	lsls	r4, r4, #16
   0x0001456a <+102>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function replace_join:
   0x00012594 <+0>:	10 4b	ldr	r3, [pc, #64]	; (0x125d8 <replace_join+68>)
   0x00012596 <+2>:	f0 b4	push	{r4, r5, r6, r7}
   0x00012598 <+4>:	7b 44	add	r3, pc
   0x0001259a <+6>:	1a 68	ldr	r2, [r3, #0]
   0x0001259c <+8>:	59 68	ldr	r1, [r3, #4]
   0x0001259e <+10>:	01 3a	subs	r2, #1
   0x000125a0 <+12>:	8b 18	adds	r3, r1, r2
   0x000125a2 <+14>:	17 46	mov	r7, r2
   0x000125a4 <+16>:	05 e0	b.n	0x125b2 <replace_join+30>
   0x000125a6 <+18>:	25 78	ldrb	r5, [r4, #0]
   0x000125a8 <+20>:	15 b9	cbnz	r5, 0x125b0 <replace_join+28>
   0x000125aa <+22>:	00 28	cmp	r0, #0
   0x000125ac <+24>:	30 46	mov	r0, r6
   0x000125ae <+26>:	09 dd	ble.n	0x125c4 <replace_join+48>
   0x000125b0 <+28>:	01 3a	subs	r2, #1
   0x000125b2 <+30>:	00 2a	cmp	r2, #0
   0x000125b4 <+32>:	1c 46	mov	r4, r3
   0x000125b6 <+34>:	00 f1 ff 36	add.w	r6, r0, #4294967295
   0x000125ba <+38>:	03 f1 ff 33	add.w	r3, r3, #4294967295
   0x000125be <+42>:	f2 da	bge.n	0x125a6 <replace_join+18>
   0x000125c0 <+44>:	f0 bc	pop	{r4, r5, r6, r7}
   0x000125c2 <+46>:	70 47	bx	lr
   0x000125c4 <+48>:	05 4b	ldr	r3, [pc, #20]	; (0x125dc <replace_join+72>)
   0x000125c6 <+50>:	55 1c	adds	r5, r2, #1
   0x000125c8 <+52>:	20 46	mov	r0, r4
   0x000125ca <+54>:	ba 1a	subs	r2, r7, r2
   0x000125cc <+56>:	7b 44	add	r3, pc
   0x000125ce <+58>:	29 44	add	r1, r5
   0x000125d0 <+60>:	1f 60	str	r7, [r3, #0]
   0x000125d2 <+62>:	f0 bc	pop	{r4, r5, r6, r7}
   0x000125d4 <+64>:	fa f7 c4 bb	b.w	0xcd60 <memmove@plt>
   0x000125d8 <+68>:	70 ca	ldmia	r2!, {r4, r5, r6}
   0x000125da <+70>:	09 00	movs	r1, r1
   0x000125dc <+72>:	3c ca	ldmia	r2, {r2, r3, r4, r5}
   0x000125de <+74>:	09 00	movs	r1, r1
End of assembler dump.
Dump of assembler code for function replace_pop_ins:
   0x0001422c <+0>:	70 b5	push	{r4, r5, r6, lr}
   0x0001422e <+2>:	01 21	movs	r1, #1
   0x00014230 <+4>:	0e 4b	ldr	r3, [pc, #56]	; (0x1426c <replace_pop_ins+64>)
   0x00014232 <+6>:	0f 4c	ldr	r4, [pc, #60]	; (0x14270 <replace_pop_ins+68>)
   0x00014234 <+8>:	0f 4a	ldr	r2, [pc, #60]	; (0x14274 <replace_pop_ins+72>)
   0x00014236 <+10>:	7b 44	add	r3, pc
   0x00014238 <+12>:	7c 44	add	r4, pc
   0x0001423a <+14>:	9d 58	ldr	r5, [r3, r2]
   0x0001423c <+16>:	23 68	ldr	r3, [r4, #0]
   0x0001423e <+18>:	2e 68	ldr	r6, [r5, #0]
   0x00014240 <+20>:	29 60	str	r1, [r5, #0]
   0x00014242 <+22>:	83 b1	cbz	r3, 0x14266 <replace_pop_ins+58>
   0x00014244 <+24>:	62 68	ldr	r2, [r4, #4]
   0x00014246 <+26>:	01 3b	subs	r3, #1
   0x00014248 <+28>:	23 60	str	r3, [r4, #0]
   0x0001424a <+30>:	d0 5c	ldrb	r0, [r2, r3]
   0x0001424c <+32>:	58 b1	cbz	r0, 0x14266 <replace_pop_ins+58>
   0x0001424e <+34>:	ff f7 37 ff	bl	0x140c0 <mb_replace_pop_ins>
   0x00014252 <+38>:	28 f0 21 ff	bl	0x3d098 <dec_cursor>
   0x00014256 <+42>:	23 68	ldr	r3, [r4, #0]
   0x00014258 <+44>:	5a 1e	subs	r2, r3, #1
   0x0001425a <+46>:	23 b1	cbz	r3, 0x14266 <replace_pop_ins+58>
   0x0001425c <+48>:	63 68	ldr	r3, [r4, #4]
   0x0001425e <+50>:	22 60	str	r2, [r4, #0]
   0x00014260 <+52>:	98 5c	ldrb	r0, [r3, r2]
   0x00014262 <+54>:	00 28	cmp	r0, #0
   0x00014264 <+56>:	f3 d1	bne.n	0x1424e <replace_pop_ins+34>
   0x00014266 <+58>:	2e 60	str	r6, [r5, #0]
   0x00014268 <+60>:	70 bd	pop	{r4, r5, r6, pc}
   0x0001426a <+62>:	00 bf	nop
   0x0001426c <+64>:	62 34	adds	r4, #98	; 0x62
   0x0001426e <+66>:	09 00	movs	r1, r1
   0x00014270 <+68>:	d0 ad	add	r5, sp, #832	; 0x340
   0x00014272 <+70>:	09 00	movs	r1, r1
   0x00014274 <+72>:	ac 08	lsrs	r4, r5, #2
   0x00014276 <+74>:	00 00	movs	r0, r0
End of assembler dump.
