GNU gdb (Ubuntu 7.10-1ubuntu2) 7.10
Copyright (C) 2015 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "arm-linux-gnueabihf".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /usr/bin/vim.tiny...Reading symbols from /usr/lib/debug//usr/bin/vim.tiny...done.
done.
Dump of assembler code for function vim_isdigit:
   0x00011c54 <+0>:	30 38	subs	r0, #48	; 0x30
   0x00011c56 <+2>:	09 28	cmp	r0, #9
   0x00011c58 <+4>:	8c bf	ite	hi
   0x00011c5a <+6>:	00 20	movhi	r0, #0
   0x00011c5c <+8>:	01 20	movls	r0, #1
   0x00011c5e <+10>:	70 47	bx	lr
End of assembler dump.
Dump of assembler code for function vim_isfilec:
   0x00011338 <+0>:	07 4b	ldr	r3, [pc, #28]	; (0x11358 <vim_isfilec+32>)
   0x0001133a <+2>:	ff 28	cmp	r0, #255	; 0xff
   0x0001133c <+4>:	7b 44	add	r3, pc
   0x0001133e <+6>:	07 dc	bgt.n	0x11350 <vim_isfilec+24>
   0x00011340 <+8>:	00 28	cmp	r0, #0
   0x00011342 <+10>:	07 dd	ble.n	0x11354 <vim_isfilec+28>
   0x00011344 <+12>:	05 4a	ldr	r2, [pc, #20]	; (0x1135c <vim_isfilec+36>)
   0x00011346 <+14>:	9b 58	ldr	r3, [r3, r2]
   0x00011348 <+16>:	18 5c	ldrb	r0, [r3, r0]
   0x0001134a <+18>:	c0 f3 80 10	ubfx	r0, r0, #6, #1
   0x0001134e <+22>:	70 47	bx	lr
   0x00011350 <+24>:	01 20	movs	r0, #1
   0x00011352 <+26>:	70 47	bx	lr
   0x00011354 <+28>:	00 20	movs	r0, #0
   0x00011356 <+30>:	70 47	bx	lr
   0x00011358 <+32>:	5c 63	str	r4, [r3, #52]	; 0x34
   0x0001135a <+34>:	09 00	movs	r1, r1
   0x0001135c <+36>:	c0 05	lsls	r0, r0, #23
   0x0001135e <+38>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function vim_isfilec_or_wc:
   0x00011360 <+0>:	14 4a	ldr	r2, [pc, #80]	; (0x113b4 <vim_isfilec_or_wc+84>)
   0x00011362 <+2>:	ff 28	cmp	r0, #255	; 0xff
   0x00011364 <+4>:	14 4b	ldr	r3, [pc, #80]	; (0x113b8 <vim_isfilec_or_wc+88>)
   0x00011366 <+6>:	4f f0 00 01	mov.w	r1, #0
   0x0001136a <+10>:	7a 44	add	r2, pc
   0x0001136c <+12>:	10 b5	push	{r4, lr}
   0x0001136e <+14>:	82 b0	sub	sp, #8
   0x00011370 <+16>:	d4 58	ldr	r4, [r2, r3]
   0x00011372 <+18>:	8d f8 00 00	strb.w	r0, [sp]
   0x00011376 <+22>:	8d f8 01 10	strb.w	r1, [sp, #1]
   0x0001137a <+26>:	23 68	ldr	r3, [r4, #0]
   0x0001137c <+28>:	01 93	str	r3, [sp, #4]
   0x0001137e <+30>:	0f dc	bgt.n	0x113a0 <vim_isfilec_or_wc+64>
   0x00011380 <+32>:	88 42	cmp	r0, r1
   0x00011382 <+34>:	06 dd	ble.n	0x11392 <vim_isfilec_or_wc+50>
   0x00011384 <+36>:	0d 4b	ldr	r3, [pc, #52]	; (0x113bc <vim_isfilec_or_wc+92>)
   0x00011386 <+38>:	d3 58	ldr	r3, [r2, r3]
   0x00011388 <+40>:	1b 5c	ldrb	r3, [r3, r0]
   0x0001138a <+42>:	5b 06	lsls	r3, r3, #25
   0x0001138c <+44>:	08 d4	bmi.n	0x113a0 <vim_isfilec_or_wc+64>
   0x0001138e <+46>:	5d 28	cmp	r0, #93	; 0x5d
   0x00011390 <+48>:	06 d0	beq.n	0x113a0 <vim_isfilec_or_wc+64>
   0x00011392 <+50>:	68 46	mov	r0, sp
   0x00011394 <+52>:	44 f0 0e fd	bl	0x55db4 <mch_has_wildcard>
   0x00011398 <+56>:	00 30	adds	r0, #0
   0x0001139a <+58>:	18 bf	it	ne
   0x0001139c <+60>:	01 20	movne	r0, #1
   0x0001139e <+62>:	00 e0	b.n	0x113a2 <vim_isfilec_or_wc+66>
   0x000113a0 <+64>:	01 20	movs	r0, #1
   0x000113a2 <+66>:	01 9a	ldr	r2, [sp, #4]
   0x000113a4 <+68>:	23 68	ldr	r3, [r4, #0]
   0x000113a6 <+70>:	9a 42	cmp	r2, r3
   0x000113a8 <+72>:	01 d1	bne.n	0x113ae <vim_isfilec_or_wc+78>
   0x000113aa <+74>:	02 b0	add	sp, #8
   0x000113ac <+76>:	10 bd	pop	{r4, pc}
   0x000113ae <+78>:	fb f7 58 ed	blx	0xce60 <__stack_chk_fail@plt>
   0x000113b2 <+82>:	00 bf	nop
   0x000113b4 <+84>:	2e 63	str	r6, [r5, #48]	; 0x30
   0x000113b6 <+86>:	09 00	movs	r1, r1
   0x000113b8 <+88>:	78 03	lsls	r0, r7, #13
   0x000113ba <+90>:	00 00	movs	r0, r0
   0x000113bc <+92>:	c0 05	lsls	r0, r0, #23
   0x000113be <+94>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function vim_islower:
   0x00011c7c <+0>:	17 49	ldr	r1, [pc, #92]	; (0x11cdc <vim_islower+96>)
   0x00011c7e <+2>:	40 28	cmp	r0, #64	; 0x40
   0x00011c80 <+4>:	10 b5	push	{r4, lr}
   0x00011c82 <+6>:	79 44	add	r1, pc
   0x00011c84 <+8>:	22 dd	ble.n	0x11ccc <vim_islower+80>
   0x00011c86 <+10>:	7f 28	cmp	r0, #127	; 0x7f
   0x00011c88 <+12>:	02 46	mov	r2, r0
   0x00011c8a <+14>:	14 dd	ble.n	0x11cb6 <vim_islower+58>
   0x00011c8c <+16>:	14 4b	ldr	r3, [pc, #80]	; (0x11ce0 <vim_islower+100>)
   0x00011c8e <+18>:	cb 58	ldr	r3, [r1, r3]
   0x00011c90 <+20>:	1b 68	ldr	r3, [r3, #0]
   0x00011c92 <+22>:	f3 b9	cbnz	r3, 0x11cd2 <vim_islower+86>
   0x00011c94 <+24>:	ff 28	cmp	r0, #255	; 0xff
   0x00011c96 <+26>:	17 dc	bgt.n	0x11cc8 <vim_islower+76>
   0x00011c98 <+28>:	12 4b	ldr	r3, [pc, #72]	; (0x11ce4 <vim_islower+104>)
   0x00011c9a <+30>:	cb 58	ldr	r3, [r1, r3]
   0x00011c9c <+32>:	1b 68	ldr	r3, [r3, #0]
   0x00011c9e <+34>:	53 b1	cbz	r3, 0x11cb6 <vim_islower+58>
   0x00011ca0 <+36>:	11 4b	ldr	r3, [pc, #68]	; (0x11ce8 <vim_islower+108>)
   0x00011ca2 <+38>:	7b 44	add	r3, pc
   0x00011ca4 <+40>:	1b 5c	ldrb	r3, [r3, r0]
   0x00011ca6 <+42>:	03 f0 6c 03	and.w	r3, r3, #108	; 0x6c
   0x00011caa <+46>:	a3 f1 6c 03	sub.w	r3, r3, #108	; 0x6c
   0x00011cae <+50>:	b3 fa 83 f3	clz	r3, r3
   0x00011cb2 <+54>:	5b 09	lsrs	r3, r3, #5
   0x00011cb4 <+56>:	08 e0	b.n	0x11cc8 <vim_islower+76>
   0x00011cb6 <+58>:	14 46	mov	r4, r2
   0x00011cb8 <+60>:	fb f7 ec e9	blx	0xd094 <__ctype_b_loc@plt>
   0x00011cbc <+64>:	03 68	ldr	r3, [r0, #0]
   0x00011cbe <+66>:	33 f8 14 30	ldrh.w	r3, [r3, r4, lsl #1]
   0x00011cc2 <+70>:	03 f4 00 73	and.w	r3, r3, #512	; 0x200
   0x00011cc6 <+74>:	9b b2	uxth	r3, r3
   0x00011cc8 <+76>:	18 46	mov	r0, r3
   0x00011cca <+78>:	10 bd	pop	{r4, pc}
   0x00011ccc <+80>:	00 23	movs	r3, #0
   0x00011cce <+82>:	18 46	mov	r0, r3
   0x00011cd0 <+84>:	10 bd	pop	{r4, pc}
   0x00011cd2 <+86>:	bd e8 10 40	ldmia.w	sp!, {r4, lr}
   0x00011cd6 <+90>:	30 f0 8d b9	b.w	0x41ff4 <utf_islower>
   0x00011cda <+94>:	00 bf	nop
   0x00011cdc <+96>:	16 5a	ldrh	r6, [r2, r0]
   0x00011cde <+98>:	09 00	movs	r1, r1
   0x00011ce0 <+100>:	48 09	lsrs	r0, r1, #5
   0x00011ce2 <+102>:	00 00	movs	r0, r0
   0x00011ce4 <+104>:	e0 08	lsrs	r0, r4, #3
   0x00011ce6 <+106>:	00 00	movs	r0, r0
   0x00011ce8 <+108>:	da 5b	ldrh	r2, [r3, r7]
   0x00011cea <+110>:	07 00	movs	r7, r0
End of assembler dump.
Dump of assembler code for function vim_isprintc:
   0x000113c0 <+0>:	0c 4a	ldr	r2, [pc, #48]	; (0x113f4 <vim_isprintc+52>)
   0x000113c2 <+2>:	01 46	mov	r1, r0
   0x000113c4 <+4>:	0c 4b	ldr	r3, [pc, #48]	; (0x113f8 <vim_isprintc+56>)
   0x000113c6 <+6>:	7a 44	add	r2, pc
   0x000113c8 <+8>:	d3 58	ldr	r3, [r2, r3]
   0x000113ca <+10>:	1b 68	ldr	r3, [r3, #0]
   0x000113cc <+12>:	4b b1	cbz	r3, 0x113e2 <vim_isprintc+34>
   0x000113ce <+14>:	ff 28	cmp	r0, #255	; 0xff
   0x000113d0 <+16>:	0d dc	bgt.n	0x113ee <vim_isprintc+46>
   0x000113d2 <+18>:	00 29	cmp	r1, #0
   0x000113d4 <+20>:	09 dd	ble.n	0x113ea <vim_isprintc+42>
   0x000113d6 <+22>:	09 4b	ldr	r3, [pc, #36]	; (0x113fc <vim_isprintc+60>)
   0x000113d8 <+24>:	d3 58	ldr	r3, [r2, r3]
   0x000113da <+26>:	58 5c	ldrb	r0, [r3, r1]
   0x000113dc <+28>:	c0 f3 00 10	ubfx	r0, r0, #4, #1
   0x000113e0 <+32>:	70 47	bx	lr
   0x000113e2 <+34>:	ff 28	cmp	r0, #255	; 0xff
   0x000113e4 <+36>:	f5 dd	ble.n	0x113d2 <vim_isprintc+18>
   0x000113e6 <+38>:	01 20	movs	r0, #1
   0x000113e8 <+40>:	70 47	bx	lr
   0x000113ea <+42>:	00 20	movs	r0, #0
   0x000113ec <+44>:	70 47	bx	lr
   0x000113ee <+46>:	30 f0 23 bd	b.w	0x41e38 <utf_printable>
   0x000113f2 <+50>:	00 bf	nop
   0x000113f4 <+52>:	d2 62	str	r2, [r2, #44]	; 0x2c
   0x000113f6 <+54>:	09 00	movs	r1, r1
   0x000113f8 <+56>:	48 09	lsrs	r0, r1, #5
   0x000113fa <+58>:	00 00	movs	r0, r0
   0x000113fc <+60>:	c0 05	lsls	r0, r0, #23
   0x000113fe <+62>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function vim_isprintc_strict:
   0x00011400 <+0>:	13 4b	ldr	r3, [pc, #76]	; (0x11450 <vim_isprintc_strict+80>)
   0x00011402 <+2>:	14 4a	ldr	r2, [pc, #80]	; (0x11454 <vim_isprintc_strict+84>)
   0x00011404 <+4>:	7b 44	add	r3, pc
   0x00011406 <+6>:	9a 58	ldr	r2, [r3, r2]
   0x00011408 <+8>:	12 68	ldr	r2, [r2, #0]
   0x0001140a <+10>:	00 32	adds	r2, #0
   0x0001140c <+12>:	18 bf	it	ne
   0x0001140e <+14>:	01 22	movne	r2, #1
   0x00011410 <+16>:	ff 28	cmp	r0, #255	; 0xff
   0x00011412 <+18>:	c8 bf	it	gt
   0x00011414 <+20>:	00 22	movgt	r2, #0
   0x00011416 <+22>:	32 b1	cbz	r2, 0x11426 <vim_isprintc_strict+38>
   0x00011418 <+24>:	0f 4a	ldr	r2, [pc, #60]	; (0x11458 <vim_isprintc_strict+88>)
   0x0001141a <+26>:	9a 58	ldr	r2, [r3, r2]
   0x0001141c <+28>:	12 5c	ldrb	r2, [r2, r0]
   0x0001141e <+30>:	01 2a	cmp	r2, #1
   0x00011420 <+32>:	01 d9	bls.n	0x11426 <vim_isprintc_strict+38>
   0x00011422 <+34>:	00 20	movs	r0, #0
   0x00011424 <+36>:	70 47	bx	lr
   0x00011426 <+38>:	0d 4a	ldr	r2, [pc, #52]	; (0x1145c <vim_isprintc_strict+92>)
   0x00011428 <+40>:	9a 58	ldr	r2, [r3, r2]
   0x0001142a <+42>:	12 68	ldr	r2, [r2, #0]
   0x0001142c <+44>:	4a b1	cbz	r2, 0x11442 <vim_isprintc_strict+66>
   0x0001142e <+46>:	ff 28	cmp	r0, #255	; 0xff
   0x00011430 <+48>:	0b dc	bgt.n	0x1144a <vim_isprintc_strict+74>
   0x00011432 <+50>:	00 28	cmp	r0, #0
   0x00011434 <+52>:	f5 dd	ble.n	0x11422 <vim_isprintc_strict+34>
   0x00011436 <+54>:	0a 4a	ldr	r2, [pc, #40]	; (0x11460 <vim_isprintc_strict+96>)
   0x00011438 <+56>:	9b 58	ldr	r3, [r3, r2]
   0x0001143a <+58>:	18 5c	ldrb	r0, [r3, r0]
   0x0001143c <+60>:	c0 f3 00 10	ubfx	r0, r0, #4, #1
   0x00011440 <+64>:	70 47	bx	lr
   0x00011442 <+66>:	ff 28	cmp	r0, #255	; 0xff
   0x00011444 <+68>:	f5 dd	ble.n	0x11432 <vim_isprintc_strict+50>
   0x00011446 <+70>:	01 20	movs	r0, #1
   0x00011448 <+72>:	70 47	bx	lr
   0x0001144a <+74>:	30 f0 f5 bc	b.w	0x41e38 <utf_printable>
   0x0001144e <+78>:	00 bf	nop
   0x00011450 <+80>:	94 62	str	r4, [r2, #40]	; 0x28
   0x00011452 <+82>:	09 00	movs	r1, r1
   0x00011454 <+84>:	0c 07	lsls	r4, r1, #28
   0x00011456 <+86>:	00 00	movs	r0, r0
   0x00011458 <+88>:	54 06	lsls	r4, r2, #25
   0x0001145a <+90>:	00 00	movs	r0, r0
   0x0001145c <+92>:	48 09	lsrs	r0, r1, #5
   0x0001145e <+94>:	00 00	movs	r0, r0
   0x00011460 <+96>:	c0 05	lsls	r0, r0, #23
   0x00011462 <+98>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function vim_isupper:
   0x00011cec <+0>:	1b 4a	ldr	r2, [pc, #108]	; (0x11d5c <vim_isupper+112>)
   0x00011cee <+2>:	40 28	cmp	r0, #64	; 0x40
   0x00011cf0 <+4>:	10 b5	push	{r4, lr}
   0x00011cf2 <+6>:	7a 44	add	r2, pc
   0x00011cf4 <+8>:	1f dd	ble.n	0x11d36 <vim_isupper+74>
   0x00011cf6 <+10>:	7f 28	cmp	r0, #127	; 0x7f
   0x00011cf8 <+12>:	03 46	mov	r3, r0
   0x00011cfa <+14>:	11 dd	ble.n	0x11d20 <vim_isupper+52>
   0x00011cfc <+16>:	18 49	ldr	r1, [pc, #96]	; (0x11d60 <vim_isupper+116>)
   0x00011cfe <+18>:	51 58	ldr	r1, [r2, r1]
   0x00011d00 <+20>:	09 68	ldr	r1, [r1, #0]
   0x00011d02 <+22>:	d9 b9	cbnz	r1, 0x11d3c <vim_isupper+80>
   0x00011d04 <+24>:	ff 28	cmp	r0, #255	; 0xff
   0x00011d06 <+26>:	07 dd	ble.n	0x11d18 <vim_isupper+44>
   0x00011d08 <+28>:	16 4b	ldr	r3, [pc, #88]	; (0x11d64 <vim_isupper+120>)
   0x00011d0a <+30>:	d3 58	ldr	r3, [r2, r3]
   0x00011d0c <+32>:	1b 68	ldr	r3, [r3, #0]
   0x00011d0e <+34>:	83 b1	cbz	r3, 0x11d32 <vim_isupper+70>
   0x00011d10 <+36>:	bd e8 10 40	ldmia.w	sp!, {r4, lr}
   0x00011d14 <+40>:	fb f7 2a ba	b.w	0xd16c <iswupper@plt>
   0x00011d18 <+44>:	13 49	ldr	r1, [pc, #76]	; (0x11d68 <vim_isupper+124>)
   0x00011d1a <+46>:	52 58	ldr	r2, [r2, r1]
   0x00011d1c <+48>:	12 68	ldr	r2, [r2, #0]
   0x00011d1e <+50>:	8a b9	cbnz	r2, 0x11d44 <vim_isupper+88>
   0x00011d20 <+52>:	1c 46	mov	r4, r3
   0x00011d22 <+54>:	fb f7 b8 e9	blx	0xd094 <__ctype_b_loc@plt>
   0x00011d26 <+58>:	03 68	ldr	r3, [r0, #0]
   0x00011d28 <+60>:	33 f8 14 30	ldrh.w	r3, [r3, r4, lsl #1]
   0x00011d2c <+64>:	03 f4 80 73	and.w	r3, r3, #256	; 0x100
   0x00011d30 <+68>:	9b b2	uxth	r3, r3
   0x00011d32 <+70>:	18 46	mov	r0, r3
   0x00011d34 <+72>:	10 bd	pop	{r4, pc}
   0x00011d36 <+74>:	00 23	movs	r3, #0
   0x00011d38 <+76>:	18 46	mov	r0, r3
   0x00011d3a <+78>:	10 bd	pop	{r4, pc}
   0x00011d3c <+80>:	bd e8 10 40	ldmia.w	sp!, {r4, lr}
   0x00011d40 <+84>:	30 f0 98 b9	b.w	0x42074 <utf_isupper>
   0x00011d44 <+88>:	09 4a	ldr	r2, [pc, #36]	; (0x11d6c <vim_isupper+128>)
   0x00011d46 <+90>:	7a 44	add	r2, pc
   0x00011d48 <+92>:	13 5c	ldrb	r3, [r2, r0]
   0x00011d4a <+94>:	03 f0 55 03	and.w	r3, r3, #85	; 0x55
   0x00011d4e <+98>:	a3 f1 55 03	sub.w	r3, r3, #85	; 0x55
   0x00011d52 <+102>:	b3 fa 83 f3	clz	r3, r3
   0x00011d56 <+106>:	5b 09	lsrs	r3, r3, #5
   0x00011d58 <+108>:	eb e7	b.n	0x11d32 <vim_isupper+70>
   0x00011d5a <+110>:	00 bf	nop
   0x00011d5c <+112>:	a6 59	ldr	r6, [r4, r6]
   0x00011d5e <+114>:	09 00	movs	r1, r1
   0x00011d60 <+116>:	48 09	lsrs	r0, r1, #5
   0x00011d62 <+118>:	00 00	movs	r0, r0
   0x00011d64 <+120>:	24 05	lsls	r4, r4, #20
   0x00011d66 <+122>:	00 00	movs	r0, r0
   0x00011d68 <+124>:	e0 08	lsrs	r0, r4, #3
   0x00011d6a <+126>:	00 00	movs	r0, r0
   0x00011d6c <+128>:	36 5b	ldrh	r6, [r6, r4]
   0x00011d6e <+130>:	07 00	movs	r7, r0
End of assembler dump.
Dump of assembler code for function vim_iswordc:
   0x00011278 <+0>:	03 4b	ldr	r3, [pc, #12]	; (0x11288 <vim_iswordc+16>)
   0x0001127a <+2>:	04 4a	ldr	r2, [pc, #16]	; (0x1128c <vim_iswordc+20>)
   0x0001127c <+4>:	7b 44	add	r3, pc
   0x0001127e <+6>:	9b 58	ldr	r3, [r3, r2]
   0x00011280 <+8>:	19 68	ldr	r1, [r3, #0]
   0x00011282 <+10>:	ff f7 c5 bf	b.w	0x11210 <vim_iswordc_buf>
   0x00011286 <+14>:	00 bf	nop
   0x00011288 <+16>:	1c 64	str	r4, [r3, #64]	; 0x40
   0x0001128a <+18>:	09 00	movs	r1, r1
   0x0001128c <+20>:	b0 07	lsls	r0, r6, #30
   0x0001128e <+22>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function vim_iswordc_buf:
   0x00011210 <+0>:	16 4a	ldr	r2, [pc, #88]	; (0x1126c <vim_iswordc_buf+92>)
   0x00011212 <+2>:	ff 28	cmp	r0, #255	; 0xff
   0x00011214 <+4>:	38 b5	push	{r3, r4, r5, lr}
   0x00011216 <+6>:	7a 44	add	r2, pc
   0x00011218 <+8>:	03 46	mov	r3, r0
   0x0001121a <+10>:	07 dd	ble.n	0x1122c <vim_iswordc_buf+28>
   0x0001121c <+12>:	14 4c	ldr	r4, [pc, #80]	; (0x11270 <vim_iswordc_buf+96>)
   0x0001121e <+14>:	14 59	ldr	r4, [r2, r4]
   0x00011220 <+16>:	24 68	ldr	r4, [r4, #0]
   0x00011222 <+18>:	9c b9	cbnz	r4, 0x1124c <vim_iswordc_buf+60>
   0x00011224 <+20>:	13 4c	ldr	r4, [pc, #76]	; (0x11274 <vim_iswordc_buf+100>)
   0x00011226 <+22>:	12 59	ldr	r2, [r2, r4]
   0x00011228 <+24>:	12 68	ldr	r2, [r2, #0]
   0x0001122a <+26>:	c2 b9	cbnz	r2, 0x1125e <vim_iswordc_buf+78>
   0x0001122c <+28>:	5a 1e	subs	r2, r3, #1
   0x0001122e <+30>:	fe 2a	cmp	r2, #254	; 0xfe
   0x00011230 <+32>:	9f bf	itttt	ls
   0x00011232 <+34>:	01 eb d3 01	addls.w	r1, r1, r3, lsr #3
   0x00011236 <+38>:	03 f0 07 03	andls.w	r3, r3, #7
   0x0001123a <+42>:	91 f8 c4 04	ldrbls.w	r0, [r1, #1220]	; 0x4c4
   0x0001123e <+46>:	40 fa 03 f3	asrls.w	r3, r0, r3
   0x00011242 <+50>:	94 bf	ite	ls
   0x00011244 <+52>:	03 f0 01 00	andls.w	r0, r3, #1
   0x00011248 <+56>:	00 20	movhi	r0, #0
   0x0001124a <+58>:	38 bd	pop	{r3, r4, r5, pc}
   0x0001124c <+60>:	c1 b2	uxtb	r1, r0
   0x0001124e <+62>:	00 0a	lsrs	r0, r0, #8
   0x00011250 <+64>:	30 f0 24 fb	bl	0x4189c <dbcs_class>
   0x00011254 <+68>:	01 28	cmp	r0, #1
   0x00011256 <+70>:	d4 bf	ite	le
   0x00011258 <+72>:	00 20	movle	r0, #0
   0x0001125a <+74>:	01 20	movgt	r0, #1
   0x0001125c <+76>:	38 bd	pop	{r3, r4, r5, pc}
   0x0001125e <+78>:	30 f0 01 fe	bl	0x41e64 <utf_class>
   0x00011262 <+82>:	01 28	cmp	r0, #1
   0x00011264 <+84>:	d4 bf	ite	le
   0x00011266 <+86>:	00 20	movle	r0, #0
   0x00011268 <+88>:	01 20	movgt	r0, #1
   0x0001126a <+90>:	38 bd	pop	{r3, r4, r5, pc}
   0x0001126c <+92>:	82 64	str	r2, [r0, #72]	; 0x48
   0x0001126e <+94>:	09 00	movs	r1, r1
   0x00011270 <+96>:	0c 07	lsls	r4, r1, #28
   0x00011272 <+98>:	00 00	movs	r0, r0
   0x00011274 <+100>:	48 09	lsrs	r0, r1, #5
   0x00011276 <+102>:	00 00	movs	r0, r0
End of assembler dump.
