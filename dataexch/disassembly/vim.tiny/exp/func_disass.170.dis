GNU gdb (Ubuntu 7.10-1ubuntu2) 7.10
Copyright (C) 2015 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "arm-linux-gnueabihf".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /usr/bin/vim.tiny...Reading symbols from /usr/lib/debug//usr/bin/vim.tiny...done.
done.
Dump of assembler code for function win_close_othertab:
   0x00083108 <+0>:	2d e9 f0 41	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   0x0008310c <+4>:	00 29	cmp	r1, #0
   0x0008310e <+6>:	41 4e	ldr	r6, [pc, #260]	; (0x83214 <win_close_othertab+268>)
   0x00083110 <+8>:	82 b0	sub	sp, #8
   0x00083112 <+10>:	41 4f	ldr	r7, [pc, #260]	; (0x83218 <win_close_othertab+272>)
   0x00083114 <+12>:	14 46	mov	r4, r2
   0x00083116 <+14>:	7e 44	add	r6, pc
   0x00083118 <+16>:	14 bf	ite	ne
   0x0008311a <+18>:	02 22	movne	r2, #2
   0x0008311c <+20>:	00 22	moveq	r2, #0
   0x0008311e <+22>:	01 68	ldr	r1, [r0, #0]
   0x00083120 <+24>:	f7 59	ldr	r7, [r6, r7]
   0x00083122 <+26>:	00 23	movs	r3, #0
   0x00083124 <+28>:	05 46	mov	r5, r0
   0x00083126 <+30>:	d7 f8 00 e0	ldr.w	lr, [r7]
   0x0008312a <+34>:	cd f8 04 e0	str.w	lr, [sp, #4]
   0x0008312e <+38>:	8c f7 5b f8	bl	0xf1e8 <close_buffer>
   0x00083132 <+42>:	3a 4b	ldr	r3, [pc, #232]	; (0x8321c <win_close_othertab+276>)
   0x00083134 <+44>:	f1 58	ldr	r1, [r6, r3]
   0x00083136 <+46>:	0a 68	ldr	r2, [r1, #0]
   0x00083138 <+48>:	a2 42	cmp	r2, r4
   0x0008313a <+50>:	18 bf	it	ne
   0x0008313c <+52>:	00 2a	cmpne	r2, #0
   0x0008313e <+54>:	13 46	mov	r3, r2
   0x00083140 <+56>:	04 d0	beq.n	0x8314c <win_close_othertab+68>
   0x00083142 <+58>:	1b 68	ldr	r3, [r3, #0]
   0x00083144 <+60>:	00 2b	cmp	r3, #0
   0x00083146 <+62>:	18 bf	it	ne
   0x00083148 <+64>:	9c 42	cmpne	r4, r3
   0x0008314a <+66>:	fa d1	bne.n	0x83142 <win_close_othertab+58>
   0x0008314c <+68>:	5b b3	cbz	r3, 0x831a6 <win_close_othertab+158>
   0x0008314e <+70>:	34 4b	ldr	r3, [pc, #208]	; (0x83220 <win_close_othertab+280>)
   0x00083150 <+72>:	f3 58	ldr	r3, [r6, r3]
   0x00083152 <+74>:	1b 68	ldr	r3, [r3, #0]
   0x00083154 <+76>:	9c 42	cmp	r4, r3
   0x00083156 <+78>:	26 d0	beq.n	0x831a6 <win_close_othertab+158>
   0x00083158 <+80>:	20 69	ldr	r0, [r4, #16]
   0x0008315a <+82>:	00 28	cmp	r0, #0
   0x0008315c <+84>:	18 bf	it	ne
   0x0008315e <+86>:	85 42	cmpne	r5, r0
   0x00083160 <+88>:	03 46	mov	r3, r0
   0x00083162 <+90>:	04 d0	beq.n	0x8316e <win_close_othertab+102>
   0x00083164 <+92>:	9b 68	ldr	r3, [r3, #8]
   0x00083166 <+94>:	00 2b	cmp	r3, #0
   0x00083168 <+96>:	18 bf	it	ne
   0x0008316a <+98>:	9d 42	cmpne	r5, r3
   0x0008316c <+100>:	fa d1	bne.n	0x83164 <win_close_othertab+92>
   0x0008316e <+102>:	d3 b1	cbz	r3, 0x831a6 <win_close_othertab+158>
   0x00083170 <+104>:	63 69	ldr	r3, [r4, #20]
   0x00083172 <+106>:	98 42	cmp	r0, r3
   0x00083174 <+108>:	37 d1	bne.n	0x831e6 <win_close_othertab+222>
   0x00083176 <+110>:	a2 42	cmp	r2, r4
   0x00083178 <+112>:	04 bf	itt	eq
   0x0008317a <+114>:	23 68	ldreq	r3, [r4, #0]
   0x0008317c <+116>:	0b 60	streq	r3, [r1, #0]
   0x0008317e <+118>:	1b d0	beq.n	0x831b8 <win_close_othertab+176>
   0x00083180 <+120>:	5a b1	cbz	r2, 0x8319a <win_close_othertab+146>
   0x00083182 <+122>:	13 68	ldr	r3, [r2, #0]
   0x00083184 <+124>:	a3 42	cmp	r3, r4
   0x00083186 <+126>:	08 bf	it	eq
   0x00083188 <+128>:	13 46	moveq	r3, r2
   0x0008318a <+130>:	13 d0	beq.n	0x831b4 <win_close_othertab+172>
   0x0008318c <+132>:	2b b1	cbz	r3, 0x8319a <win_close_othertab+146>
   0x0008318e <+134>:	1a 68	ldr	r2, [r3, #0]
   0x00083190 <+136>:	94 42	cmp	r4, r2
   0x00083192 <+138>:	0f d0	beq.n	0x831b4 <win_close_othertab+172>
   0x00083194 <+140>:	13 46	mov	r3, r2
   0x00083196 <+142>:	00 2b	cmp	r3, #0
   0x00083198 <+144>:	f9 d1	bne.n	0x8318e <win_close_othertab+134>
   0x0008319a <+146>:	22 4b	ldr	r3, [pc, #136]	; (0x83224 <win_close_othertab+284>)
   0x0008319c <+148>:	22 49	ldr	r1, [pc, #136]	; (0x83228 <win_close_othertab+288>)
   0x0008319e <+150>:	f0 58	ldr	r0, [r6, r3]
   0x000831a0 <+152>:	79 44	add	r1, pc
   0x000831a2 <+154>:	b2 f7 eb fd	bl	0x35d7c <emsg2>
   0x000831a6 <+158>:	01 9a	ldr	r2, [sp, #4]
   0x000831a8 <+160>:	3b 68	ldr	r3, [r7, #0]
   0x000831aa <+162>:	9a 42	cmp	r2, r3
   0x000831ac <+164>:	2f d1	bne.n	0x8320e <win_close_othertab+262>
   0x000831ae <+166>:	02 b0	add	sp, #8
   0x000831b0 <+168>:	bd e8 f0 81	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   0x000831b4 <+172>:	22 68	ldr	r2, [r4, #0]
   0x000831b6 <+174>:	1a 60	str	r2, [r3, #0]
   0x000831b8 <+176>:	22 46	mov	r2, r4
   0x000831ba <+178>:	69 46	mov	r1, sp
   0x000831bc <+180>:	28 46	mov	r0, r5
   0x000831be <+182>:	ee 68	ldr	r6, [r5, #12]
   0x000831c0 <+184>:	ff f7 c2 fe	bl	0x82f48 <winframe_remove>
   0x000831c4 <+188>:	80 46	mov	r8, r0
   0x000831c6 <+190>:	30 46	mov	r0, r6
   0x000831c8 <+192>:	ba f7 ec f8	bl	0x3d3a4 <vim_free>
   0x000831cc <+196>:	28 46	mov	r0, r5
   0x000831ce <+198>:	21 46	mov	r1, r4
   0x000831d0 <+200>:	fe f7 e6 fe	bl	0x81fa0 <win_free>
   0x000831d4 <+204>:	a3 68	ldr	r3, [r4, #8]
   0x000831d6 <+206>:	20 46	mov	r0, r4
   0x000831d8 <+208>:	9d 42	cmp	r5, r3
   0x000831da <+210>:	08 bf	it	eq
   0x000831dc <+212>:	c4 f8 08 80	streq.w	r8, [r4, #8]
   0x000831e0 <+216>:	ff f7 d6 fa	bl	0x82790 <free_tabpage>
   0x000831e4 <+220>:	df e7	b.n	0x831a6 <win_close_othertab+158>
   0x000831e6 <+222>:	22 46	mov	r2, r4
   0x000831e8 <+224>:	69 46	mov	r1, sp
   0x000831ea <+226>:	28 46	mov	r0, r5
   0x000831ec <+228>:	ee 68	ldr	r6, [r5, #12]
   0x000831ee <+230>:	ff f7 ab fe	bl	0x82f48 <winframe_remove>
   0x000831f2 <+234>:	80 46	mov	r8, r0
   0x000831f4 <+236>:	30 46	mov	r0, r6
   0x000831f6 <+238>:	ba f7 d5 f8	bl	0x3d3a4 <vim_free>
   0x000831fa <+242>:	21 46	mov	r1, r4
   0x000831fc <+244>:	28 46	mov	r0, r5
   0x000831fe <+246>:	fe f7 cf fe	bl	0x81fa0 <win_free>
   0x00083202 <+250>:	a3 68	ldr	r3, [r4, #8]
   0x00083204 <+252>:	9d 42	cmp	r5, r3
   0x00083206 <+254>:	ce d1	bne.n	0x831a6 <win_close_othertab+158>
   0x00083208 <+256>:	c4 f8 08 80	str.w	r8, [r4, #8]
   0x0008320c <+260>:	cb e7	b.n	0x831a6 <win_close_othertab+158>
   0x0008320e <+262>:	89 f7 28 ee	blx	0xce60 <__stack_chk_fail@plt>
   0x00083212 <+266>:	00 bf	nop
   0x00083214 <+268>:	82 45	cmp	r10, r0
   0x00083216 <+270>:	02 00	movs	r2, r0
   0x00083218 <+272>:	78 03	lsls	r0, r7, #13
   0x0008321a <+274>:	00 00	movs	r0, r0
   0x0008321c <+276>:	84 06	lsls	r4, r0, #26
   0x0008321e <+278>:	00 00	movs	r0, r0
   0x00083220 <+280>:	9c 06	lsls	r4, r3, #26
   0x00083222 <+282>:	00 00	movs	r0, r0
   0x00083224 <+284>:	e4 07	lsls	r4, r4, #31
   0x00083226 <+286>:	00 00	movs	r0, r0
   0x00083228 <+288>:	bc f4 00 00			; <UNDEFINED> instruction: 0xf4bc0000
End of assembler dump.
Dump of assembler code for function win_comp_pos:
   0x000829ac <+0>:	14 49	ldr	r1, [pc, #80]	; (0x82a00 <win_comp_pos+84>)
   0x000829ae <+2>:	15 4a	ldr	r2, [pc, #84]	; (0x82a04 <win_comp_pos+88>)
   0x000829b0 <+4>:	79 44	add	r1, pc
   0x000829b2 <+6>:	15 4b	ldr	r3, [pc, #84]	; (0x82a08 <win_comp_pos+92>)
   0x000829b4 <+8>:	30 b5	push	{r4, r5, lr}
   0x000829b6 <+10>:	85 b0	sub	sp, #20
   0x000829b8 <+12>:	8c 58	ldr	r4, [r1, r2]
   0x000829ba <+14>:	22 68	ldr	r2, [r4, #0]
   0x000829bc <+16>:	03 92	str	r2, [sp, #12]
   0x000829be <+18>:	cb 58	ldr	r3, [r1, r3]
   0x000829c0 <+20>:	18 68	ldr	r0, [r3, #0]
   0x000829c2 <+22>:	18 b1	cbz	r0, 0x829cc <win_comp_pos+32>
   0x000829c4 <+24>:	01 28	cmp	r0, #1
   0x000829c6 <+26>:	18 bf	it	ne
   0x000829c8 <+28>:	01 20	movne	r0, #1
   0x000829ca <+30>:	13 d0	beq.n	0x829f4 <win_comp_pos+72>
   0x000829cc <+32>:	0f 4d	ldr	r5, [pc, #60]	; (0x82a0c <win_comp_pos+96>)
   0x000829ce <+34>:	04 ab	add	r3, sp, #16
   0x000829d0 <+36>:	01 90	str	r0, [sp, #4]
   0x000829d2 <+38>:	00 22	movs	r2, #0
   0x000829d4 <+40>:	43 f8 08 2d	str.w	r2, [r3, #-8]!
   0x000829d8 <+44>:	01 aa	add	r2, sp, #4
   0x000829da <+46>:	49 59	ldr	r1, [r1, r5]
   0x000829dc <+48>:	08 68	ldr	r0, [r1, #0]
   0x000829de <+50>:	c1 69	ldr	r1, [r0, #28]
   0x000829e0 <+52>:	80 69	ldr	r0, [r0, #24]
   0x000829e2 <+54>:	ff f7 03 fc	bl	0x821ec <frame_comp_pos>
   0x000829e6 <+58>:	03 9a	ldr	r2, [sp, #12]
   0x000829e8 <+60>:	23 68	ldr	r3, [r4, #0]
   0x000829ea <+62>:	01 98	ldr	r0, [sp, #4]
   0x000829ec <+64>:	9a 42	cmp	r2, r3
   0x000829ee <+66>:	04 d1	bne.n	0x829fa <win_comp_pos+78>
   0x000829f0 <+68>:	05 b0	add	sp, #20
   0x000829f2 <+70>:	30 bd	pop	{r4, r5, pc}
   0x000829f4 <+72>:	ff f7 ac fc	bl	0x82350 <tabline_height>
   0x000829f8 <+76>:	e8 e7	b.n	0x829cc <win_comp_pos+32>
   0x000829fa <+78>:	8a f7 32 ea	blx	0xce60 <__stack_chk_fail@plt>
   0x000829fe <+82>:	00 bf	nop
   0x00082a00 <+84>:	e8 4c	ldr	r4, [pc, #928]	; (0x82da4 <win_new_height+320>)
   0x00082a02 <+86>:	02 00	movs	r2, r0
   0x00082a04 <+88>:	78 03	lsls	r0, r7, #13
   0x00082a06 <+90>:	00 00	movs	r0, r0
   0x00082a08 <+92>:	38 05	lsls	r0, r7, #20
   0x00082a0a <+94>:	00 00	movs	r0, r0
   0x00082a0c <+96>:	fc 05	lsls	r4, r7, #23
   0x00082a0e <+98>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function win_comp_scroll:
   0x00084494 <+0>:	c3 6c	ldr	r3, [r0, #76]	; 0x4c
   0x00084496 <+2>:	5b 08	lsrs	r3, r3, #1
   0x00084498 <+4>:	08 bf	it	eq
   0x0008449a <+6>:	01 23	moveq	r3, #1
   0x0008449c <+8>:	c0 f8 c4 30	str.w	r3, [r0, #196]	; 0xc4
   0x000844a0 <+12>:	70 47	bx	lr
End of assembler dump.
Dump of assembler code for function win_count:
   0x0008255c <+0>:	06 4b	ldr	r3, [pc, #24]	; (0x82578 <win_count+28>)
   0x0008255e <+2>:	07 4a	ldr	r2, [pc, #28]	; (0x8257c <win_count+32>)
   0x00082560 <+4>:	7b 44	add	r3, pc
   0x00082562 <+6>:	9b 58	ldr	r3, [r3, r2]
   0x00082564 <+8>:	1b 68	ldr	r3, [r3, #0]
   0x00082566 <+10>:	2b b1	cbz	r3, 0x82574 <win_count+24>
   0x00082568 <+12>:	00 20	movs	r0, #0
   0x0008256a <+14>:	9b 68	ldr	r3, [r3, #8]
   0x0008256c <+16>:	01 30	adds	r0, #1
   0x0008256e <+18>:	00 2b	cmp	r3, #0
   0x00082570 <+20>:	fb d1	bne.n	0x8256a <win_count+14>
   0x00082572 <+22>:	70 47	bx	lr
   0x00082574 <+24>:	18 46	mov	r0, r3
   0x00082576 <+26>:	70 47	bx	lr
   0x00082578 <+28>:	38 51	str	r0, [r7, r4]
   0x0008257a <+30>:	02 00	movs	r2, r0
   0x0008257c <+32>:	38 09	lsrs	r0, r7, #4
   0x0008257e <+34>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function win_enter:
   0x000837f0 <+0>:	00 22	movs	r2, #0
   0x000837f2 <+2>:	3b e7	b.n	0x8366c <win_enter_ext>
End of assembler dump.
Dump of assembler code for function win_equal:
   0x00083d30 <+0>:	f0 b5	push	{r4, r5, r6, r7, lr}
   0x00083d32 <+2>:	00 2a	cmp	r2, #0
   0x00083d34 <+4>:	14 bf	ite	ne
   0x00083d36 <+6>:	17 46	movne	r7, r2
   0x00083d38 <+8>:	62 27	moveq	r7, #98	; 0x62
   0x00083d3a <+10>:	13 4c	ldr	r4, [pc, #76]	; (0x83d88 <win_equal+88>)
   0x00083d3c <+12>:	85 b0	sub	sp, #20
   0x00083d3e <+14>:	05 46	mov	r5, r0
   0x00083d40 <+16>:	7c 44	add	r4, pc
   0x00083d42 <+18>:	e0 b1	cbz	r0, 0x83d7e <win_equal+78>
   0x00083d44 <+20>:	11 48	ldr	r0, [pc, #68]	; (0x83d8c <win_equal+92>)
   0x00083d46 <+22>:	20 58	ldr	r0, [r4, r0]
   0x00083d48 <+24>:	00 68	ldr	r0, [r0, #0]
   0x00083d4a <+26>:	06 46	mov	r6, r0
   0x00083d4c <+28>:	18 b1	cbz	r0, 0x83d56 <win_equal+38>
   0x00083d4e <+30>:	01 28	cmp	r0, #1
   0x00083d50 <+32>:	18 bf	it	ne
   0x00083d52 <+34>:	01 26	movne	r6, #1
   0x00083d54 <+36>:	0f d0	beq.n	0x83d76 <win_equal+70>
   0x00083d56 <+38>:	0e 4a	ldr	r2, [pc, #56]	; (0x83d90 <win_equal+96>)
   0x00083d58 <+40>:	3b 46	mov	r3, r7
   0x00083d5a <+42>:	28 46	mov	r0, r5
   0x00083d5c <+44>:	0d 4d	ldr	r5, [pc, #52]	; (0x83d94 <win_equal+100>)
   0x00083d5e <+46>:	a2 58	ldr	r2, [r4, r2]
   0x00083d60 <+48>:	12 68	ldr	r2, [r2, #0]
   0x00083d62 <+50>:	57 68	ldr	r7, [r2, #4]
   0x00083d64 <+52>:	02 97	str	r7, [sp, #8]
   0x00083d66 <+54>:	64 59	ldr	r4, [r4, r5]
   0x00083d68 <+56>:	00 96	str	r6, [sp, #0]
   0x00083d6a <+58>:	24 68	ldr	r4, [r4, #0]
   0x00083d6c <+60>:	01 94	str	r4, [sp, #4]
   0x00083d6e <+62>:	ff f7 fb fd	bl	0x83968 <win_equal_rec>
   0x00083d72 <+66>:	05 b0	add	sp, #20
   0x00083d74 <+68>:	f0 bd	pop	{r4, r5, r6, r7, pc}
   0x00083d76 <+70>:	fe f7 eb fa	bl	0x82350 <tabline_height>
   0x00083d7a <+74>:	06 46	mov	r6, r0
   0x00083d7c <+76>:	eb e7	b.n	0x83d56 <win_equal+38>
   0x00083d7e <+78>:	06 4b	ldr	r3, [pc, #24]	; (0x83d98 <win_equal+104>)
   0x00083d80 <+80>:	e3 58	ldr	r3, [r4, r3]
   0x00083d82 <+82>:	1d 68	ldr	r5, [r3, #0]
   0x00083d84 <+84>:	de e7	b.n	0x83d44 <win_equal+20>
   0x00083d86 <+86>:	00 bf	nop
   0x00083d88 <+88>:	58 39	subs	r1, #88	; 0x58
   0x00083d8a <+90>:	02 00	movs	r2, r0
   0x00083d8c <+92>:	38 05	lsls	r0, r7, #20
   0x00083d8e <+94>:	00 00	movs	r0, r0
   0x00083d90 <+96>:	fc 05	lsls	r4, r7, #23
   0x00083d92 <+98>:	00 00	movs	r0, r0
   0x00083d94 <+100>:	fc 07	lsls	r4, r7, #31
   0x00083d96 <+102>:	00 00	movs	r0, r0
   0x00083d98 <+104>:	24 04	lsls	r4, r4, #16
   0x00083d9a <+106>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function win_free_lsize:
   0x00082994 <+0>:	48 b1	cbz	r0, 0x829aa <win_free_lsize+22>
   0x00082996 <+2>:	10 b5	push	{r4, lr}
   0x00082998 <+4>:	04 46	mov	r4, r0
   0x0008299a <+6>:	d0 f8 84 00	ldr.w	r0, [r0, #132]	; 0x84
   0x0008299e <+10>:	ba f7 01 fd	bl	0x3d3a4 <vim_free>
   0x000829a2 <+14>:	00 23	movs	r3, #0
   0x000829a4 <+16>:	c4 f8 84 30	str.w	r3, [r4, #132]	; 0x84
   0x000829a8 <+20>:	10 bd	pop	{r4, pc}
   0x000829aa <+22>:	70 47	bx	lr
End of assembler dump.
Dump of assembler code for function win_goto:
   0x000838b4 <+0>:	38 b5	push	{r3, r4, r5, lr}
   0x000838b6 <+2>:	05 46	mov	r5, r0
   0x000838b8 <+4>:	14 4c	ldr	r4, [pc, #80]	; (0x8390c <win_goto+88>)
   0x000838ba <+6>:	7c 44	add	r4, pc
   0x000838bc <+8>:	9e f7 f2 fc	bl	0x222a4 <text_locked>
   0x000838c0 <+12>:	e8 b9	cbnz	r0, 0x838fe <win_goto+74>
   0x000838c2 <+14>:	13 4b	ldr	r3, [pc, #76]	; (0x83910 <win_goto+92>)
   0x000838c4 <+16>:	2a 68	ldr	r2, [r5, #0]
   0x000838c6 <+18>:	e3 58	ldr	r3, [r4, r3]
   0x000838c8 <+20>:	1b 68	ldr	r3, [r3, #0]
   0x000838ca <+22>:	9a 42	cmp	r2, r3
   0x000838cc <+24>:	07 d0	beq.n	0x838de <win_goto+42>
   0x000838ce <+26>:	c4 f7 75 f9	bl	0x47bbc <reset_VIsual_and_resel>
   0x000838d2 <+30>:	28 46	mov	r0, r5
   0x000838d4 <+32>:	00 22	movs	r2, #0
   0x000838d6 <+34>:	01 21	movs	r1, #1
   0x000838d8 <+36>:	bd e8 38 40	ldmia.w	sp!, {r3, r4, r5, lr}
   0x000838dc <+40>:	c6 e6	b.n	0x8366c <win_enter_ext>
   0x000838de <+42>:	0d 4b	ldr	r3, [pc, #52]	; (0x83914 <win_goto+96>)
   0x000838e0 <+44>:	e3 58	ldr	r3, [r4, r3]
   0x000838e2 <+46>:	1b 68	ldr	r3, [r3, #0]
   0x000838e4 <+48>:	00 2b	cmp	r3, #0
   0x000838e6 <+50>:	f4 d0	beq.n	0x838d2 <win_goto+30>
   0x000838e8 <+52>:	0b 4a	ldr	r2, [pc, #44]	; (0x83918 <win_goto+100>)
   0x000838ea <+54>:	05 f1 10 03	add.w	r3, r5, #16
   0x000838ee <+58>:	a2 58	ldr	r2, [r4, r2]
   0x000838f0 <+60>:	12 68	ldr	r2, [r2, #0]
   0x000838f2 <+62>:	10 32	adds	r2, #16
   0x000838f4 <+64>:	92 e8 03 00	ldmia.w	r2, {r0, r1}
   0x000838f8 <+68>:	83 e8 03 00	stmia.w	r3, {r0, r1}
   0x000838fc <+72>:	e9 e7	b.n	0x838d2 <win_goto+30>
   0x000838fe <+74>:	b7 f7 57 fd	bl	0x3b3b0 <beep_flush>
   0x00083902 <+78>:	bd e8 38 40	ldmia.w	sp!, {r3, r4, r5, lr}
   0x00083906 <+82>:	9e f7 db bc	b.w	0x222c0 <text_locked_msg>
   0x0008390a <+86>:	00 bf	nop
   0x0008390c <+88>:	de 3d	subs	r5, #222	; 0xde
   0x0008390e <+90>:	02 00	movs	r2, r0
   0x00083910 <+92>:	b0 07	lsls	r0, r6, #30
   0x00083912 <+94>:	00 00	movs	r0, r0
   0x00083914 <+96>:	68 07	lsls	r0, r5, #29
   0x00083916 <+98>:	00 00	movs	r0, r0
   0x00083918 <+100>:	24 04	lsls	r4, r4, #16
   0x0008391a <+102>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function win_init_empty:
   0x0008268c <+0>:	10 b5	push	{r4, lr}
   0x0008268e <+2>:	28 21	movs	r1, #40	; 0x28
   0x00082690 <+4>:	04 46	mov	r4, r0
   0x00082692 <+6>:	ec f7 9b fd	bl	0x6f1cc <redraw_win_later>
   0x00082696 <+10>:	00 23	movs	r3, #0
   0x00082698 <+12>:	02 22	movs	r2, #2
   0x0008269a <+14>:	c4 f8 80 30	str.w	r3, [r4, #128]	; 0x80
   0x0008269e <+18>:	a2 67	str	r2, [r4, #120]	; 0x78
   0x000826a0 <+20>:	01 22	movs	r2, #1
   0x000826a2 <+22>:	63 61	str	r3, [r4, #20]
   0x000826a4 <+24>:	a3 61	str	r3, [r4, #24]
   0x000826a6 <+26>:	c4 f8 ec 30	str.w	r3, [r4, #236]	; 0xec
   0x000826aa <+30>:	c4 f8 f0 30	str.w	r3, [r4, #240]	; 0xf0
   0x000826ae <+34>:	c4 f8 f4 30	str.w	r3, [r4, #244]	; 0xf4
   0x000826b2 <+38>:	22 61	str	r2, [r4, #16]
   0x000826b4 <+40>:	c4 f8 e8 20	str.w	r2, [r4, #232]	; 0xe8
   0x000826b8 <+44>:	e2 63	str	r2, [r4, #60]	; 0x3c
   0x000826ba <+46>:	10 bd	pop	{r4, pc}
End of assembler dump.
