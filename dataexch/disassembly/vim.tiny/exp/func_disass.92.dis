GNU gdb (Ubuntu 7.10-1ubuntu2) 7.10
Copyright (C) 2015 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "arm-linux-gnueabihf".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /usr/bin/vim.tiny...Reading symbols from /usr/lib/debug//usr/bin/vim.tiny...done.
done.
Dump of assembler code for function ga_concat_strings:
   0x0003ea7c <+0>:	2d e9 f8 43	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   0x0003ea80 <+4>:	06 46	mov	r6, r0
   0x0003ea82 <+6>:	08 46	mov	r0, r1
   0x0003ea84 <+8>:	88 46	mov	r8, r1
   0x0003ea86 <+10>:	ce f7 26 eb	blx	0xd0d4 <strlen@plt>
   0x0003ea8a <+14>:	33 68	ldr	r3, [r6, #0]
   0x0003ea8c <+16>:	00 2b	cmp	r3, #0
   0x0003ea8e <+18>:	07 46	mov	r7, r0
   0x0003ea90 <+20>:	2c dd	ble.n	0x3eaec <ga_concat_strings+112>
   0x0003ea92 <+22>:	34 69	ldr	r4, [r6, #16]
   0x0003ea94 <+24>:	00 25	movs	r5, #0
   0x0003ea96 <+26>:	04 eb 83 09	add.w	r9, r4, r3, lsl #2
   0x0003ea9a <+30>:	54 f8 04 0b	ldr.w	r0, [r4], #4
   0x0003ea9e <+34>:	ce f7 1a eb	blx	0xd0d4 <strlen@plt>
   0x0003eaa2 <+38>:	4c 45	cmp	r4, r9
   0x0003eaa4 <+40>:	38 44	add	r0, r7
   0x0003eaa6 <+42>:	05 44	add	r5, r0
   0x0003eaa8 <+44>:	f7 d1	bne.n	0x3ea9a <ga_concat_strings+30>
   0x0003eaaa <+46>:	68 1c	adds	r0, r5, #1
   0x0003eaac <+48>:	01 21	movs	r1, #1
   0x0003eaae <+50>:	ff f7 0b fd	bl	0x3e4c8 <lalloc>
   0x0003eab2 <+54>:	81 46	mov	r9, r0
   0x0003eab4 <+56>:	b8 b1	cbz	r0, 0x3eae6 <ga_concat_strings+106>
   0x0003eab6 <+58>:	00 25	movs	r5, #0
   0x0003eab8 <+60>:	05 70	strb	r5, [r0, #0]
   0x0003eaba <+62>:	33 68	ldr	r3, [r6, #0]
   0x0003eabc <+64>:	ab 42	cmp	r3, r5
   0x0003eabe <+66>:	12 dd	ble.n	0x3eae6 <ga_concat_strings+106>
   0x0003eac0 <+68>:	04 46	mov	r4, r0
   0x0003eac2 <+70>:	33 69	ldr	r3, [r6, #16]
   0x0003eac4 <+72>:	20 46	mov	r0, r4
   0x0003eac6 <+74>:	53 f8 25 10	ldr.w	r1, [r3, r5, lsl #2]
   0x0003eaca <+78>:	01 35	adds	r5, #1
   0x0003eacc <+80>:	ce f7 b6 e9	blx	0xce3c <stpcpy@plt>
   0x0003ead0 <+84>:	33 68	ldr	r3, [r6, #0]
   0x0003ead2 <+86>:	41 46	mov	r1, r8
   0x0003ead4 <+88>:	ab 42	cmp	r3, r5
   0x0003ead6 <+90>:	04 46	mov	r4, r0
   0x0003ead8 <+92>:	05 dd	ble.n	0x3eae6 <ga_concat_strings+106>
   0x0003eada <+94>:	a1 45	cmp	r9, r4
   0x0003eadc <+96>:	f1 d0	beq.n	0x3eac2 <ga_concat_strings+70>
   0x0003eade <+98>:	ce f7 52 ea	blx	0xcf84 <strcpy@plt+4>
   0x0003eae2 <+102>:	3c 44	add	r4, r7
   0x0003eae4 <+104>:	ed e7	b.n	0x3eac2 <ga_concat_strings+70>
   0x0003eae6 <+106>:	48 46	mov	r0, r9
   0x0003eae8 <+108>:	bd e8 f8 83	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   0x0003eaec <+112>:	01 20	movs	r0, #1
   0x0003eaee <+114>:	dd e7	b.n	0x3eaac <ga_concat_strings+48>
End of assembler dump.
Dump of assembler code for function ga_grow:
   0x0003e968 <+0>:	f8 b5	push	{r3, r4, r5, r6, r7, lr}
   0x0003e96a <+2>:	05 68	ldr	r5, [r0, #0]
   0x0003e96c <+4>:	43 68	ldr	r3, [r0, #4]
   0x0003e96e <+6>:	5b 1b	subs	r3, r3, r5
   0x0003e970 <+8>:	8b 42	cmp	r3, r1
   0x0003e972 <+10>:	1e da	bge.n	0x3e9b2 <ga_grow+74>
   0x0003e974 <+12>:	c6 68	ldr	r6, [r0, #12]
   0x0003e976 <+14>:	04 46	mov	r4, r0
   0x0003e978 <+16>:	87 68	ldr	r7, [r0, #8]
   0x0003e97a <+18>:	8e 42	cmp	r6, r1
   0x0003e97c <+20>:	00 69	ldr	r0, [r0, #16]
   0x0003e97e <+22>:	b8 bf	it	lt
   0x0003e980 <+24>:	0e 46	movlt	r6, r1
   0x0003e982 <+26>:	35 44	add	r5, r6
   0x0003e984 <+28>:	07 fb 05 f7	mul.w	r7, r7, r5
   0x0003e988 <+32>:	b8 b1	cbz	r0, 0x3e9ba <ga_grow+82>
   0x0003e98a <+34>:	39 46	mov	r1, r7
   0x0003e98c <+36>:	ce f7 80 ea	blx	0xce90 <realloc@plt>
   0x0003e990 <+40>:	05 46	mov	r5, r0
   0x0003e992 <+42>:	85 b1	cbz	r5, 0x3e9b6 <ga_grow+78>
   0x0003e994 <+44>:	a0 68	ldr	r0, [r4, #8]
   0x0003e996 <+46>:	00 21	movs	r1, #0
   0x0003e998 <+48>:	63 68	ldr	r3, [r4, #4]
   0x0003e99a <+50>:	03 fb 00 f0	mul.w	r0, r3, r0
   0x0003e99e <+54>:	3a 1a	subs	r2, r7, r0
   0x0003e9a0 <+56>:	28 44	add	r0, r5
   0x0003e9a2 <+58>:	ce f7 f4 eb	blx	0xd18c <memset@plt+4>
   0x0003e9a6 <+62>:	21 68	ldr	r1, [r4, #0]
   0x0003e9a8 <+64>:	25 61	str	r5, [r4, #16]
   0x0003e9aa <+66>:	01 20	movs	r0, #1
   0x0003e9ac <+68>:	0e 44	add	r6, r1
   0x0003e9ae <+70>:	66 60	str	r6, [r4, #4]
   0x0003e9b0 <+72>:	f8 bd	pop	{r3, r4, r5, r6, r7, pc}
   0x0003e9b2 <+74>:	01 20	movs	r0, #1
   0x0003e9b4 <+76>:	f8 bd	pop	{r3, r4, r5, r6, r7, pc}
   0x0003e9b6 <+78>:	28 46	mov	r0, r5
   0x0003e9b8 <+80>:	f8 bd	pop	{r3, r4, r5, r6, r7, pc}
   0x0003e9ba <+82>:	01 21	movs	r1, #1
   0x0003e9bc <+84>:	38 46	mov	r0, r7
   0x0003e9be <+86>:	ff f7 83 fd	bl	0x3e4c8 <lalloc>
   0x0003e9c2 <+90>:	05 46	mov	r5, r0
   0x0003e9c4 <+92>:	00 2d	cmp	r5, #0
   0x0003e9c6 <+94>:	e5 d1	bne.n	0x3e994 <ga_grow+44>
   0x0003e9c8 <+96>:	f5 e7	b.n	0x3e9b6 <ga_grow+78>
End of assembler dump.
Dump of assembler code for function ga_init:
   0x0003d63c <+0>:	00 23	movs	r3, #0
   0x0003d63e <+2>:	03 61	str	r3, [r0, #16]
   0x0003d640 <+4>:	43 60	str	r3, [r0, #4]
   0x0003d642 <+6>:	03 60	str	r3, [r0, #0]
   0x0003d644 <+8>:	70 47	bx	lr
End of assembler dump.
Dump of assembler code for function ga_init2:
   0x0003d648 <+0>:	00 23	movs	r3, #0
   0x0003d64a <+2>:	81 60	str	r1, [r0, #8]
   0x0003d64c <+4>:	c2 60	str	r2, [r0, #12]
   0x0003d64e <+6>:	03 61	str	r3, [r0, #16]
   0x0003d650 <+8>:	43 60	str	r3, [r0, #4]
   0x0003d652 <+10>:	03 60	str	r3, [r0, #0]
   0x0003d654 <+12>:	70 47	bx	lr
End of assembler dump.
Dump of assembler code for function get_cursor_rel_lnum:
   0x0003d0d0 <+0>:	00 69	ldr	r0, [r0, #16]
   0x0003d0d2 <+2>:	08 1a	subs	r0, r1, r0
   0x0003d0d4 <+4>:	70 47	bx	lr
End of assembler dump.
Dump of assembler code for function get_fileformat:
   0x0003e018 <+0>:	d0 f8 6c 35	ldr.w	r3, [r0, #1388]	; 0x56c
   0x0003e01c <+4>:	d0 f8 50 15	ldr.w	r1, [r0, #1360]	; 0x550
   0x0003e020 <+8>:	1a 78	ldrb	r2, [r3, #0]
   0x0003e022 <+10>:	a2 f1 75 03	sub.w	r3, r2, #117	; 0x75
   0x0003e026 <+14>:	b3 fa 83 f3	clz	r3, r3
   0x0003e02a <+18>:	5b 09	lsrs	r3, r3, #5
   0x0003e02c <+20>:	00 29	cmp	r1, #0
   0x0003e02e <+22>:	18 bf	it	ne
   0x0003e030 <+24>:	43 f0 01 03	orrne.w	r3, r3, #1
   0x0003e034 <+28>:	23 b9	cbnz	r3, 0x3e040 <get_fileformat+40>
   0x0003e036 <+30>:	6d 2a	cmp	r2, #109	; 0x6d
   0x0003e038 <+32>:	0c bf	ite	eq
   0x0003e03a <+34>:	02 20	moveq	r0, #2
   0x0003e03c <+36>:	01 20	movne	r0, #1
   0x0003e03e <+38>:	70 47	bx	lr
   0x0003e040 <+40>:	00 20	movs	r0, #0
   0x0003e042 <+42>:	70 47	bx	lr
End of assembler dump.
Dump of assembler code for function get_fileformat_force:
   0x0003e044 <+0>:	c9 b1	cbz	r1, 0x3e07a <get_fileformat_force+54>
   0x0003e046 <+2>:	4b 6d	ldr	r3, [r1, #84]	; 0x54
   0x0003e048 <+4>:	43 b1	cbz	r3, 0x3e05c <get_fileformat_force+24>
   0x0003e04a <+6>:	8a 68	ldr	r2, [r1, #8]
   0x0003e04c <+8>:	d3 5c	ldrb	r3, [r2, r3]
   0x0003e04e <+10>:	75 2b	cmp	r3, #117	; 0x75
   0x0003e050 <+12>:	11 d0	beq.n	0x3e076 <get_fileformat_force+50>
   0x0003e052 <+14>:	6d 2b	cmp	r3, #109	; 0x6d
   0x0003e054 <+16>:	0c bf	ite	eq
   0x0003e056 <+18>:	02 20	moveq	r0, #2
   0x0003e058 <+20>:	01 20	movne	r0, #1
   0x0003e05a <+22>:	70 47	bx	lr
   0x0003e05c <+24>:	cb 6c	ldr	r3, [r1, #76]	; 0x4c
   0x0003e05e <+26>:	63 b1	cbz	r3, 0x3e07a <get_fileformat_force+54>
   0x0003e060 <+28>:	a3 f1 01 03	sub.w	r3, r3, #1
   0x0003e064 <+32>:	b3 fa 83 f3	clz	r3, r3
   0x0003e068 <+36>:	5b 09	lsrs	r3, r3, #5
   0x0003e06a <+38>:	23 b9	cbnz	r3, 0x3e076 <get_fileformat_force+50>
   0x0003e06c <+40>:	d0 f8 6c 35	ldr.w	r3, [r0, #1388]	; 0x56c
   0x0003e070 <+44>:	1b 78	ldrb	r3, [r3, #0]
   0x0003e072 <+46>:	75 2b	cmp	r3, #117	; 0x75
   0x0003e074 <+48>:	ed d1	bne.n	0x3e052 <get_fileformat_force+14>
   0x0003e076 <+50>:	00 20	movs	r0, #0
   0x0003e078 <+52>:	70 47	bx	lr
   0x0003e07a <+54>:	d0 f8 50 35	ldr.w	r3, [r0, #1360]	; 0x550
   0x0003e07e <+58>:	00 33	adds	r3, #0
   0x0003e080 <+60>:	18 bf	it	ne
   0x0003e082 <+62>:	01 23	movne	r3, #1
   0x0003e084 <+64>:	f1 e7	b.n	0x3e06a <get_fileformat_force+38>
End of assembler dump.
Dump of assembler code for function get_real_state:
   0x0003e134 <+0>:	0d 4b	ldr	r3, [pc, #52]	; (0x3e16c <get_real_state+56>)
   0x0003e136 <+2>:	0e 4a	ldr	r2, [pc, #56]	; (0x3e170 <get_real_state+60>)
   0x0003e138 <+4>:	7b 44	add	r3, pc
   0x0003e13a <+6>:	9a 58	ldr	r2, [r3, r2]
   0x0003e13c <+8>:	10 68	ldr	r0, [r2, #0]
   0x0003e13e <+10>:	c2 07	lsls	r2, r0, #31
   0x0003e140 <+12>:	12 d5	bpl.n	0x3e168 <get_real_state+52>
   0x0003e142 <+14>:	0c 4a	ldr	r2, [pc, #48]	; (0x3e174 <get_real_state+64>)
   0x0003e144 <+16>:	9a 58	ldr	r2, [r3, r2]
   0x0003e146 <+18>:	12 68	ldr	r2, [r2, #0]
   0x0003e148 <+20>:	42 b1	cbz	r2, 0x3e15c <get_real_state+40>
   0x0003e14a <+22>:	0b 4a	ldr	r2, [pc, #44]	; (0x3e178 <get_real_state+68>)
   0x0003e14c <+24>:	9b 58	ldr	r3, [r3, r2]
   0x0003e14e <+26>:	1b 68	ldr	r3, [r3, #0]
   0x0003e150 <+28>:	00 2b	cmp	r3, #0
   0x0003e152 <+30>:	14 bf	ite	ne
   0x0003e154 <+32>:	4f f4 80 50	movne.w	r0, #4096	; 0x1000
   0x0003e158 <+36>:	02 20	moveq	r0, #2
   0x0003e15a <+38>:	70 47	bx	lr
   0x0003e15c <+40>:	07 4a	ldr	r2, [pc, #28]	; (0x3e17c <get_real_state+72>)
   0x0003e15e <+42>:	9b 58	ldr	r3, [r3, r2]
   0x0003e160 <+44>:	1b 68	ldr	r3, [r3, #0]
   0x0003e162 <+46>:	00 2b	cmp	r3, #0
   0x0003e164 <+48>:	18 bf	it	ne
   0x0003e166 <+50>:	04 20	movne	r0, #4
   0x0003e168 <+52>:	70 47	bx	lr
   0x0003e16a <+54>:	00 bf	nop
   0x0003e16c <+56>:	60 95	str	r5, [sp, #384]	; 0x180
   0x0003e16e <+58>:	06 00	movs	r6, r0
   0x0003e170 <+60>:	ac 08	lsrs	r4, r5, #2
   0x0003e172 <+62>:	00 00	movs	r0, r0
   0x0003e174 <+64>:	68 07	lsls	r0, r5, #29
   0x0003e176 <+66>:	00 00	movs	r0, r0
   0x0003e178 <+68>:	3c 09	lsrs	r4, r7, #4
   0x0003e17a <+70>:	00 00	movs	r0, r0
   0x0003e17c <+72>:	d0 07	lsls	r0, r2, #31
   0x0003e17e <+74>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function get_special_key_code:
   0x0003dc00 <+0>:	36 4b	ldr	r3, [pc, #216]	; (0x3dcdc <get_special_key_code+220>)
   0x0003dc02 <+2>:	37 4a	ldr	r2, [pc, #220]	; (0x3dce0 <get_special_key_code+224>)
   0x0003dc04 <+4>:	7b 44	add	r3, pc
   0x0003dc06 <+6>:	2d e9 f0 4f	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
   0x0003dc0a <+10>:	83 b0	sub	sp, #12
   0x0003dc0c <+12>:	53 f8 02 90	ldr.w	r9, [r3, r2]
   0x0003dc10 <+16>:	80 46	mov	r8, r0
   0x0003dc12 <+18>:	01 78	ldrb	r1, [r0, #0]
   0x0003dc14 <+20>:	d9 f8 00 30	ldr.w	r3, [r9]
   0x0003dc18 <+24>:	74 29	cmp	r1, #116	; 0x74
   0x0003dc1a <+26>:	01 93	str	r3, [sp, #4]
   0x0003dc1c <+28>:	3d d0	beq.n	0x3dc9a <get_special_key_code+154>
   0x0003dc1e <+30>:	31 4e	ldr	r6, [pc, #196]	; (0x3dce4 <get_special_key_code+228>)
   0x0003dc20 <+32>:	00 27	movs	r7, #0
   0x0003dc22 <+34>:	31 4d	ldr	r5, [pc, #196]	; (0x3dce8 <get_special_key_code+232>)
   0x0003dc24 <+36>:	7e 44	add	r6, pc
   0x0003dc26 <+38>:	7d 44	add	r5, pc
   0x0003dc28 <+40>:	c2 46	mov	r10, r8
   0x0003dc2a <+42>:	05 f1 ff 3b	add.w	r11, r5, #4294967295
   0x0003dc2e <+46>:	00 24	movs	r4, #0
   0x0003dc30 <+48>:	13 e0	b.n	0x3dc5a <get_special_key_code+90>
   0x0003dc32 <+50>:	1b f8 01 3f	ldrb.w	r3, [r11, #1]!
   0x0003dc36 <+54>:	b3 b1	cbz	r3, 0x3dc66 <get_special_key_code+102>
   0x0003dc38 <+56>:	1a f8 01 0b	ldrb.w	r0, [r10], #1
   0x0003dc3c <+60>:	a3 f1 41 02	sub.w	r2, r3, #65	; 0x41
   0x0003dc40 <+64>:	19 2a	cmp	r2, #25
   0x0003dc42 <+66>:	a0 f1 41 02	sub.w	r2, r0, #65	; 0x41
   0x0003dc46 <+70>:	98 bf	it	ls
   0x0003dc48 <+72>:	20 33	addls	r3, #32
   0x0003dc4a <+74>:	19 2a	cmp	r2, #25
   0x0003dc4c <+76>:	94 bf	ite	ls
   0x0003dc4e <+78>:	00 f1 20 02	addls.w	r2, r0, #32
   0x0003dc52 <+82>:	02 46	movhi	r2, r0
   0x0003dc54 <+84>:	93 42	cmp	r3, r2
   0x0003dc56 <+86>:	08 d1	bne.n	0x3dc6a <get_special_key_code+106>
   0x0003dc58 <+88>:	01 34	adds	r4, #1
   0x0003dc5a <+90>:	9a f8 00 00	ldrb.w	r0, [r10]
   0x0003dc5e <+94>:	d3 f7 c5 fa	bl	0x111ec <vim_isIDc>
   0x0003dc62 <+98>:	00 28	cmp	r0, #0
   0x0003dc64 <+100>:	e5 d1	bne.n	0x3dc32 <get_special_key_code+50>
   0x0003dc66 <+102>:	9a f8 00 00	ldrb.w	r0, [r10]
   0x0003dc6a <+106>:	d3 f7 bf fa	bl	0x111ec <vim_isIDc>
   0x0003dc6e <+110>:	08 b9	cbnz	r0, 0x3dc74 <get_special_key_code+116>
   0x0003dc70 <+112>:	2b 5d	ldrb	r3, [r5, r4]
   0x0003dc72 <+114>:	6b b1	cbz	r3, 0x3dc90 <get_special_key_code+144>
   0x0003dc74 <+116>:	08 36	adds	r6, #8
   0x0003dc76 <+118>:	75 68	ldr	r5, [r6, #4]
   0x0003dc78 <+120>:	01 37	adds	r7, #1
   0x0003dc7a <+122>:	00 2d	cmp	r5, #0
   0x0003dc7c <+124>:	d4 d1	bne.n	0x3dc28 <get_special_key_code+40>
   0x0003dc7e <+126>:	00 20	movs	r0, #0
   0x0003dc80 <+128>:	01 9a	ldr	r2, [sp, #4]
   0x0003dc82 <+130>:	d9 f8 00 30	ldr.w	r3, [r9]
   0x0003dc86 <+134>:	9a 42	cmp	r2, r3
   0x0003dc88 <+136>:	25 d1	bne.n	0x3dcd6 <get_special_key_code+214>
   0x0003dc8a <+138>:	03 b0	add	sp, #12
   0x0003dc8c <+140>:	bd e8 f0 8f	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
   0x0003dc90 <+144>:	16 4b	ldr	r3, [pc, #88]	; (0x3dcec <get_special_key_code+236>)
   0x0003dc92 <+146>:	7b 44	add	r3, pc
   0x0003dc94 <+148>:	53 f8 37 00	ldr.w	r0, [r3, r7, lsl #3]
   0x0003dc98 <+152>:	f2 e7	b.n	0x3dc80 <get_special_key_code+128>
   0x0003dc9a <+154>:	43 78	ldrb	r3, [r0, #1]
   0x0003dc9c <+156>:	5f 2b	cmp	r3, #95	; 0x5f
   0x0003dc9e <+158>:	be d1	bne.n	0x3dc1e <get_special_key_code+30>
   0x0003dca0 <+160>:	84 78	ldrb	r4, [r0, #2]
   0x0003dca2 <+162>:	00 2c	cmp	r4, #0
   0x0003dca4 <+164>:	bb d0	beq.n	0x3dc1e <get_special_key_code+30>
   0x0003dca6 <+166>:	c2 78	ldrb	r2, [r0, #3]
   0x0003dca8 <+168>:	00 2a	cmp	r2, #0
   0x0003dcaa <+170>:	b8 d0	beq.n	0x3dc1e <get_special_key_code+30>
   0x0003dcac <+172>:	00 23	movs	r3, #0
   0x0003dcae <+174>:	68 46	mov	r0, sp
   0x0003dcb0 <+176>:	19 46	mov	r1, r3
   0x0003dcb2 <+178>:	8d f8 00 40	strb.w	r4, [sp]
   0x0003dcb6 <+182>:	8d f8 01 20	strb.w	r2, [sp, #1]
   0x0003dcba <+186>:	8d f8 02 30	strb.w	r3, [sp, #2]
   0x0003dcbe <+190>:	40 f0 4b fe	bl	0x7e958 <add_termcap_entry>
   0x0003dcc2 <+194>:	01 28	cmp	r0, #1
   0x0003dcc4 <+196>:	db d1	bne.n	0x3dc7e <get_special_key_code+126>
   0x0003dcc6 <+198>:	98 f8 03 00	ldrb.w	r0, [r8, #3]
   0x0003dcca <+202>:	98 f8 02 30	ldrb.w	r3, [r8, #2]
   0x0003dcce <+206>:	03 eb 00 20	add.w	r0, r3, r0, lsl #8
   0x0003dcd2 <+210>:	40 42	negs	r0, r0
   0x0003dcd4 <+212>:	d4 e7	b.n	0x3dc80 <get_special_key_code+128>
   0x0003dcd6 <+214>:	cf f7 c4 e8	blx	0xce60 <__stack_chk_fail@plt>
   0x0003dcda <+218>:	00 bf	nop
   0x0003dcdc <+220>:	94 9a	ldr	r2, [sp, #592]	; 0x250
   0x0003dcde <+222>:	06 00	movs	r6, r0
   0x0003dce0 <+224>:	78 03	lsls	r0, r7, #13
   0x0003dce2 <+226>:	00 00	movs	r0, r0
   0x0003dce4 <+228>:	d4 61	str	r4, [r2, #28]
   0x0003dce6 <+230>:	06 00	movs	r6, r0
   0x0003dce8 <+232>:	e6 df	svc	230	; 0xe6
   0x0003dcea <+234>:	04 00	movs	r4, r0
   0x0003dcec <+236>:	66 61	str	r6, [r4, #20]
   0x0003dcee <+238>:	06 00	movs	r6, r0
End of assembler dump.
