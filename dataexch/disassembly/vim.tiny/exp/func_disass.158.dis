GNU gdb (Ubuntu 7.10-1ubuntu2) 7.10
Copyright (C) 2015 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "arm-linux-gnueabihf".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /usr/bin/vim.tiny...Reading symbols from /usr/lib/debug//usr/bin/vim.tiny...done.
done.
Dump of assembler code for function term_bg_color:
   0x0007d52c <+0>:	0c 4b	ldr	r3, [pc, #48]	; (0x7d560 <term_bg_color+52>)
   0x0007d52e <+2>:	0d 4a	ldr	r2, [pc, #52]	; (0x7d564 <term_bg_color+56>)
   0x0007d530 <+4>:	7b 44	add	r3, pc
   0x0007d532 <+6>:	10 b4	push	{r4}
   0x0007d534 <+8>:	9b 58	ldr	r3, [r3, r2]
   0x0007d536 <+10>:	d3 f8 b0 20	ldr.w	r2, [r3, #176]	; 0xb0
   0x0007d53a <+14>:	14 78	ldrb	r4, [r2, #0]
   0x0007d53c <+16>:	5c b9	cbnz	r4, 0x7d556 <term_bg_color+42>
   0x0007d53e <+18>:	d3 f8 9c 30	ldr.w	r3, [r3, #156]	; 0x9c
   0x0007d542 <+22>:	1a 78	ldrb	r2, [r3, #0]
   0x0007d544 <+24>:	12 b9	cbnz	r2, 0x7d54c <term_bg_color+32>
   0x0007d546 <+26>:	5d f8 04 4b	ldr.w	r4, [sp], #4
   0x0007d54a <+30>:	70 47	bx	lr
   0x0007d54c <+32>:	01 46	mov	r1, r0
   0x0007d54e <+34>:	5d f8 04 4b	ldr.w	r4, [sp], #4
   0x0007d552 <+38>:	18 46	mov	r0, r3
   0x0007d554 <+40>:	80 e6	b.n	0x7d258 <term_color>
   0x0007d556 <+42>:	01 46	mov	r1, r0
   0x0007d558 <+44>:	5d f8 04 4b	ldr.w	r4, [sp], #4
   0x0007d55c <+48>:	10 46	mov	r0, r2
   0x0007d55e <+50>:	7b e6	b.n	0x7d258 <term_color>
   0x0007d560 <+52>:	68 a1	add	r1, pc, #416	; (adr r1, 0x7d704 <ttest+412>)
   0x0007d562 <+54>:	02 00	movs	r2, r0
   0x0007d564 <+56>:	b4 03	lsls	r4, r6, #14
   0x0007d566 <+58>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function term_cursor_right:
   0x0007d434 <+0>:	08 b5	push	{r3, lr}
   0x0007d436 <+2>:	02 46	mov	r2, r0
   0x0007d438 <+4>:	05 4b	ldr	r3, [pc, #20]	; (0x7d450 <term_cursor_right+28>)
   0x0007d43a <+6>:	00 21	movs	r1, #0
   0x0007d43c <+8>:	05 48	ldr	r0, [pc, #20]	; (0x7d454 <term_cursor_right+32>)
   0x0007d43e <+10>:	7b 44	add	r3, pc
   0x0007d440 <+12>:	1b 58	ldr	r3, [r3, r0]
   0x0007d442 <+14>:	58 6f	ldr	r0, [r3, #116]	; 0x74
   0x0007d444 <+16>:	8f f7 dc ec	blx	0xce00 <tgoto@plt>
   0x0007d448 <+20>:	bd e8 08 40	ldmia.w	sp!, {r3, lr}
   0x0007d44c <+24>:	ff f7 d0 be	b.w	0x7d1f0 <out_str>
   0x0007d450 <+28>:	5a a2	add	r2, pc, #360	; (adr r2, 0x7d5bc <ttest+84>)
   0x0007d452 <+30>:	02 00	movs	r2, r0
   0x0007d454 <+32>:	b4 03	lsls	r4, r6, #14
   0x0007d456 <+34>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function term_delete_lines:
   0x0007d47c <+0>:	08 b5	push	{r3, lr}
   0x0007d47e <+2>:	02 46	mov	r2, r0
   0x0007d480 <+4>:	05 4b	ldr	r3, [pc, #20]	; (0x7d498 <term_delete_lines+28>)
   0x0007d482 <+6>:	00 21	movs	r1, #0
   0x0007d484 <+8>:	05 48	ldr	r0, [pc, #20]	; (0x7d49c <term_delete_lines+32>)
   0x0007d486 <+10>:	7b 44	add	r3, pc
   0x0007d488 <+12>:	1b 58	ldr	r3, [r3, r0]
   0x0007d48a <+14>:	58 69	ldr	r0, [r3, #20]
   0x0007d48c <+16>:	8f f7 b8 ec	blx	0xce00 <tgoto@plt>
   0x0007d490 <+20>:	bd e8 08 40	ldmia.w	sp!, {r3, lr}
   0x0007d494 <+24>:	ff f7 ac be	b.w	0x7d1f0 <out_str>
   0x0007d498 <+28>:	12 a2	add	r2, pc, #72	; (adr r2, 0x7d4e4 <term_set_winsize+24>)
   0x0007d49a <+30>:	02 00	movs	r2, r0
   0x0007d49c <+32>:	b4 03	lsls	r4, r6, #14
   0x0007d49e <+34>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function term_fg_color:
   0x0007d4f0 <+0>:	0c 4b	ldr	r3, [pc, #48]	; (0x7d524 <term_fg_color+52>)
   0x0007d4f2 <+2>:	0d 4a	ldr	r2, [pc, #52]	; (0x7d528 <term_fg_color+56>)
   0x0007d4f4 <+4>:	7b 44	add	r3, pc
   0x0007d4f6 <+6>:	10 b4	push	{r4}
   0x0007d4f8 <+8>:	9b 58	ldr	r3, [r3, r2]
   0x0007d4fa <+10>:	d3 f8 ac 20	ldr.w	r2, [r3, #172]	; 0xac
   0x0007d4fe <+14>:	14 78	ldrb	r4, [r2, #0]
   0x0007d500 <+16>:	5c b9	cbnz	r4, 0x7d51a <term_fg_color+42>
   0x0007d502 <+18>:	d3 f8 98 30	ldr.w	r3, [r3, #152]	; 0x98
   0x0007d506 <+22>:	1a 78	ldrb	r2, [r3, #0]
   0x0007d508 <+24>:	12 b9	cbnz	r2, 0x7d510 <term_fg_color+32>
   0x0007d50a <+26>:	5d f8 04 4b	ldr.w	r4, [sp], #4
   0x0007d50e <+30>:	70 47	bx	lr
   0x0007d510 <+32>:	01 46	mov	r1, r0
   0x0007d512 <+34>:	5d f8 04 4b	ldr.w	r4, [sp], #4
   0x0007d516 <+38>:	18 46	mov	r0, r3
   0x0007d518 <+40>:	9e e6	b.n	0x7d258 <term_color>
   0x0007d51a <+42>:	01 46	mov	r1, r0
   0x0007d51c <+44>:	5d f8 04 4b	ldr.w	r4, [sp], #4
   0x0007d520 <+48>:	10 46	mov	r0, r2
   0x0007d522 <+50>:	99 e6	b.n	0x7d258 <term_color>
   0x0007d524 <+52>:	a4 a1	add	r1, pc, #656	; (adr r1, 0x7d7b8 <win_new_shellsize+20>)
   0x0007d526 <+54>:	02 00	movs	r2, r0
   0x0007d528 <+56>:	b4 03	lsls	r4, r6, #14
   0x0007d52a <+58>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function term_is_8bit:
   0x0007d120 <+0>:	08 b5	push	{r3, lr}
   0x0007d122 <+2>:	07 4b	ldr	r3, [pc, #28]	; (0x7d140 <term_is_8bit+32>)
   0x0007d124 <+4>:	7b 44	add	r3, pc
   0x0007d126 <+6>:	d3 f8 04 38	ldr.w	r3, [r3, #2052]	; 0x804
   0x0007d12a <+10>:	3b b9	cbnz	r3, 0x7d13c <term_is_8bit+28>
   0x0007d12c <+12>:	05 49	ldr	r1, [pc, #20]	; (0x7d144 <term_is_8bit+36>)
   0x0007d12e <+14>:	79 44	add	r1, pc
   0x0007d130 <+16>:	8f f7 ac ed	blx	0xcc8c <strstr@plt>
   0x0007d134 <+20>:	00 30	adds	r0, #0
   0x0007d136 <+22>:	18 bf	it	ne
   0x0007d138 <+24>:	01 20	movne	r0, #1
   0x0007d13a <+26>:	08 bd	pop	{r3, pc}
   0x0007d13c <+28>:	01 20	movs	r0, #1
   0x0007d13e <+30>:	08 bd	pop	{r3, pc}
   0x0007d140 <+32>:	04 36	adds	r6, #4
   0x0007d142 <+34>:	03 00	movs	r3, r0
   0x0007d144 <+36>:	8e 37	adds	r7, #142	; 0x8e
   0x0007d146 <+38>:	01 00	movs	r1, r0
End of assembler dump.
Dump of assembler code for function term_set_winpos:
   0x0007d4a0 <+0>:	08 b5	push	{r3, lr}
   0x0007d4a2 <+2>:	20 ea e0 72	bic.w	r2, r0, r0, asr #31
   0x0007d4a6 <+6>:	07 4b	ldr	r3, [pc, #28]	; (0x7d4c4 <term_set_winpos+36>)
   0x0007d4a8 <+8>:	21 ea e1 71	bic.w	r1, r1, r1, asr #31
   0x0007d4ac <+12>:	06 48	ldr	r0, [pc, #24]	; (0x7d4c8 <term_set_winpos+40>)
   0x0007d4ae <+14>:	7b 44	add	r3, pc
   0x0007d4b0 <+16>:	1b 58	ldr	r3, [r3, r0]
   0x0007d4b2 <+18>:	d3 f8 cc 00	ldr.w	r0, [r3, #204]	; 0xcc
   0x0007d4b6 <+22>:	8f f7 a4 ec	blx	0xce00 <tgoto@plt>
   0x0007d4ba <+26>:	bd e8 08 40	ldmia.w	sp!, {r3, lr}
   0x0007d4be <+30>:	ff f7 97 be	b.w	0x7d1f0 <out_str>
   0x0007d4c2 <+34>:	00 bf	nop
   0x0007d4c4 <+36>:	ea a1	add	r1, pc, #936	; (adr r1, 0x7d870 <set_shellsize+48>)
   0x0007d4c6 <+38>:	02 00	movs	r2, r0
   0x0007d4c8 <+40>:	b4 03	lsls	r4, r6, #14
   0x0007d4ca <+42>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function term_set_winsize:
   0x0007d4cc <+0>:	08 b5	push	{r3, lr}
   0x0007d4ce <+2>:	02 46	mov	r2, r0
   0x0007d4d0 <+4>:	05 4b	ldr	r3, [pc, #20]	; (0x7d4e8 <term_set_winsize+28>)
   0x0007d4d2 <+6>:	06 48	ldr	r0, [pc, #24]	; (0x7d4ec <term_set_winsize+32>)
   0x0007d4d4 <+8>:	7b 44	add	r3, pc
   0x0007d4d6 <+10>:	1b 58	ldr	r3, [r3, r0]
   0x0007d4d8 <+12>:	d3 f8 d0 00	ldr.w	r0, [r3, #208]	; 0xd0
   0x0007d4dc <+16>:	8f f7 90 ec	blx	0xce00 <tgoto@plt>
   0x0007d4e0 <+20>:	bd e8 08 40	ldmia.w	sp!, {r3, lr}
   0x0007d4e4 <+24>:	ff f7 84 be	b.w	0x7d1f0 <out_str>
   0x0007d4e8 <+28>:	c4 a1	add	r1, pc, #784	; (adr r1, 0x7d7fc <win_new_shellsize+88>)
   0x0007d4ea <+30>:	02 00	movs	r2, r0
   0x0007d4ec <+32>:	b4 03	lsls	r4, r6, #14
   0x0007d4ee <+34>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function term_windgoto:
   0x0007d410 <+0>:	08 b5	push	{r3, lr}
   0x0007d412 <+2>:	02 46	mov	r2, r0
   0x0007d414 <+4>:	05 4b	ldr	r3, [pc, #20]	; (0x7d42c <term_windgoto+28>)
   0x0007d416 <+6>:	06 48	ldr	r0, [pc, #24]	; (0x7d430 <term_windgoto+32>)
   0x0007d418 <+8>:	7b 44	add	r3, pc
   0x0007d41a <+10>:	1b 58	ldr	r3, [r3, r0]
   0x0007d41c <+12>:	d8 6e	ldr	r0, [r3, #108]	; 0x6c
   0x0007d41e <+14>:	8f f7 f0 ec	blx	0xce00 <tgoto@plt>
   0x0007d422 <+18>:	bd e8 08 40	ldmia.w	sp!, {r3, lr}
   0x0007d426 <+22>:	ff f7 e3 be	b.w	0x7d1f0 <out_str>
   0x0007d42a <+26>:	00 bf	nop
   0x0007d42c <+28>:	80 a2	add	r2, pc, #512	; (adr r2, 0x7d630 <ttest+200>)
   0x0007d42e <+30>:	02 00	movs	r2, r0
   0x0007d430 <+32>:	b4 03	lsls	r4, r6, #14
   0x0007d432 <+34>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function termcapinit:
   0x0007e8d0 <+0>:	70 b5	push	{r4, r5, r6, lr}
   0x0007e8d2 <+2>:	82 b0	sub	sp, #8
   0x0007e8d4 <+4>:	19 4e	ldr	r6, [pc, #100]	; (0x7e93c <termcapinit+108>)
   0x0007e8d6 <+6>:	7e 44	add	r6, pc
   0x0007e8d8 <+8>:	10 b1	cbz	r0, 0x7e8e0 <termcapinit+16>
   0x0007e8da <+10>:	03 78	ldrb	r3, [r0, #0]
   0x0007e8dc <+12>:	04 46	mov	r4, r0
   0x0007e8de <+14>:	3b b9	cbnz	r3, 0x7e8f0 <termcapinit+32>
   0x0007e8e0 <+16>:	17 48	ldr	r0, [pc, #92]	; (0x7e940 <termcapinit+112>)
   0x0007e8e2 <+18>:	78 44	add	r0, pc
   0x0007e8e4 <+20>:	8e f7 78 eb	blx	0xcfd8 <getenv@plt>
   0x0007e8e8 <+24>:	04 46	mov	r4, r0
   0x0007e8ea <+26>:	00 bb	cbnz	r0, 0x7e92e <termcapinit+94>
   0x0007e8ec <+28>:	15 4c	ldr	r4, [pc, #84]	; (0x7e944 <termcapinit+116>)
   0x0007e8ee <+30>:	7c 44	add	r4, pc
   0x0007e8f0 <+32>:	15 4d	ldr	r5, [pc, #84]	; (0x7e948 <termcapinit+120>)
   0x0007e8f2 <+34>:	01 23	movs	r3, #1
   0x0007e8f4 <+36>:	00 22	movs	r2, #0
   0x0007e8f6 <+38>:	4f f0 ff 31	mov.w	r1, #4294967295
   0x0007e8fa <+42>:	7d 44	add	r5, pc
   0x0007e8fc <+44>:	00 92	str	r2, [sp, #0]
   0x0007e8fe <+46>:	22 46	mov	r2, r4
   0x0007e900 <+48>:	28 46	mov	r0, r5
   0x0007e902 <+50>:	d2 f7 8f fa	bl	0x50e24 <set_string_option_direct>
   0x0007e906 <+54>:	21 46	mov	r1, r4
   0x0007e908 <+56>:	28 46	mov	r0, r5
   0x0007e90a <+58>:	d2 f7 1f f8	bl	0x5094c <set_string_default>
   0x0007e90e <+62>:	0f 48	ldr	r0, [pc, #60]	; (0x7e94c <termcapinit+124>)
   0x0007e910 <+64>:	21 46	mov	r1, r4
   0x0007e912 <+66>:	78 44	add	r0, pc
   0x0007e914 <+68>:	d2 f7 1a f8	bl	0x5094c <set_string_default>
   0x0007e918 <+72>:	0d 4b	ldr	r3, [pc, #52]	; (0x7e950 <termcapinit+128>)
   0x0007e91a <+74>:	f3 58	ldr	r3, [r6, r3]
   0x0007e91c <+76>:	18 68	ldr	r0, [r3, #0]
   0x0007e91e <+78>:	00 28	cmp	r0, #0
   0x0007e920 <+80>:	08 bf	it	eq
   0x0007e922 <+82>:	20 46	moveq	r0, r4
   0x0007e924 <+84>:	02 b0	add	sp, #8
   0x0007e926 <+86>:	bd e8 70 40	ldmia.w	sp!, {r4, r5, r6, lr}
   0x0007e92a <+90>:	ff f7 41 bb	b.w	0x7dfb0 <set_termname>
   0x0007e92e <+94>:	23 78	ldrb	r3, [r4, #0]
   0x0007e930 <+96>:	00 2b	cmp	r3, #0
   0x0007e932 <+98>:	dd d1	bne.n	0x7e8f0 <termcapinit+32>
   0x0007e934 <+100>:	07 4c	ldr	r4, [pc, #28]	; (0x7e954 <termcapinit+132>)
   0x0007e936 <+102>:	7c 44	add	r4, pc
   0x0007e938 <+104>:	da e7	b.n	0x7e8f0 <termcapinit+32>
   0x0007e93a <+106>:	00 bf	nop
   0x0007e93c <+108>:	c2 8d	ldrh	r2, [r0, #46]	; 0x2e
   0x0007e93e <+110>:	02 00	movs	r2, r0
   0x0007e940 <+112>:	0e 05	lsls	r6, r1, #20
   0x0007e942 <+114>:	01 00	movs	r1, r0
   0x0007e944 <+116>:	b6 db	blt.n	0x7e8b4 <set_termname+2308>
   0x0007e946 <+118>:	00 00	movs	r0, r0
   0x0007e948 <+120>:	b2 3a	subs	r2, #178	; 0xb2
   0x0007e94a <+122>:	01 00	movs	r1, r0
   0x0007e94c <+124>:	d2 fe 00 00	cdp2	0, 13, cr0, cr2, cr0, {0}
   0x0007e950 <+128>:	b4 03	lsls	r4, r6, #14
   0x0007e952 <+130>:	00 00	movs	r0, r0
   0x0007e954 <+132>:	6e db	blt.n	0x7ea34 <add_termcap_entry+220>
   0x0007e956 <+134>:	00 00	movs	r0, r0
End of assembler dump.
