GNU gdb (Ubuntu 7.10-1ubuntu2) 7.10
Copyright (C) 2015 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "arm-linux-gnueabihf".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /bin/tar...Reading symbols from /usr/lib/debug//bin/tar...done.
done.
Dump of assembler code for function wordsplit_strerror:
   0x000262e0 <+0>:	45 f2 a0 63	movw	r3, #22176	; 0x56a0
   0x000262e4 <+4>:	c0 f2 04 03	movt	r3, #4
   0x000262e8 <+8>:	42 6c	ldr	r2, [r0, #68]	; 0x44
   0x000262ea <+10>:	59 69	ldr	r1, [r3, #20]
   0x000262ec <+12>:	8a 42	cmp	r2, r1
   0x000262ee <+14>:	b9 bf	ittee	lt
   0x000262f0 <+16>:	03 eb 82 03	addlt.w	r3, r3, r2, lsl #2
   0x000262f4 <+20>:	98 69	ldrlt	r0, [r3, #24]
   0x000262f6 <+22>:	49 f2 f0 30	movwge	r0, #37872	; 0x93f0
   0x000262fa <+26>:	c0 f2 03 00	movtge	r0, #3
   0x000262fe <+30>:	70 47	bx	lr
End of assembler dump.
Dump of assembler code for function _wsplt_alloc_die:
   0x00024e6c <+0>:	08 b5	push	{r3, lr}
   0x00024e6e <+2>:	05 22	movs	r2, #5
   0x00024e70 <+4>:	44 6a	ldr	r4, [r0, #36]	; 0x24
   0x00024e72 <+6>:	43 f6 f0 21	movw	r1, #15088	; 0x3af0
   0x00024e76 <+10>:	00 20	movs	r0, #0
   0x00024e78 <+12>:	c0 f2 03 01	movt	r1, #3
   0x00024e7c <+16>:	e5 f7 cc ee	blx	0xac18 <dcgettext@plt>
   0x00024e80 <+20>:	a0 47	blx	r4
   0x00024e82 <+22>:	e6 f7 2e ea	blx	0xb2e0 <abort@plt>
End of assembler dump.
Dump of assembler code for function _wsplt_error:
   0x00024e38 <+0>:	0f b4	push	{r0, r1, r2, r3}
   0x00024e3a <+2>:	01 21	movs	r1, #1
   0x00024e3c <+4>:	30 b5	push	{r4, r5, lr}
   0x00024e3e <+6>:	83 b0	sub	sp, #12
   0x00024e40 <+8>:	06 ad	add	r5, sp, #24
   0x00024e42 <+10>:	45 f2 78 74	movw	r4, #22392	; 0x5778
   0x00024e46 <+14>:	c0 f2 04 04	movt	r4, #4
   0x00024e4a <+18>:	55 f8 04 2b	ldr.w	r2, [r5], #4
   0x00024e4e <+22>:	20 68	ldr	r0, [r4, #0]
   0x00024e50 <+24>:	2b 46	mov	r3, r5
   0x00024e52 <+26>:	01 95	str	r5, [sp, #4]
   0x00024e54 <+28>:	e6 f7 0e e8	blx	0xae74 <__vfprintf_chk@plt>
   0x00024e58 <+32>:	21 68	ldr	r1, [r4, #0]
   0x00024e5a <+34>:	0a 20	movs	r0, #10
   0x00024e5c <+36>:	e6 f7 a0 e9	blx	0xb1a0 <fputc@plt>
   0x00024e60 <+40>:	03 b0	add	sp, #12
   0x00024e62 <+42>:	bd e8 30 40	ldmia.w	sp!, {r4, r5, lr}
   0x00024e66 <+46>:	04 b0	add	sp, #16
   0x00024e68 <+48>:	70 47	bx	lr
End of assembler dump.
Dump of assembler code for function _wsplt_nomem:
   0x00025294 <+0>:	38 b5	push	{r3, r4, r5, lr}
   0x00025296 <+2>:	05 46	mov	r5, r0
   0x00025298 <+4>:	e5 f7 8e ee	blx	0xafb8 <__errno_location@plt>
   0x0002529c <+8>:	0c 23	movs	r3, #12
   0x0002529e <+10>:	02 22	movs	r2, #2
   0x000252a0 <+12>:	03 60	str	r3, [r0, #0]
   0x000252a2 <+14>:	2b 69	ldr	r3, [r5, #16]
   0x000252a4 <+16>:	6a 64	str	r2, [r5, #68]	; 0x44
   0x000252a6 <+18>:	19 06	lsls	r1, r3, #24
   0x000252a8 <+20>:	12 d4	bmi.n	0x252d0 <_wsplt_nomem+60>
   0x000252aa <+22>:	da 06	lsls	r2, r3, #27
   0x000252ac <+24>:	16 d4	bmi.n	0x252dc <_wsplt_nomem+72>
   0x000252ae <+26>:	13 f0 08 04	ands.w	r4, r3, #8
   0x000252b2 <+30>:	1a d0	beq.n	0x252ea <_wsplt_nomem+86>
   0x000252b4 <+32>:	a8 6c	ldr	r0, [r5, #72]	; 0x48
   0x000252b6 <+34>:	08 b9	cbnz	r0, 0x252bc <_wsplt_nomem+40>
   0x000252b8 <+36>:	05 e0	b.n	0x252c6 <_wsplt_nomem+50>
   0x000252ba <+38>:	20 46	mov	r0, r4
   0x000252bc <+40>:	44 68	ldr	r4, [r0, #4]
   0x000252be <+42>:	ff f7 e3 fd	bl	0x24e88 <wsnode_free>
   0x000252c2 <+46>:	00 2c	cmp	r4, #0
   0x000252c4 <+48>:	f9 d1	bne.n	0x252ba <_wsplt_nomem+38>
   0x000252c6 <+50>:	00 23	movs	r3, #0
   0x000252c8 <+52>:	68 6c	ldr	r0, [r5, #68]	; 0x44
   0x000252ca <+54>:	eb 64	str	r3, [r5, #76]	; 0x4c
   0x000252cc <+56>:	ab 64	str	r3, [r5, #72]	; 0x48
   0x000252ce <+58>:	38 bd	pop	{r3, r4, r5, pc}
   0x000252d0 <+60>:	2b 6a	ldr	r3, [r5, #32]
   0x000252d2 <+62>:	28 46	mov	r0, r5
   0x000252d4 <+64>:	98 47	blx	r3
   0x000252d6 <+66>:	2b 69	ldr	r3, [r5, #16]
   0x000252d8 <+68>:	da 06	lsls	r2, r3, #27
   0x000252da <+70>:	e8 d5	bpl.n	0x252ae <_wsplt_nomem+26>
   0x000252dc <+72>:	28 46	mov	r0, r5
   0x000252de <+74>:	ff f7 7b ff	bl	0x251d8 <wordsplit_perror>
   0x000252e2 <+78>:	2b 69	ldr	r3, [r5, #16]
   0x000252e4 <+80>:	13 f0 08 04	ands.w	r4, r3, #8
   0x000252e8 <+84>:	e4 d1	bne.n	0x252b4 <_wsplt_nomem+32>
   0x000252ea <+86>:	28 46	mov	r0, r5
   0x000252ec <+88>:	ff f7 3c ff	bl	0x25168 <wordsplit_free_words>
   0x000252f0 <+92>:	68 68	ldr	r0, [r5, #4]
   0x000252f2 <+94>:	e5 f7 14 ec	blx	0xab1c <free>
   0x000252f6 <+98>:	6c 60	str	r4, [r5, #4]
   0x000252f8 <+100>:	dc e7	b.n	0x252b4 <_wsplt_nomem+32>
End of assembler dump.
Dump of assembler code for function node_split_prefix:
   0x00025368 <+0>:	2d e9 f0 43	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   0x0002536c <+4>:	83 b0	sub	sp, #12
   0x0002536e <+6>:	0d 46	mov	r5, r1
   0x00025370 <+8>:	01 a9	add	r1, sp, #4
   0x00025372 <+10>:	16 46	mov	r6, r2
   0x00025374 <+12>:	98 46	mov	r8, r3
   0x00025376 <+14>:	07 46	mov	r7, r0
   0x00025378 <+16>:	ff f7 c0 ff	bl	0x252fc <wsnode_new>
   0x0002537c <+20>:	04 46	mov	r4, r0
   0x0002537e <+22>:	20 b1	cbz	r0, 0x2538a <node_split_prefix+34>
   0x00025380 <+24>:	01 24	movs	r4, #1
   0x00025382 <+26>:	20 46	mov	r0, r4
   0x00025384 <+28>:	03 b0	add	sp, #12
   0x00025386 <+30>:	bd e8 f0 83	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   0x0002538a <+34>:	2a 68	ldr	r2, [r5, #0]
   0x0002538c <+36>:	38 46	mov	r0, r7
   0x0002538e <+38>:	01 99	ldr	r1, [sp, #4]
   0x00025390 <+40>:	ff f7 ba fd	bl	0x24f08 <wsnode_insert>
   0x00025394 <+44>:	b3 68	ldr	r3, [r6, #8]
   0x00025396 <+46>:	9a 07	lsls	r2, r3, #30
   0x00025398 <+48>:	1d d5	bpl.n	0x253d6 <node_split_prefix+110>
   0x0002539a <+50>:	0a 98	ldr	r0, [sp, #40]	; 0x28
   0x0002539c <+52>:	db 07	lsls	r3, r3, #31
   0x0002539e <+54>:	00 f1 01 00	add.w	r0, r0, #1
   0x000253a2 <+58>:	52 bf	itee	pl
   0x000253a4 <+60>:	d6 f8 0c 90	ldrpl.w	r9, [r6, #12]
   0x000253a8 <+64>:	4b f2 b0 29	movwmi	r9, #45744	; 0xb2b0
   0x000253ac <+68>:	c0 f2 03 09	movtmi	r9, #3
   0x000253b0 <+72>:	e5 f7 42 ed	blx	0xae38 <malloc@plt>
   0x000253b4 <+76>:	06 46	mov	r6, r0
   0x000253b6 <+78>:	f8 b1	cbz	r0, 0x253f8 <node_split_prefix+144>
   0x000253b8 <+80>:	09 eb 08 01	add.w	r1, r9, r8
   0x000253bc <+84>:	0a 9a	ldr	r2, [sp, #40]	; 0x28
   0x000253be <+86>:	e5 f7 da eb	blx	0xab74 <memcpy@plt+4>
   0x000253c2 <+90>:	0a 9a	ldr	r2, [sp, #40]	; 0x28
   0x000253c4 <+92>:	00 23	movs	r3, #0
   0x000253c6 <+94>:	02 20	movs	r0, #2
   0x000253c8 <+96>:	01 46	mov	r1, r0
   0x000253ca <+98>:	b3 54	strb	r3, [r6, r2]
   0x000253cc <+100>:	01 9a	ldr	r2, [sp, #4]
   0x000253ce <+102>:	d6 60	str	r6, [r2, #12]
   0x000253d0 <+104>:	13 46	mov	r3, r2
   0x000253d2 <+106>:	90 60	str	r0, [r2, #8]
   0x000253d4 <+108>:	08 e0	b.n	0x253e8 <node_split_prefix+128>
   0x000253d6 <+110>:	01 9a	ldr	r2, [sp, #4]
   0x000253d8 <+112>:	f0 68	ldr	r0, [r6, #12]
   0x000253da <+114>:	0a 9e	ldr	r6, [sp, #40]	; 0x28
   0x000253dc <+116>:	91 68	ldr	r1, [r2, #8]
   0x000253de <+118>:	40 44	add	r0, r8
   0x000253e0 <+120>:	13 46	mov	r3, r2
   0x000253e2 <+122>:	06 44	add	r6, r0
   0x000253e4 <+124>:	d0 60	str	r0, [r2, #12]
   0x000253e6 <+126>:	16 61	str	r6, [r2, #16]
   0x000253e8 <+128>:	0b 9a	ldr	r2, [sp, #44]	; 0x2c
   0x000253ea <+130>:	20 46	mov	r0, r4
   0x000253ec <+132>:	0a 43	orrs	r2, r1
   0x000253ee <+134>:	9a 60	str	r2, [r3, #8]
   0x000253f0 <+136>:	2b 60	str	r3, [r5, #0]
   0x000253f2 <+138>:	03 b0	add	sp, #12
   0x000253f4 <+140>:	bd e8 f0 83	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   0x000253f8 <+144>:	38 46	mov	r0, r7
   0x000253fa <+146>:	ff f7 4b ff	bl	0x25294 <_wsplt_nomem>
   0x000253fe <+150>:	04 46	mov	r4, r0
   0x00025400 <+152>:	bf e7	b.n	0x25382 <node_split_prefix+26>
End of assembler dump.
Dump of assembler code for function skip_delim:
   0x00024c7c <+0>:	03 69	ldr	r3, [r0, #16]
   0x00024c7e <+2>:	2d e9 f0 41	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   0x00024c82 <+6>:	1a 05	lsls	r2, r3, #20
   0x00024c84 <+8>:	05 46	mov	r5, r0
   0x00024c86 <+10>:	04 6c	ldr	r4, [r0, #64]	; 0x40
   0x00024c88 <+12>:	58 bf	it	pl
   0x00024c8a <+14>:	03 f4 80 57	andpl.w	r7, r3, #4096	; 0x1000
   0x00024c8e <+18>:	16 d5	bpl.n	0x24cbe <skip_delim+66>
   0x00024c90 <+20>:	13 f4 80 57	ands.w	r7, r3, #4096	; 0x1000
   0x00024c94 <+24>:	18 d0	beq.n	0x24cc8 <skip_delim+76>
   0x00024c96 <+26>:	82 6b	ldr	r2, [r0, #56]	; 0x38
   0x00024c98 <+28>:	40 69	ldr	r0, [r0, #20]
   0x00024c9a <+30>:	02 eb 04 08	add.w	r8, r2, r4
   0x00024c9e <+34>:	16 5d	ldrb	r6, [r2, r4]
   0x00024ca0 <+36>:	31 46	mov	r1, r6
   0x00024ca2 <+38>:	e6 f7 44 e9	blx	0xaf2c <strchr@plt>
   0x00024ca6 <+42>:	78 b1	cbz	r0, 0x24cc8 <skip_delim+76>
   0x00024ca8 <+44>:	e9 6b	ldr	r1, [r5, #60]	; 0x3c
   0x00024caa <+46>:	43 46	mov	r3, r8
   0x00024cac <+48>:	03 e0	b.n	0x24cb6 <skip_delim+58>
   0x00024cae <+50>:	13 f8 01 2f	ldrb.w	r2, [r3, #1]!
   0x00024cb2 <+54>:	96 42	cmp	r6, r2
   0x00024cb4 <+56>:	02 d1	bne.n	0x24cbc <skip_delim+64>
   0x00024cb6 <+58>:	01 34	adds	r4, #1
   0x00024cb8 <+60>:	8c 42	cmp	r4, r1
   0x00024cba <+62>:	f8 d3	bcc.n	0x24cae <skip_delim+50>
   0x00024cbc <+64>:	01 3c	subs	r4, #1
   0x00024cbe <+66>:	07 b9	cbnz	r7, 0x24cc2 <skip_delim+70>
   0x00024cc0 <+68>:	01 34	adds	r4, #1
   0x00024cc2 <+70>:	20 46	mov	r0, r4
   0x00024cc4 <+72>:	bd e8 f0 81	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   0x00024cc8 <+76>:	ee 6b	ldr	r6, [r5, #60]	; 0x3c
   0x00024cca <+78>:	06 e0	b.n	0x24cda <skip_delim+94>
   0x00024ccc <+80>:	ab 6b	ldr	r3, [r5, #56]	; 0x38
   0x00024cce <+82>:	68 69	ldr	r0, [r5, #20]
   0x00024cd0 <+84>:	19 5d	ldrb	r1, [r3, r4]
   0x00024cd2 <+86>:	e6 f7 2c e9	blx	0xaf2c <strchr@plt>
   0x00024cd6 <+90>:	00 28	cmp	r0, #0
   0x00024cd8 <+92>:	f0 d0	beq.n	0x24cbc <skip_delim+64>
   0x00024cda <+94>:	01 34	adds	r4, #1
   0x00024cdc <+96>:	b4 42	cmp	r4, r6
   0x00024cde <+98>:	f5 d3	bcc.n	0x24ccc <skip_delim+80>
   0x00024ce0 <+100>:	01 3c	subs	r4, #1
   0x00024ce2 <+102>:	ec e7	b.n	0x24cbe <skip_delim+66>
End of assembler dump.
Dump of assembler code for function wordsplit_add_segm:
   0x0002531c <+0>:	8a 42	cmp	r2, r1
   0x0002531e <+2>:	2d e9 f0 41	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   0x00025322 <+6>:	05 46	mov	r5, r0
   0x00025324 <+8>:	82 b0	sub	sp, #8
   0x00025326 <+10>:	0e 46	mov	r6, r1
   0x00025328 <+12>:	17 46	mov	r7, r2
   0x0002532a <+14>:	98 46	mov	r8, r3
   0x0002532c <+16>:	14 d0	beq.n	0x25358 <wordsplit_add_segm+60>
   0x0002532e <+18>:	28 46	mov	r0, r5
   0x00025330 <+20>:	01 a9	add	r1, sp, #4
   0x00025332 <+22>:	ff f7 e3 ff	bl	0x252fc <wsnode_new>
   0x00025336 <+26>:	60 b9	cbnz	r0, 0x25352 <wordsplit_add_segm+54>
   0x00025338 <+28>:	01 9c	ldr	r4, [sp, #4]
   0x0002533a <+30>:	28 f4 81 72	bic.w	r2, r8, #258	; 0x102
   0x0002533e <+34>:	e6 60	str	r6, [r4, #12]
   0x00025340 <+36>:	27 61	str	r7, [r4, #16]
   0x00025342 <+38>:	60 60	str	r0, [r4, #4]
   0x00025344 <+40>:	eb 6c	ldr	r3, [r5, #76]	; 0x4c
   0x00025346 <+42>:	a2 60	str	r2, [r4, #8]
   0x00025348 <+44>:	23 60	str	r3, [r4, #0]
   0x0002534a <+46>:	5b b1	cbz	r3, 0x25364 <wordsplit_add_segm+72>
   0x0002534c <+48>:	5c 60	str	r4, [r3, #4]
   0x0002534e <+50>:	00 20	movs	r0, #0
   0x00025350 <+52>:	ec 64	str	r4, [r5, #76]	; 0x4c
   0x00025352 <+54>:	02 b0	add	sp, #8
   0x00025354 <+56>:	bd e8 f0 81	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   0x00025358 <+60>:	13 f4 80 70	ands.w	r0, r3, #256	; 0x100
   0x0002535c <+64>:	e7 d1	bne.n	0x2532e <wordsplit_add_segm+18>
   0x0002535e <+66>:	02 b0	add	sp, #8
   0x00025360 <+68>:	bd e8 f0 81	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   0x00025364 <+72>:	ac 64	str	r4, [r5, #72]	; 0x48
   0x00025366 <+74>:	f2 e7	b.n	0x2534e <wordsplit_add_segm+50>
End of assembler dump.
Dump of assembler code for function wordsplit_dump_nodes:
   0x00024bd4 <+0>:	2d e9 f0 41	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   0x00024bd8 <+4>:	07 46	mov	r7, r0
   0x00024bda <+6>:	84 6c	ldr	r4, [r0, #72]	; 0x48
   0x00024bdc <+8>:	84 b0	sub	sp, #16
   0x00024bde <+10>:	00 2c	cmp	r4, #0
   0x00024be0 <+12>:	32 d0	beq.n	0x24c48 <wordsplit_dump_nodes+116>
   0x00024be2 <+14>:	00 26	movs	r6, #0
   0x00024be4 <+16>:	0f e0	b.n	0x24c06 <wordsplit_dump_nodes+50>
   0x00024be6 <+18>:	ff f7 cb ff	bl	0x24b80 <wsnode_flagstr>
   0x00024bea <+22>:	2b 46	mov	r3, r5
   0x00024bec <+24>:	31 46	mov	r1, r6
   0x00024bee <+26>:	22 46	mov	r2, r4
   0x00024bf0 <+28>:	01 36	adds	r6, #1
   0x00024bf2 <+30>:	00 90	str	r0, [sp, #0]
   0x00024bf4 <+32>:	49 f2 e4 20	movw	r0, #37604	; 0x92e4
   0x00024bf8 <+36>:	e5 68	ldr	r5, [r4, #12]
   0x00024bfa <+38>:	c0 f2 03 00	movt	r0, #3
   0x00024bfe <+42>:	01 95	str	r5, [sp, #4]
   0x00024c00 <+44>:	c0 47	blx	r8
   0x00024c02 <+46>:	64 68	ldr	r4, [r4, #4]
   0x00024c04 <+48>:	04 b3	cbz	r4, 0x24c48 <wordsplit_dump_nodes+116>
   0x00024c06 <+50>:	a5 68	ldr	r5, [r4, #8]
   0x00024c08 <+52>:	d7 f8 28 80	ldr.w	r8, [r7, #40]	; 0x28
   0x00024c0c <+56>:	15 f0 02 0f	tst.w	r5, #2
   0x00024c10 <+60>:	28 46	mov	r0, r5
   0x00024c12 <+62>:	e8 d1	bne.n	0x24be6 <wordsplit_dump_nodes+18>
   0x00024c14 <+64>:	ff f7 b4 ff	bl	0x24b80 <wsnode_flagstr>
   0x00024c18 <+68>:	d4 f8 0c e0	ldr.w	lr, [r4, #12]
   0x00024c1c <+72>:	2b 46	mov	r3, r5
   0x00024c1e <+74>:	bd 6b	ldr	r5, [r7, #56]	; 0x38
   0x00024c20 <+76>:	31 46	mov	r1, r6
   0x00024c22 <+78>:	22 46	mov	r2, r4
   0x00024c24 <+80>:	05 eb 0e 0c	add.w	r12, r5, lr
   0x00024c28 <+84>:	01 36	adds	r6, #1
   0x00024c2a <+86>:	00 90	str	r0, [sp, #0]
   0x00024c2c <+88>:	49 f2 fc 20	movw	r0, #37628	; 0x92fc
   0x00024c30 <+92>:	25 69	ldr	r5, [r4, #16]
   0x00024c32 <+94>:	c0 f2 03 00	movt	r0, #3
   0x00024c36 <+98>:	cd f8 08 c0	str.w	r12, [sp, #8]
   0x00024c3a <+102>:	ce eb 05 05	rsb	r5, lr, r5
   0x00024c3e <+106>:	01 95	str	r5, [sp, #4]
   0x00024c40 <+108>:	c0 47	blx	r8
   0x00024c42 <+110>:	64 68	ldr	r4, [r4, #4]
   0x00024c44 <+112>:	00 2c	cmp	r4, #0
   0x00024c46 <+114>:	de d1	bne.n	0x24c06 <wordsplit_dump_nodes+50>
   0x00024c48 <+116>:	04 b0	add	sp, #16
   0x00024c4a <+118>:	bd e8 f0 81	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
End of assembler dump.
Dump of assembler code for function wordsplit_init0:
   0x0002519c <+0>:	03 69	ldr	r3, [r0, #16]
   0x0002519e <+2>:	10 b5	push	{r4, lr}
   0x000251a0 <+4>:	13 f0 08 02	ands.w	r2, r3, #8
   0x000251a4 <+8>:	04 46	mov	r4, r0
   0x000251a6 <+10>:	06 d0	beq.n	0x251b6 <wordsplit_init0+26>
   0x000251a8 <+12>:	db 07	lsls	r3, r3, #31
   0x000251aa <+14>:	08 d5	bpl.n	0x251be <wordsplit_init0+34>
   0x000251ac <+16>:	00 23	movs	r3, #0
   0x000251ae <+18>:	63 64	str	r3, [r4, #68]	; 0x44
   0x000251b0 <+20>:	e3 64	str	r3, [r4, #76]	; 0x4c
   0x000251b2 <+22>:	a3 64	str	r3, [r4, #72]	; 0x48
   0x000251b4 <+24>:	10 bd	pop	{r4, pc}
   0x000251b6 <+26>:	42 60	str	r2, [r0, #4]
   0x000251b8 <+28>:	02 60	str	r2, [r0, #0]
   0x000251ba <+30>:	c2 60	str	r2, [r0, #12]
   0x000251bc <+32>:	f6 e7	b.n	0x251ac <wordsplit_init0+16>
   0x000251be <+34>:	ff f7 d3 ff	bl	0x25168 <wordsplit_free_words>
   0x000251c2 <+38>:	f3 e7	b.n	0x251ac <wordsplit_init0+16>
End of assembler dump.
