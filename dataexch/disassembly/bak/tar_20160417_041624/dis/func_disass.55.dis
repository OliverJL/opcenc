GNU gdb (Ubuntu 7.10-1ubuntu2) 7.10
Copyright (C) 2015 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "arm-linux-gnueabihf".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /bin/tar...Reading symbols from /usr/lib/debug//bin/tar...done.
done.
Dump of assembler code for function quotearg_n_custom:
   0x0002ed40 <+0>:	10 b5	push	{r4, lr}
   0x0002ed42 <+2>:	82 b0	sub	sp, #8
   0x0002ed44 <+4>:	4f f0 ff 34	mov.w	r4, #4294967295
   0x0002ed48 <+8>:	00 94	str	r4, [sp, #0]
   0x0002ed4a <+10>:	ff f7 d7 ff	bl	0x2ecfc <quotearg_n_custom_mem>
   0x0002ed4e <+14>:	02 b0	add	sp, #8
   0x0002ed50 <+16>:	10 bd	pop	{r4, pc}
End of assembler dump.
Dump of assembler code for function quotearg_n_custom_mem:
   0x0002ecfc <+0>:	2d e9 f0 41	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   0x0002ed00 <+4>:	8c 46	mov	r12, r1
   0x0002ed02 <+6>:	0e 4d	ldr	r5, [pc, #56]	; (0x2ed3c <quotearg_n_custom_mem+64>)
   0x0002ed04 <+8>:	96 46	mov	lr, r2
   0x0002ed06 <+10>:	80 46	mov	r8, r0
   0x0002ed08 <+12>:	1f 46	mov	r7, r3
   0x0002ed0a <+14>:	8c b0	sub	sp, #48	; 0x30
   0x0002ed0c <+16>:	0f cd	ldmia	r5!, {r0, r1, r2, r3}
   0x0002ed0e <+18>:	6c 46	mov	r4, sp
   0x0002ed10 <+20>:	12 9e	ldr	r6, [sp, #72]	; 0x48
   0x0002ed12 <+22>:	0f c4	stmia	r4!, {r0, r1, r2, r3}
   0x0002ed14 <+24>:	0f cd	ldmia	r5!, {r0, r1, r2, r3}
   0x0002ed16 <+26>:	0f c4	stmia	r4!, {r0, r1, r2, r3}
   0x0002ed18 <+28>:	95 e8 0f 00	ldmia.w	r5, {r0, r1, r2, r3}
   0x0002ed1c <+32>:	84 e8 0f 00	stmia.w	r4, {r0, r1, r2, r3}
   0x0002ed20 <+36>:	61 46	mov	r1, r12
   0x0002ed22 <+38>:	72 46	mov	r2, lr
   0x0002ed24 <+40>:	68 46	mov	r0, sp
   0x0002ed26 <+42>:	ff f7 9f fe	bl	0x2ea68 <set_custom_quoting>
   0x0002ed2a <+46>:	40 46	mov	r0, r8
   0x0002ed2c <+48>:	39 46	mov	r1, r7
   0x0002ed2e <+50>:	32 46	mov	r2, r6
   0x0002ed30 <+52>:	6b 46	mov	r3, sp
   0x0002ed32 <+54>:	ff f7 b5 fd	bl	0x2e8a0 <quotearg_n_options>
   0x0002ed36 <+58>:	0c b0	add	sp, #48	; 0x30
   0x0002ed38 <+60>:	bd e8 f0 81	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   0x0002ed3c <+64>:	e0 5f	ldrsh	r0, [r4, r7]
   0x0002ed3e <+66>:	04 00	movs	r4, r0
End of assembler dump.
Dump of assembler code for function quotearg_n_mem:
   0x0002ebf4 <+0>:	00 4b	ldr	r3, [pc, #0]	; (0x2ebf8 <quotearg_n_mem+4>)
   0x0002ebf6 <+2>:	53 e6	b.n	0x2e8a0 <quotearg_n_options>
   0x0002ebf8 <+4>:	e0 5f	ldrsh	r0, [r4, r7]
   0x0002ebfa <+6>:	04 00	movs	r4, r0
End of assembler dump.
Dump of assembler code for function quotearg_n_style:
   0x0002ec1c <+0>:	30 b5	push	{r4, r5, lr}
   0x0002ec1e <+2>:	8d b0	sub	sp, #52	; 0x34
   0x0002ec20 <+4>:	15 46	mov	r5, r2
   0x0002ec22 <+6>:	04 46	mov	r4, r0
   0x0002ec24 <+8>:	68 46	mov	r0, sp
   0x0002ec26 <+10>:	ff f7 b1 f9	bl	0x2df8c <quoting_options_from_style>
   0x0002ec2a <+14>:	20 46	mov	r0, r4
   0x0002ec2c <+16>:	29 46	mov	r1, r5
   0x0002ec2e <+18>:	6b 46	mov	r3, sp
   0x0002ec30 <+20>:	4f f0 ff 32	mov.w	r2, #4294967295
   0x0002ec34 <+24>:	ff f7 34 fe	bl	0x2e8a0 <quotearg_n_options>
   0x0002ec38 <+28>:	0d b0	add	sp, #52	; 0x34
   0x0002ec3a <+30>:	30 bd	pop	{r4, r5, pc}
End of assembler dump.
Dump of assembler code for function quotearg_n_style_mem:
   0x0002ec3c <+0>:	70 b5	push	{r4, r5, r6, lr}
   0x0002ec3e <+2>:	8c b0	sub	sp, #48	; 0x30
   0x0002ec40 <+4>:	15 46	mov	r5, r2
   0x0002ec42 <+6>:	1e 46	mov	r6, r3
   0x0002ec44 <+8>:	04 46	mov	r4, r0
   0x0002ec46 <+10>:	68 46	mov	r0, sp
   0x0002ec48 <+12>:	ff f7 a0 f9	bl	0x2df8c <quoting_options_from_style>
   0x0002ec4c <+16>:	20 46	mov	r0, r4
   0x0002ec4e <+18>:	29 46	mov	r1, r5
   0x0002ec50 <+20>:	32 46	mov	r2, r6
   0x0002ec52 <+22>:	6b 46	mov	r3, sp
   0x0002ec54 <+24>:	ff f7 24 fe	bl	0x2e8a0 <quotearg_n_options>
   0x0002ec58 <+28>:	0c b0	add	sp, #48	; 0x30
   0x0002ec5a <+30>:	70 bd	pop	{r4, r5, r6, pc}
End of assembler dump.
Dump of assembler code for function quotearg_style:
   0x0002ec5c <+0>:	0a 46	mov	r2, r1
   0x0002ec5e <+2>:	01 46	mov	r1, r0
   0x0002ec60 <+4>:	00 20	movs	r0, #0
   0x0002ec62 <+6>:	ff f7 db bf	b.w	0x2ec1c <quotearg_n_style>
End of assembler dump.
Dump of assembler code for function quotearg_style_mem:
   0x0002ec68 <+0>:	10 b4	push	{r4}
   0x0002ec6a <+2>:	0c 46	mov	r4, r1
   0x0002ec6c <+4>:	13 46	mov	r3, r2
   0x0002ec6e <+6>:	01 46	mov	r1, r0
   0x0002ec70 <+8>:	22 46	mov	r2, r4
   0x0002ec72 <+10>:	00 20	movs	r0, #0
   0x0002ec74 <+12>:	5d f8 04 4b	ldr.w	r4, [sp], #4
   0x0002ec78 <+16>:	ff f7 e0 bf	b.w	0x2ec3c <quotearg_n_style_mem>
End of assembler dump.
Dump of assembler code for function set_char_quoting:
   0x0002ea1c <+0>:	0c 4b	ldr	r3, [pc, #48]	; (0x2ea50 <set_char_quoting+52>)
   0x0002ea1e <+2>:	10 b4	push	{r4}
   0x0002ea20 <+4>:	4c 09	lsrs	r4, r1, #5
   0x0002ea22 <+6>:	00 28	cmp	r0, #0
   0x0002ea24 <+8>:	08 bf	it	eq
   0x0002ea26 <+10>:	18 46	moveq	r0, r3
   0x0002ea28 <+12>:	01 f0 1f 01	and.w	r1, r1, #31
   0x0002ea2c <+16>:	00 eb 84 03	add.w	r3, r0, r4, lsl #2
   0x0002ea30 <+20>:	9c 68	ldr	r4, [r3, #8]
   0x0002ea32 <+22>:	24 fa 01 f0	lsr.w	r0, r4, r1
   0x0002ea36 <+26>:	42 40	eors	r2, r0
   0x0002ea38 <+28>:	00 f0 01 00	and.w	r0, r0, #1
   0x0002ea3c <+32>:	02 f0 01 02	and.w	r2, r2, #1
   0x0002ea40 <+36>:	02 fa 01 f1	lsl.w	r1, r2, r1
   0x0002ea44 <+40>:	4c 40	eors	r4, r1
   0x0002ea46 <+42>:	9c 60	str	r4, [r3, #8]
   0x0002ea48 <+44>:	5d f8 04 4b	ldr.w	r4, [sp], #4
   0x0002ea4c <+48>:	70 47	bx	lr
   0x0002ea4e <+50>:	00 bf	nop
   0x0002ea50 <+52>:	e0 5f	ldrsh	r0, [r4, r7]
   0x0002ea52 <+54>:	04 00	movs	r4, r0
End of assembler dump.
Dump of assembler code for function set_custom_quoting:
   0x0002ea68 <+0>:	08 4b	ldr	r3, [pc, #32]	; (0x2ea8c <set_custom_quoting+36>)
   0x0002ea6a <+2>:	10 b5	push	{r4, lr}
   0x0002ea6c <+4>:	00 28	cmp	r0, #0
   0x0002ea6e <+6>:	08 bf	it	eq
   0x0002ea70 <+8>:	18 46	moveq	r0, r3
   0x0002ea72 <+10>:	00 2a	cmp	r2, #0
   0x0002ea74 <+12>:	18 bf	it	ne
   0x0002ea76 <+14>:	00 29	cmpne	r1, #0
   0x0002ea78 <+16>:	4f f0 08 04	mov.w	r4, #8
   0x0002ea7c <+20>:	04 60	str	r4, [r0, #0]
   0x0002ea7e <+22>:	02 d0	beq.n	0x2ea86 <set_custom_quoting+30>
   0x0002ea80 <+24>:	81 62	str	r1, [r0, #40]	; 0x28
   0x0002ea82 <+26>:	c2 62	str	r2, [r0, #44]	; 0x2c
   0x0002ea84 <+28>:	10 bd	pop	{r4, pc}
   0x0002ea86 <+30>:	dc f7 2c ec	blx	0xb2e0 <abort@plt>
   0x0002ea8a <+34>:	00 bf	nop
   0x0002ea8c <+36>:	e0 5f	ldrsh	r0, [r4, r7]
   0x0002ea8e <+38>:	04 00	movs	r4, r0
End of assembler dump.
