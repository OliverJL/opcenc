GNU gdb (Ubuntu 7.10-1ubuntu2) 7.10
Copyright (C) 2015 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "arm-linux-gnueabihf".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /usr/bin/vim.tiny...Reading symbols from /usr/lib/debug//usr/bin/vim.tiny...done.
done.
Dump of assembler code for function msg_putchar:
   0x000372e4 <+0>:	00 21	movs	r1, #0
   0x000372e6 <+2>:	ff f7 c5 bf	b.w	0x37274 <msg_putchar_attr>
End of assembler dump.
Dump of assembler code for function msg_putchar_attr:
   0x00037274 <+0>:	f0 b5	push	{r4, r5, r6, r7, lr}
   0x00037276 <+2>:	89 b0	sub	sp, #36	; 0x24
   0x00037278 <+4>:	17 4c	ldr	r4, [pc, #92]	; (0x372d8 <msg_putchar_attr+100>)
   0x0003727a <+6>:	0f 46	mov	r7, r1
   0x0003727c <+8>:	17 4b	ldr	r3, [pc, #92]	; (0x372dc <msg_putchar_attr+104>)
   0x0003727e <+10>:	7c 44	add	r4, pc
   0x00037280 <+12>:	e5 58	ldr	r5, [r4, r3]
   0x00037282 <+14>:	2b 68	ldr	r3, [r5, #0]
   0x00037284 <+16>:	07 93	str	r3, [sp, #28]
   0x00037286 <+18>:	03 1e	subs	r3, r0, #0
   0x00037288 <+20>:	16 db	blt.n	0x372b8 <msg_putchar_attr+68>
   0x0003728a <+22>:	15 4b	ldr	r3, [pc, #84]	; (0x372e0 <msg_putchar_attr+108>)
   0x0003728c <+24>:	01 ae	add	r6, sp, #4
   0x0003728e <+26>:	31 46	mov	r1, r6
   0x00037290 <+28>:	e3 58	ldr	r3, [r4, r3]
   0x00037292 <+30>:	1b 68	ldr	r3, [r3, #0]
   0x00037294 <+32>:	98 47	blx	r3
   0x00037296 <+34>:	08 aa	add	r2, sp, #32
   0x00037298 <+36>:	00 23	movs	r3, #0
   0x0003729a <+38>:	10 44	add	r0, r2
   0x0003729c <+40>:	00 f8 1c 3c	strb.w	r3, [r0, #-28]
   0x000372a0 <+44>:	3a 46	mov	r2, r7
   0x000372a2 <+46>:	30 46	mov	r0, r6
   0x000372a4 <+48>:	4f f0 ff 31	mov.w	r1, #4294967295
   0x000372a8 <+52>:	ff f7 22 ff	bl	0x370f0 <msg_puts_attr_len>
   0x000372ac <+56>:	07 9a	ldr	r2, [sp, #28]
   0x000372ae <+58>:	2b 68	ldr	r3, [r5, #0]
   0x000372b0 <+60>:	9a 42	cmp	r2, r3
   0x000372b2 <+62>:	0f d1	bne.n	0x372d4 <msg_putchar_attr+96>
   0x000372b4 <+64>:	09 b0	add	sp, #36	; 0x24
   0x000372b6 <+66>:	f0 bd	pop	{r4, r5, r6, r7, pc}
   0x000372b8 <+68>:	5b 42	negs	r3, r3
   0x000372ba <+70>:	80 21	movs	r1, #128	; 0x80
   0x000372bc <+72>:	8d f8 05 30	strb.w	r3, [sp, #5]
   0x000372c0 <+76>:	00 22	movs	r2, #0
   0x000372c2 <+78>:	1b 0a	lsrs	r3, r3, #8
   0x000372c4 <+80>:	8d f8 04 10	strb.w	r1, [sp, #4]
   0x000372c8 <+84>:	8d f8 06 30	strb.w	r3, [sp, #6]
   0x000372cc <+88>:	01 ae	add	r6, sp, #4
   0x000372ce <+90>:	8d f8 07 20	strb.w	r2, [sp, #7]
   0x000372d2 <+94>:	e5 e7	b.n	0x372a0 <msg_putchar_attr+44>
   0x000372d4 <+96>:	d5 f7 c4 ed	blx	0xce60 <__stack_chk_fail@plt>
   0x000372d8 <+100>:	1a 04	lsls	r2, r3, #16
   0x000372da <+102>:	07 00	movs	r7, r0
   0x000372dc <+104>:	78 03	lsls	r0, r7, #13
   0x000372de <+106>:	00 00	movs	r0, r0
   0x000372e0 <+108>:	0c 08	lsrs	r4, r1, #32
   0x000372e2 <+110>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function msg_puts:
   0x000375ec <+0>:	00 22	movs	r2, #0
   0x000375ee <+2>:	4f f0 ff 31	mov.w	r1, #4294967295
   0x000375f2 <+6>:	7d e5	b.n	0x370f0 <msg_puts_attr_len>
End of assembler dump.
Dump of assembler code for function msg_puts_attr:
   0x0003726c <+0>:	0a 46	mov	r2, r1
   0x0003726e <+2>:	4f f0 ff 31	mov.w	r1, #4294967295
   0x00037272 <+6>:	3d e7	b.n	0x370f0 <msg_puts_attr_len>
End of assembler dump.
Dump of assembler code for function msg_puts_long_attr:
   0x00038060 <+0>:	38 b5	push	{r3, r4, r5, lr}
   0x00038062 <+2>:	0d 46	mov	r5, r1
   0x00038064 <+4>:	04 46	mov	r4, r0
   0x00038066 <+6>:	d5 f7 36 e8	blx	0xd0d4 <strlen@plt>
   0x0003806a <+10>:	2a 46	mov	r2, r5
   0x0003806c <+12>:	01 46	mov	r1, r0
   0x0003806e <+14>:	20 46	mov	r0, r4
   0x00038070 <+16>:	bd e8 38 40	ldmia.w	sp!, {r3, r4, r5, lr}
   0x00038074 <+20>:	ff f7 bc bf	b.w	0x37ff0 <msg_puts_long_len_attr>
End of assembler dump.
Dump of assembler code for function msg_puts_long_len_attr:
   0x00037ff0 <+0>:	2d e9 f0 41	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   0x00037ff4 <+4>:	0d 46	mov	r5, r1
   0x00037ff6 <+6>:	15 4e	ldr	r6, [pc, #84]	; (0x3804c <msg_puts_long_len_attr+92>)
   0x00037ff8 <+8>:	07 46	mov	r7, r0
   0x00037ffa <+10>:	15 4b	ldr	r3, [pc, #84]	; (0x38050 <msg_puts_long_len_attr+96>)
   0x00037ffc <+12>:	90 46	mov	r8, r2
   0x00037ffe <+14>:	15 49	ldr	r1, [pc, #84]	; (0x38054 <msg_puts_long_len_attr+100>)
   0x00038000 <+16>:	7e 44	add	r6, pc
   0x00038002 <+18>:	f3 58	ldr	r3, [r6, r3]
   0x00038004 <+20>:	71 58	ldr	r1, [r6, r1]
   0x00038006 <+22>:	1b 68	ldr	r3, [r3, #0]
   0x00038008 <+24>:	09 68	ldr	r1, [r1, #0]
   0x0003800a <+26>:	59 1a	subs	r1, r3, r1
   0x0003800c <+28>:	8d 42	cmp	r5, r1
   0x0003800e <+30>:	c8 bf	it	gt
   0x00038010 <+32>:	13 29	cmpgt	r1, #19
   0x00038012 <+34>:	d6 bf	itet	le
   0x00038014 <+36>:	00 23	movle	r3, #0
   0x00038016 <+38>:	01 23	movgt	r3, #1
   0x00038018 <+40>:	18 46	movle	r0, r3
   0x0003801a <+42>:	0f dd	ble.n	0x3803c <msg_puts_long_len_attr+76>
   0x0003801c <+44>:	03 39	subs	r1, #3
   0x0003801e <+46>:	4c 10	asrs	r4, r1, #1
   0x00038020 <+48>:	21 46	mov	r1, r4
   0x00038022 <+50>:	ff f7 63 f9	bl	0x372ec <msg_outtrans_len_attr>
   0x00038026 <+54>:	0c 4b	ldr	r3, [pc, #48]	; (0x38058 <msg_puts_long_len_attr+104>)
   0x00038028 <+56>:	0c 48	ldr	r0, [pc, #48]	; (0x3805c <msg_puts_long_len_attr+108>)
   0x0003802a <+58>:	4f f0 ff 31	mov.w	r1, #4294967295
   0x0003802e <+62>:	f3 58	ldr	r3, [r6, r3]
   0x00038030 <+64>:	78 44	add	r0, pc
   0x00038032 <+66>:	1a 68	ldr	r2, [r3, #0]
   0x00038034 <+68>:	ff f7 5c f8	bl	0x370f0 <msg_puts_attr_len>
   0x00038038 <+72>:	28 1b	subs	r0, r5, r4
   0x0003803a <+74>:	25 46	mov	r5, r4
   0x0003803c <+76>:	42 46	mov	r2, r8
   0x0003803e <+78>:	29 46	mov	r1, r5
   0x00038040 <+80>:	38 44	add	r0, r7
   0x00038042 <+82>:	bd e8 f0 41	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   0x00038046 <+86>:	ff f7 51 b9	b.w	0x372ec <msg_outtrans_len_attr>
   0x0003804a <+90>:	00 bf	nop
   0x0003804c <+92>:	98 f6 06 00			; <UNDEFINED> instruction: 0xf6980006
   0x00038050 <+96>:	fc 07	lsls	r4, r7, #31
   0x00038052 <+98>:	00 00	movs	r0, r0
   0x00038054 <+100>:	e0 06	lsls	r0, r4, #27
   0x00038056 <+102>:	00 00	movs	r0, r0
   0x00038058 <+104>:	80 07	lsls	r0, r0, #30
   0x0003805a <+106>:	00 00	movs	r0, r0
   0x0003805c <+108>:	fc f6 04 00			; <UNDEFINED> instruction: 0xf6fc0004
End of assembler dump.
Dump of assembler code for function msg_puts_title:
   0x00037fd4 <+0>:	04 4b	ldr	r3, [pc, #16]	; (0x37fe8 <msg_puts_title+20>)
   0x00037fd6 <+2>:	4f f0 ff 31	mov.w	r1, #4294967295
   0x00037fda <+6>:	04 4a	ldr	r2, [pc, #16]	; (0x37fec <msg_puts_title+24>)
   0x00037fdc <+8>:	7b 44	add	r3, pc
   0x00037fde <+10>:	9b 58	ldr	r3, [r3, r2]
   0x00037fe0 <+12>:	da 6b	ldr	r2, [r3, #60]	; 0x3c
   0x00037fe2 <+14>:	ff f7 85 b8	b.w	0x370f0 <msg_puts_attr_len>
   0x00037fe6 <+18>:	00 bf	nop
   0x00037fe8 <+20>:	bc f6 06 00			; <UNDEFINED> instruction: 0xf6bc0006
   0x00037fec <+24>:	80 07	lsls	r0, r0, #30
   0x00037fee <+26>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function msg_sb_eol:
   0x000361f0 <+0>:	03 4b	ldr	r3, [pc, #12]	; (0x36200 <msg_sb_eol+16>)
   0x000361f2 <+2>:	7b 44	add	r3, pc
   0x000361f4 <+4>:	db 68	ldr	r3, [r3, #12]
   0x000361f6 <+6>:	0b b1	cbz	r3, 0x361fc <msg_sb_eol+12>
   0x000361f8 <+8>:	01 22	movs	r2, #1
   0x000361fa <+10>:	1a 72	strb	r2, [r3, #8]
   0x000361fc <+12>:	70 47	bx	lr
   0x000361fe <+14>:	00 bf	nop
   0x00036200 <+16>:	76 9a	ldr	r2, [sp, #472]	; 0x1d8
   0x00036202 <+18>:	07 00	movs	r7, r0
End of assembler dump.
Dump of assembler code for function msg_source:
   0x000382c0 <+0>:	f8 b5	push	{r3, r4, r5, r6, r7, lr}
   0x000382c2 <+2>:	07 46	mov	r7, r0
   0x000382c4 <+4>:	1c 4c	ldr	r4, [pc, #112]	; (0x38338 <msg_source+120>)
   0x000382c6 <+6>:	1d 4b	ldr	r3, [pc, #116]	; (0x3833c <msg_source+124>)
   0x000382c8 <+8>:	7c 44	add	r4, pc
   0x000382ca <+10>:	e5 58	ldr	r5, [r4, r3]
   0x000382cc <+12>:	2b 68	ldr	r3, [r5, #0]
   0x000382ce <+14>:	01 33	adds	r3, #1
   0x000382d0 <+16>:	2b 60	str	r3, [r5, #0]
   0x000382d2 <+18>:	fd f7 8f f9	bl	0x355f4 <get_emsg_source>
   0x000382d6 <+22>:	38 b1	cbz	r0, 0x382e8 <msg_source+40>
   0x000382d8 <+24>:	06 46	mov	r6, r0
   0x000382da <+26>:	39 46	mov	r1, r7
   0x000382dc <+28>:	00 22	movs	r2, #0
   0x000382de <+30>:	ff f7 49 ff	bl	0x38174 <msg_attr_keep>
   0x000382e2 <+34>:	30 46	mov	r0, r6
   0x000382e4 <+36>:	05 f0 5e f8	bl	0x3d3a4 <vim_free>
   0x000382e8 <+40>:	fd f7 a6 f9	bl	0x35638 <get_emsg_lnum>
   0x000382ec <+44>:	06 46	mov	r6, r0
   0x000382ee <+46>:	70 b1	cbz	r0, 0x3830e <msg_source+78>
   0x000382f0 <+48>:	13 4b	ldr	r3, [pc, #76]	; (0x38340 <msg_source+128>)
   0x000382f2 <+50>:	00 22	movs	r2, #0
   0x000382f4 <+52>:	e3 58	ldr	r3, [r4, r3]
   0x000382f6 <+54>:	59 6a	ldr	r1, [r3, #36]	; 0x24
   0x000382f8 <+56>:	ff f7 3c ff	bl	0x38174 <msg_attr_keep>
   0x000382fc <+60>:	30 46	mov	r0, r6
   0x000382fe <+62>:	05 f0 51 f8	bl	0x3d3a4 <vim_free>
   0x00038302 <+66>:	10 4a	ldr	r2, [pc, #64]	; (0x38344 <msg_source+132>)
   0x00038304 <+68>:	10 4b	ldr	r3, [pc, #64]	; (0x38348 <msg_source+136>)
   0x00038306 <+70>:	a2 58	ldr	r2, [r4, r2]
   0x00038308 <+72>:	7b 44	add	r3, pc
   0x0003830a <+74>:	12 68	ldr	r2, [r2, #0]
   0x0003830c <+76>:	5a 60	str	r2, [r3, #4]
   0x0003830e <+78>:	0f 4b	ldr	r3, [pc, #60]	; (0x3834c <msg_source+140>)
   0x00038310 <+80>:	e4 58	ldr	r4, [r4, r3]
   0x00038312 <+82>:	23 68	ldr	r3, [r4, #0]
   0x00038314 <+84>:	13 b1	cbz	r3, 0x3831c <msg_source+92>
   0x00038316 <+86>:	fd f7 53 f9	bl	0x355c0 <other_sourcing_name>
   0x0003831a <+90>:	48 b1	cbz	r0, 0x38330 <msg_source+112>
   0x0003831c <+92>:	0c 4e	ldr	r6, [pc, #48]	; (0x38350 <msg_source+144>)
   0x0003831e <+94>:	7e 44	add	r6, pc
   0x00038320 <+96>:	30 68	ldr	r0, [r6, #0]
   0x00038322 <+98>:	05 f0 3f f8	bl	0x3d3a4 <vim_free>
   0x00038326 <+102>:	20 68	ldr	r0, [r4, #0]
   0x00038328 <+104>:	08 b1	cbz	r0, 0x3832e <msg_source+110>
   0x0003832a <+106>:	06 f0 1d f9	bl	0x3e568 <vim_strsave>
   0x0003832e <+110>:	30 60	str	r0, [r6, #0]
   0x00038330 <+112>:	2b 68	ldr	r3, [r5, #0]
   0x00038332 <+114>:	01 3b	subs	r3, #1
   0x00038334 <+116>:	2b 60	str	r3, [r5, #0]
   0x00038336 <+118>:	f8 bd	pop	{r3, r4, r5, r6, r7, pc}
   0x00038338 <+120>:	d0 f3 06 00			; <UNDEFINED> instruction: 0xf3d00006
   0x0003833c <+124>:	e4 04	lsls	r4, r4, #19
   0x0003833e <+126>:	00 00	movs	r0, r0
   0x00038340 <+128>:	80 07	lsls	r0, r0, #30
   0x00038342 <+130>:	00 00	movs	r0, r0
   0x00038344 <+132>:	40 08	lsrs	r0, r0, #1
   0x00038346 <+134>:	00 00	movs	r0, r0
   0x00038348 <+136>:	60 79	ldrb	r0, [r4, #5]
   0x0003834a <+138>:	07 00	movs	r7, r0
   0x0003834c <+140>:	50 08	lsrs	r0, r2, #1
   0x0003834e <+142>:	00 00	movs	r0, r0
   0x00038350 <+144>:	4a 79	ldrb	r2, [r1, #5]
   0x00038352 <+146>:	07 00	movs	r7, r0
End of assembler dump.
