GNU gdb (Ubuntu 7.10-1ubuntu2) 7.10
Copyright (C) 2015 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "arm-linux-gnueabihf".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /usr/bin/vim.tiny...Reading symbols from /usr/lib/debug//usr/bin/vim.tiny...done.
done.
Dump of assembler code for function ex_close:
   0x0001dd78 <+0>:	38 b5	push	{r3, r4, r5, lr}
   0x0001dd7a <+2>:	05 46	mov	r5, r0
   0x0001dd7c <+4>:	13 4c	ldr	r4, [pc, #76]	; (0x1ddcc <ex_close+84>)
   0x0001dd7e <+6>:	7c 44	add	r4, pc
   0x0001dd80 <+8>:	04 f0 90 fa	bl	0x222a4 <text_locked>
   0x0001dd84 <+12>:	c8 b9	cbnz	r0, 0x1ddba <ex_close+66>
   0x0001dd86 <+14>:	2a 6a	ldr	r2, [r5, #32]
   0x0001dd88 <+16>:	c2 b1	cbz	r2, 0x1ddbc <ex_close+68>
   0x0001dd8a <+18>:	11 4b	ldr	r3, [pc, #68]	; (0x1ddd0 <ex_close+88>)
   0x0001dd8c <+20>:	e3 58	ldr	r3, [r4, r3]
   0x0001dd8e <+22>:	19 68	ldr	r1, [r3, #0]
   0x0001dd90 <+24>:	51 b1	cbz	r1, 0x1dda8 <ex_close+48>
   0x0001dd92 <+26>:	aa 6a	ldr	r2, [r5, #40]	; 0x28
   0x0001dd94 <+28>:	01 2a	cmp	r2, #1
   0x0001dd96 <+30>:	0a d0	beq.n	0x1ddae <ex_close+54>
   0x0001dd98 <+32>:	01 23	movs	r3, #1
   0x0001dd9a <+34>:	01 e0	b.n	0x1dda0 <ex_close+40>
   0x0001dd9c <+36>:	93 42	cmp	r3, r2
   0x0001dd9e <+38>:	06 d0	beq.n	0x1ddae <ex_close+54>
   0x0001dda0 <+40>:	89 68	ldr	r1, [r1, #8]
   0x0001dda2 <+42>:	01 33	adds	r3, #1
   0x0001dda4 <+44>:	00 29	cmp	r1, #0
   0x0001dda6 <+46>:	f9 d1	bne.n	0x1dd9c <ex_close+36>
   0x0001dda8 <+48>:	0a 4b	ldr	r3, [pc, #40]	; (0x1ddd4 <ex_close+92>)
   0x0001ddaa <+50>:	e3 58	ldr	r3, [r4, r3]
   0x0001ddac <+52>:	19 68	ldr	r1, [r3, #0]
   0x0001ddae <+54>:	e8 69	ldr	r0, [r5, #28]
   0x0001ddb0 <+56>:	00 22	movs	r2, #0
   0x0001ddb2 <+58>:	bd e8 38 40	ldmia.w	sp!, {r3, r4, r5, lr}
   0x0001ddb6 <+62>:	ff f7 bb b8	b.w	0x1cf30 <ex_win_close>
   0x0001ddba <+66>:	38 bd	pop	{r3, r4, r5, pc}
   0x0001ddbc <+68>:	06 4b	ldr	r3, [pc, #24]	; (0x1ddd8 <ex_close+96>)
   0x0001ddbe <+70>:	e8 69	ldr	r0, [r5, #28]
   0x0001ddc0 <+72>:	e3 58	ldr	r3, [r4, r3]
   0x0001ddc2 <+74>:	19 68	ldr	r1, [r3, #0]
   0x0001ddc4 <+76>:	bd e8 38 40	ldmia.w	sp!, {r3, r4, r5, lr}
   0x0001ddc8 <+80>:	ff f7 b2 b8	b.w	0x1cf30 <ex_win_close>
   0x0001ddcc <+84>:	1a 99	ldr	r1, [sp, #104]	; 0x68
   0x0001ddce <+86>:	08 00	movs	r0, r1
   0x0001ddd0 <+88>:	38 09	lsrs	r0, r7, #4
   0x0001ddd2 <+90>:	00 00	movs	r0, r0
   0x0001ddd4 <+92>:	00 05	lsls	r0, r0, #20
   0x0001ddd6 <+94>:	00 00	movs	r0, r0
   0x0001ddd8 <+96>:	24 04	lsls	r4, r4, #16
   0x0001ddda <+98>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function ex_colorscheme:
   0x0001dd44 <+0>:	03 68	ldr	r3, [r0, #0]
   0x0001dd46 <+2>:	1a 78	ldrb	r2, [r3, #0]
   0x0001dd48 <+4>:	6a b1	cbz	r2, 0x1dd66 <ex_colorscheme+34>
   0x0001dd4a <+6>:	10 b5	push	{r4, lr}
   0x0001dd4c <+8>:	04 46	mov	r4, r0
   0x0001dd4e <+10>:	18 46	mov	r0, r3
   0x0001dd50 <+12>:	5b f0 5a f9	bl	0x79008 <load_colors>
   0x0001dd54 <+16>:	00 b1	cbz	r0, 0x1dd58 <ex_colorscheme+20>
   0x0001dd56 <+18>:	10 bd	pop	{r4, pc}
   0x0001dd58 <+20>:	05 48	ldr	r0, [pc, #20]	; (0x1dd70 <ex_colorscheme+44>)
   0x0001dd5a <+22>:	21 68	ldr	r1, [r4, #0]
   0x0001dd5c <+24>:	78 44	add	r0, pc
   0x0001dd5e <+26>:	bd e8 10 40	ldmia.w	sp!, {r4, lr}
   0x0001dd62 <+30>:	18 f0 0b b8	b.w	0x35d7c <emsg2>
   0x0001dd66 <+34>:	03 48	ldr	r0, [pc, #12]	; (0x1dd74 <ex_colorscheme+48>)
   0x0001dd68 <+36>:	78 44	add	r0, pc
   0x0001dd6a <+38>:	1a f0 a1 ba	b.w	0x382b0 <msg>
   0x0001dd6e <+42>:	00 bf	nop
   0x0001dd70 <+44>:	18 aa	add	r2, sp, #96	; 0x60
   0x0001dd72 <+46>:	06 00	movs	r6, r0
   0x0001dd74 <+48>:	04 aa	add	r2, sp, #16
   0x0001dd76 <+50>:	06 00	movs	r6, r0
End of assembler dump.
Dump of assembler code for function ex_copymove:
   0x0001f1ec <+0>:	00 23	movs	r3, #0
   0x0001f1ee <+2>:	c1 6a	ldr	r1, [r0, #44]	; 0x2c
   0x0001f1f0 <+4>:	70 b5	push	{r4, r5, r6, lr}
   0x0001f1f2 <+6>:	1a 46	mov	r2, r3
   0x0001f1f4 <+8>:	04 46	mov	r4, r0
   0x0001f1f6 <+10>:	fd f7 ef fe	bl	0x1cfd8 <get_address>
   0x0001f1fa <+14>:	23 68	ldr	r3, [r4, #0]
   0x0001f1fc <+16>:	1b 4e	ldr	r6, [pc, #108]	; (0x1f26c <ex_copymove+128>)
   0x0001f1fe <+18>:	7e 44	add	r6, pc
   0x0001f200 <+20>:	63 b3	cbz	r3, 0x1f25c <ex_copymove+112>
   0x0001f202 <+22>:	05 46	mov	r5, r0
   0x0001f204 <+24>:	04 f1 30 01	add.w	r1, r4, #48	; 0x30
   0x0001f208 <+28>:	20 46	mov	r0, r4
   0x0001f20a <+30>:	fe f7 ed fb	bl	0x1d9e8 <get_flags>
   0x0001f20e <+34>:	6f f0 00 43	mvn.w	r3, #2147483648	; 0x80000000
   0x0001f212 <+38>:	eb 1a	subs	r3, r5, r3
   0x0001f214 <+40>:	b3 fa 83 f3	clz	r3, r3
   0x0001f218 <+44>:	5b 09	lsrs	r3, r3, #5
   0x0001f21a <+46>:	53 ea d5 73	orrs.w	r3, r3, r5, lsr #31
   0x0001f21e <+50>:	17 d1	bne.n	0x1f250 <ex_copymove+100>
   0x0001f220 <+52>:	13 4b	ldr	r3, [pc, #76]	; (0x1f270 <ex_copymove+132>)
   0x0001f222 <+54>:	f3 58	ldr	r3, [r6, r3]
   0x0001f224 <+56>:	1b 68	ldr	r3, [r3, #0]
   0x0001f226 <+58>:	1b 68	ldr	r3, [r3, #0]
   0x0001f228 <+60>:	9d 42	cmp	r5, r3
   0x0001f22a <+62>:	11 dc	bgt.n	0x1f250 <ex_copymove+100>
   0x0001f22c <+64>:	23 69	ldr	r3, [r4, #16]
   0x0001f22e <+66>:	2a 46	mov	r2, r5
   0x0001f230 <+68>:	a1 6a	ldr	r1, [r4, #40]	; 0x28
   0x0001f232 <+70>:	f9 2b	cmp	r3, #249	; 0xf9
   0x0001f234 <+72>:	60 6a	ldr	r0, [r4, #36]	; 0x24
   0x0001f236 <+74>:	13 d0	beq.n	0x1f260 <ex_copymove+116>
   0x0001f238 <+76>:	f7 f7 80 fc	bl	0x16b3c <ex_copy>
   0x0001f23c <+80>:	62 f0 aa f8	bl	0x81394 <u_clearline>
   0x0001f240 <+84>:	06 20	movs	r0, #6
   0x0001f242 <+86>:	f4 f7 a5 fc	bl	0x13b90 <beginline>
   0x0001f246 <+90>:	20 46	mov	r0, r4
   0x0001f248 <+92>:	bd e8 70 40	ldmia.w	sp!, {r4, r5, r6, lr}
   0x0001f24c <+96>:	ff f7 00 bf	b.w	0x1f050 <ex_may_print>
   0x0001f250 <+100>:	08 4b	ldr	r3, [pc, #32]	; (0x1f274 <ex_copymove+136>)
   0x0001f252 <+102>:	f0 58	ldr	r0, [r6, r3]
   0x0001f254 <+104>:	bd e8 70 40	ldmia.w	sp!, {r4, r5, r6, lr}
   0x0001f258 <+108>:	19 f0 e6 b8	b.w	0x38428 <emsg>
   0x0001f25c <+112>:	63 60	str	r3, [r4, #4]
   0x0001f25e <+114>:	70 bd	pop	{r4, r5, r6, pc}
   0x0001f260 <+116>:	f7 f7 5c fb	bl	0x1691c <do_move>
   0x0001f264 <+120>:	00 28	cmp	r0, #0
   0x0001f266 <+122>:	e9 d1	bne.n	0x1f23c <ex_copymove+80>
   0x0001f268 <+124>:	70 bd	pop	{r4, r5, r6, pc}
   0x0001f26a <+126>:	00 bf	nop
   0x0001f26c <+128>:	9a 84	strh	r2, [r3, #36]	; 0x24
   0x0001f26e <+130>:	08 00	movs	r0, r1
   0x0001f270 <+132>:	b0 07	lsls	r0, r6, #30
   0x0001f272 <+134>:	00 00	movs	r0, r0
   0x0001f274 <+136>:	5c 04	lsls	r4, r3, #17
   0x0001f276 <+138>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function ex_cquit:
   0x0001cc84 <+0>:	01 20	movs	r0, #1
   0x0001cc86 <+2>:	69 f0 c3 b9	b.w	0x86010 <getout>
End of assembler dump.
Dump of assembler code for function ex_digraphs:
   0x0001c508 <+0>:	01 48	ldr	r0, [pc, #4]	; (0x1c510 <ex_digraphs+8>)
   0x0001c50a <+2>:	78 44	add	r0, pc
   0x0001c50c <+4>:	1b f0 8c bf	b.w	0x38428 <emsg>
   0x0001c510 <+8>:	e6 c0	stmia	r0!, {r1, r2, r5, r6, r7}
   0x0001c512 <+10>:	06 00	movs	r6, r0
End of assembler dump.
Dump of assembler code for function ex_edit:
   0x00021aa0 <+0>:	00 21	movs	r1, #0
   0x00021aa2 <+2>:	ff f7 11 be	b.w	0x216c8 <do_exedit>
End of assembler dump.
Dump of assembler code for function ex_equal:
   0x0001f084 <+0>:	10 b5	push	{r4, lr}
   0x0001f086 <+2>:	04 46	mov	r4, r0
   0x0001f088 <+4>:	04 48	ldr	r0, [pc, #16]	; (0x1f09c <ex_equal+24>)
   0x0001f08a <+6>:	a1 6a	ldr	r1, [r4, #40]	; 0x28
   0x0001f08c <+8>:	78 44	add	r0, pc
   0x0001f08e <+10>:	1a f0 3b f8	bl	0x39108 <smsg>
   0x0001f092 <+14>:	20 46	mov	r0, r4
   0x0001f094 <+16>:	bd e8 10 40	ldmia.w	sp!, {r4, lr}
   0x0001f098 <+20>:	ff f7 da bf	b.w	0x1f050 <ex_may_print>
   0x0001f09c <+24>:	28 bd	pop	{r3, r5, pc}
   0x0001f09e <+26>:	06 00	movs	r6, r0
End of assembler dump.
Dump of assembler code for function ex_exit:
   0x0001df80 <+0>:	f8 b5	push	{r3, r4, r5, r6, r7, lr}
   0x0001df82 <+2>:	04 46	mov	r4, r0
   0x0001df84 <+4>:	04 f0 8e f9	bl	0x222a4 <text_locked>
   0x0001df88 <+8>:	28 4d	ldr	r5, [pc, #160]	; (0x1e02c <ex_exit+172>)
   0x0001df8a <+10>:	7d 44	add	r5, pc
   0x0001df8c <+12>:	00 bb	cbnz	r0, 0x1dfd0 <ex_exit+80>
   0x0001df8e <+14>:	e1 69	ldr	r1, [r4, #28]
   0x0001df90 <+16>:	06 46	mov	r6, r0
   0x0001df92 <+18>:	fe f7 7b fe	bl	0x1cc8c <check_more>
   0x0001df96 <+22>:	01 28	cmp	r0, #1
   0x0001df98 <+24>:	07 46	mov	r7, r0
   0x0001df9a <+26>:	3a d0	beq.n	0x1e012 <ex_exit+146>
   0x0001df9c <+28>:	22 69	ldr	r2, [r4, #16]
   0x0001df9e <+30>:	40 f2 ef 13	movw	r3, #495	; 0x1ef
   0x0001dfa2 <+34>:	9a 42	cmp	r2, r3
   0x0001dfa4 <+36>:	02 d0	beq.n	0x1dfac <ex_exit+44>
   0x0001dfa6 <+38>:	63 f0 03 fb	bl	0x815b0 <curbufIsChanged>
   0x0001dfaa <+42>:	18 b1	cbz	r0, 0x1dfb4 <ex_exit+52>
   0x0001dfac <+44>:	20 46	mov	r0, r4
   0x0001dfae <+46>:	f9 f7 33 fd	bl	0x17a18 <do_write>
   0x0001dfb2 <+50>:	20 b1	cbz	r0, 0x1dfbe <ex_exit+62>
   0x0001dfb4 <+52>:	e1 69	ldr	r1, [r4, #28]
   0x0001dfb6 <+54>:	01 20	movs	r0, #1
   0x0001dfb8 <+56>:	fe f7 68 fe	bl	0x1cc8c <check_more>
   0x0001dfbc <+60>:	60 b9	cbnz	r0, 0x1dfd8 <ex_exit+88>
   0x0001dfbe <+62>:	1c 4b	ldr	r3, [pc, #112]	; (0x1e030 <ex_exit+176>)
   0x0001dfc0 <+64>:	00 22	movs	r2, #0
   0x0001dfc2 <+66>:	02 20	movs	r0, #2
   0x0001dfc4 <+68>:	eb 58	ldr	r3, [r5, r3]
   0x0001dfc6 <+70>:	1a 60	str	r2, [r3, #0]
   0x0001dfc8 <+72>:	bd e8 f8 40	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   0x0001dfcc <+76>:	5f f0 20 bd	b.w	0x7da10 <settmode>
   0x0001dfd0 <+80>:	bd e8 f8 40	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   0x0001dfd4 <+84>:	04 f0 74 b9	b.w	0x222c0 <text_locked_msg>
   0x0001dfd8 <+88>:	66 f0 4c fe	bl	0x84c74 <only_one_window>
   0x0001dfdc <+92>:	20 b1	cbz	r0, 0x1dfe8 <ex_exit+104>
   0x0001dfde <+94>:	e0 69	ldr	r0, [r4, #28]
   0x0001dfe0 <+96>:	fd f7 82 f9	bl	0x1b2e8 <check_changed_any>
   0x0001dfe4 <+100>:	00 28	cmp	r0, #0
   0x0001dfe6 <+102>:	ea d1	bne.n	0x1dfbe <ex_exit+62>
   0x0001dfe8 <+104>:	66 f0 44 fe	bl	0x84c74 <only_one_window>
   0x0001dfec <+108>:	c8 b9	cbnz	r0, 0x1e022 <ex_exit+162>
   0x0001dfee <+110>:	11 4a	ldr	r2, [pc, #68]	; (0x1e034 <ex_exit+180>)
   0x0001dff0 <+112>:	11 4b	ldr	r3, [pc, #68]	; (0x1e038 <ex_exit+184>)
   0x0001dff2 <+114>:	a9 58	ldr	r1, [r5, r2]
   0x0001dff4 <+116>:	ea 58	ldr	r2, [r5, r3]
   0x0001dff6 <+118>:	0b 68	ldr	r3, [r1, #0]
   0x0001dff8 <+120>:	10 68	ldr	r0, [r2, #0]
   0x0001dffa <+122>:	2b b9	cbnz	r3, 0x1e008 <ex_exit+136>
   0x0001dffc <+124>:	0f 4b	ldr	r3, [pc, #60]	; (0x1e03c <ex_exit+188>)
   0x0001dffe <+126>:	eb 58	ldr	r3, [r5, r3]
   0x0001e000 <+128>:	1e 68	ldr	r6, [r3, #0]
   0x0001e002 <+130>:	b6 fa 86 f6	clz	r6, r6
   0x0001e006 <+134>:	76 09	lsrs	r6, r6, #5
   0x0001e008 <+136>:	31 46	mov	r1, r6
   0x0001e00a <+138>:	bd e8 f8 40	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   0x0001e00e <+142>:	66 f0 73 bf	b.w	0x84ef8 <win_close>
   0x0001e012 <+146>:	66 f0 2f fe	bl	0x84c74 <only_one_window>
   0x0001e016 <+150>:	00 28	cmp	r0, #0
   0x0001e018 <+152>:	c0 d0	beq.n	0x1df9c <ex_exit+28>
   0x0001e01a <+154>:	05 4b	ldr	r3, [pc, #20]	; (0x1e030 <ex_exit+176>)
   0x0001e01c <+156>:	eb 58	ldr	r3, [r5, r3]
   0x0001e01e <+158>:	1f 60	str	r7, [r3, #0]
   0x0001e020 <+160>:	bc e7	b.n	0x1df9c <ex_exit+28>
   0x0001e022 <+162>:	00 20	movs	r0, #0
   0x0001e024 <+164>:	67 f0 f4 ff	bl	0x86010 <getout>
   0x0001e028 <+168>:	e1 e7	b.n	0x1dfee <ex_exit+110>
   0x0001e02a <+170>:	00 bf	nop
   0x0001e02c <+172>:	0e 97	str	r7, [sp, #56]	; 0x38
   0x0001e02e <+174>:	08 00	movs	r0, r1
   0x0001e030 <+176>:	70 06	lsls	r0, r6, #25
   0x0001e032 <+178>:	00 00	movs	r0, r0
   0x0001e034 <+180>:	14 07	lsls	r4, r2, #28
   0x0001e036 <+182>:	00 00	movs	r0, r0
   0x0001e038 <+184>:	24 04	lsls	r4, r4, #16
   0x0001e03a <+186>:	00 00	movs	r0, r0
   0x0001e03c <+188>:	d8 05	lsls	r0, r3, #23
   0x0001e03e <+190>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function ex_hide:
   0x0001dee4 <+0>:	38 b5	push	{r3, r4, r5, lr}
   0x0001dee6 <+2>:	04 46	mov	r4, r0
   0x0001dee8 <+4>:	00 68	ldr	r0, [r0, #0]
   0x0001deea <+6>:	20 4d	ldr	r5, [pc, #128]	; (0x1df6c <ex_hide+136>)
   0x0001deec <+8>:	03 78	ldrb	r3, [r0, #0]
   0x0001deee <+10>:	7d 44	add	r5, pc
   0x0001def0 <+12>:	4b b1	cbz	r3, 0x1df06 <ex_hide+34>
   0x0001def2 <+14>:	f3 f7 99 fe	bl	0x11c28 <skipwhite>
   0x0001def6 <+18>:	03 78	ldrb	r3, [r0, #0]
   0x0001def8 <+20>:	0a 2b	cmp	r3, #10
   0x0001defa <+22>:	18 bf	it	ne
   0x0001defc <+24>:	7c 2b	cmpne	r3, #124	; 0x7c
   0x0001defe <+26>:	29 d1	bne.n	0x1df54 <ex_hide+112>
   0x0001df00 <+28>:	01 30	adds	r0, #1
   0x0001df02 <+30>:	27 d0	beq.n	0x1df54 <ex_hide+112>
   0x0001df04 <+32>:	20 68	ldr	r0, [r4, #0]
   0x0001df06 <+34>:	f3 f7 8f fe	bl	0x11c28 <skipwhite>
   0x0001df0a <+38>:	a2 69	ldr	r2, [r4, #24]
   0x0001df0c <+40>:	03 78	ldrb	r3, [r0, #0]
   0x0001df0e <+42>:	0a 2b	cmp	r3, #10
   0x0001df10 <+44>:	18 bf	it	ne
   0x0001df12 <+46>:	7c 2b	cmpne	r3, #124	; 0x7c
   0x0001df14 <+48>:	0a bf	itet	eq
   0x0001df16 <+50>:	01 23	moveq	r3, #1
   0x0001df18 <+52>:	00 23	movne	r3, #0
   0x0001df1a <+54>:	43 1c	addeq	r3, r0, #1
   0x0001df1c <+56>:	63 60	str	r3, [r4, #4]
   0x0001df1e <+58>:	c2 b9	cbnz	r2, 0x1df52 <ex_hide+110>
   0x0001df20 <+60>:	21 6a	ldr	r1, [r4, #32]
   0x0001df22 <+62>:	d9 b1	cbz	r1, 0x1df5c <ex_hide+120>
   0x0001df24 <+64>:	12 4b	ldr	r3, [pc, #72]	; (0x1df70 <ex_hide+140>)
   0x0001df26 <+66>:	eb 58	ldr	r3, [r5, r3]
   0x0001df28 <+68>:	18 68	ldr	r0, [r3, #0]
   0x0001df2a <+70>:	50 b1	cbz	r0, 0x1df42 <ex_hide+94>
   0x0001df2c <+72>:	a2 6a	ldr	r2, [r4, #40]	; 0x28
   0x0001df2e <+74>:	01 2a	cmp	r2, #1
   0x0001df30 <+76>:	0a d0	beq.n	0x1df48 <ex_hide+100>
   0x0001df32 <+78>:	01 23	movs	r3, #1
   0x0001df34 <+80>:	01 e0	b.n	0x1df3a <ex_hide+86>
   0x0001df36 <+82>:	93 42	cmp	r3, r2
   0x0001df38 <+84>:	06 d0	beq.n	0x1df48 <ex_hide+100>
   0x0001df3a <+86>:	80 68	ldr	r0, [r0, #8]
   0x0001df3c <+88>:	01 33	adds	r3, #1
   0x0001df3e <+90>:	00 28	cmp	r0, #0
   0x0001df40 <+92>:	f9 d1	bne.n	0x1df36 <ex_hide+82>
   0x0001df42 <+94>:	0c 4b	ldr	r3, [pc, #48]	; (0x1df74 <ex_hide+144>)
   0x0001df44 <+96>:	eb 58	ldr	r3, [r5, r3]
   0x0001df46 <+98>:	18 68	ldr	r0, [r3, #0]
   0x0001df48 <+100>:	00 21	movs	r1, #0
   0x0001df4a <+102>:	bd e8 38 40	ldmia.w	sp!, {r3, r4, r5, lr}
   0x0001df4e <+106>:	66 f0 d3 bf	b.w	0x84ef8 <win_close>
   0x0001df52 <+110>:	38 bd	pop	{r3, r4, r5, pc}
   0x0001df54 <+112>:	08 4b	ldr	r3, [pc, #32]	; (0x1df78 <ex_hide+148>)
   0x0001df56 <+114>:	eb 58	ldr	r3, [r5, r3]
   0x0001df58 <+116>:	23 66	str	r3, [r4, #96]	; 0x60
   0x0001df5a <+118>:	38 bd	pop	{r3, r4, r5, pc}
   0x0001df5c <+120>:	07 4b	ldr	r3, [pc, #28]	; (0x1df7c <ex_hide+152>)
   0x0001df5e <+122>:	eb 58	ldr	r3, [r5, r3]
   0x0001df60 <+124>:	18 68	ldr	r0, [r3, #0]
   0x0001df62 <+126>:	bd e8 38 40	ldmia.w	sp!, {r3, r4, r5, lr}
   0x0001df66 <+130>:	66 f0 c7 bf	b.w	0x84ef8 <win_close>
   0x0001df6a <+134>:	00 bf	nop
   0x0001df6c <+136>:	aa 97	str	r7, [sp, #680]	; 0x2a8
   0x0001df6e <+138>:	08 00	movs	r0, r1
   0x0001df70 <+140>:	38 09	lsrs	r0, r7, #4
   0x0001df72 <+142>:	00 00	movs	r0, r0
   0x0001df74 <+144>:	00 05	lsls	r0, r0, #20
   0x0001df76 <+146>:	00 00	movs	r0, r0
   0x0001df78 <+148>:	b0 06	lsls	r0, r6, #26
   0x0001df7a <+150>:	00 00	movs	r0, r0
   0x0001df7c <+152>:	24 04	lsls	r4, r4, #16
   0x0001df7e <+154>:	00 00	movs	r0, r0
End of assembler dump.
