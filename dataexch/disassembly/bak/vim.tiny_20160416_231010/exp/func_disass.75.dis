GNU gdb (Ubuntu 7.10-1ubuntu2) 7.10
Copyright (C) 2015 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "arm-linux-gnueabihf".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /usr/bin/vim.tiny...Reading symbols from /usr/lib/debug//usr/bin/vim.tiny...done.
done.
Dump of assembler code for function msg_start:
   0x00038078 <+0>:	f8 b5	push	{r3, r4, r5, r6, r7, lr}
   0x0003807a <+2>:	31 4c	ldr	r4, [pc, #196]	; (0x38140 <msg_start+200>)
   0x0003807c <+4>:	31 4b	ldr	r3, [pc, #196]	; (0x38144 <msg_start+204>)
   0x0003807e <+6>:	7c 44	add	r4, pc
   0x00038080 <+8>:	e5 58	ldr	r5, [r4, r3]
   0x00038082 <+10>:	2e 68	ldr	r6, [r5, #0]
   0x00038084 <+12>:	00 2e	cmp	r6, #0
   0x00038086 <+14>:	53 d0	beq.n	0x38130 <msg_start+184>
   0x00038088 <+16>:	2f 4b	ldr	r3, [pc, #188]	; (0x38148 <msg_start+208>)
   0x0003808a <+18>:	e3 58	ldr	r3, [r4, r3]
   0x0003808c <+20>:	1b 68	ldr	r3, [r3, #0]
   0x0003808e <+22>:	d3 b9	cbnz	r3, 0x380c6 <msg_start+78>
   0x00038090 <+24>:	2e 4a	ldr	r2, [pc, #184]	; (0x3814c <msg_start+212>)
   0x00038092 <+26>:	a2 58	ldr	r2, [r4, r2]
   0x00038094 <+28>:	12 68	ldr	r2, [r2, #0]
   0x00038096 <+30>:	b2 b1	cbz	r2, 0x380c6 <msg_start+78>
   0x00038098 <+32>:	2d 48	ldr	r0, [pc, #180]	; (0x38150 <msg_start+216>)
   0x0003809a <+34>:	1e 46	mov	r6, r3
   0x0003809c <+36>:	2d 49	ldr	r1, [pc, #180]	; (0x38154 <msg_start+220>)
   0x0003809e <+38>:	2e 4a	ldr	r2, [pc, #184]	; (0x38158 <msg_start+224>)
   0x000380a0 <+40>:	20 58	ldr	r0, [r4, r0]
   0x000380a2 <+42>:	61 58	ldr	r1, [r4, r1]
   0x000380a4 <+44>:	00 68	ldr	r0, [r0, #0]
   0x000380a6 <+46>:	08 60	str	r0, [r1, #0]
   0x000380a8 <+48>:	a2 58	ldr	r2, [r4, r2]
   0x000380aa <+50>:	13 60	str	r3, [r2, #0]
   0x000380ac <+52>:	2b 4b	ldr	r3, [pc, #172]	; (0x3815c <msg_start+228>)
   0x000380ae <+54>:	e3 58	ldr	r3, [r4, r3]
   0x000380b0 <+56>:	1a 68	ldr	r2, [r3, #0]
   0x000380b2 <+58>:	92 b1	cbz	r2, 0x380da <msg_start+98>
   0x000380b4 <+60>:	2a 4a	ldr	r2, [pc, #168]	; (0x38160 <msg_start+232>)
   0x000380b6 <+62>:	a1 58	ldr	r1, [r4, r2]
   0x000380b8 <+64>:	0a 68	ldr	r2, [r1, #0]
   0x000380ba <+66>:	00 2a	cmp	r2, #0
   0x000380bc <+68>:	0f db	blt.n	0x380de <msg_start+102>
   0x000380be <+70>:	2b 68	ldr	r3, [r5, #0]
   0x000380c0 <+72>:	b3 b1	cbz	r3, 0x380f0 <msg_start+120>
   0x000380c2 <+74>:	e6 b1	cbz	r6, 0x380fe <msg_start+134>
   0x000380c4 <+76>:	f8 bd	pop	{r3, r4, r5, r6, r7, pc}
   0x000380c6 <+78>:	27 4b	ldr	r3, [pc, #156]	; (0x38164 <msg_start+236>)
   0x000380c8 <+80>:	e3 58	ldr	r3, [r4, r3]
   0x000380ca <+82>:	1b 68	ldr	r3, [r3, #0]
   0x000380cc <+84>:	fb b9	cbnz	r3, 0x3810e <msg_start+150>
   0x000380ce <+86>:	1e 46	mov	r6, r3
   0x000380d0 <+88>:	22 4b	ldr	r3, [pc, #136]	; (0x3815c <msg_start+228>)
   0x000380d2 <+90>:	e3 58	ldr	r3, [r4, r3]
   0x000380d4 <+92>:	1a 68	ldr	r2, [r3, #0]
   0x000380d6 <+94>:	00 2a	cmp	r2, #0
   0x000380d8 <+96>:	ec d1	bne.n	0x380b4 <msg_start+60>
   0x000380da <+98>:	21 4a	ldr	r2, [pc, #132]	; (0x38160 <msg_start+232>)
   0x000380dc <+100>:	a1 58	ldr	r1, [r4, r2]
   0x000380de <+102>:	1c 4a	ldr	r2, [pc, #112]	; (0x38150 <msg_start+216>)
   0x000380e0 <+104>:	00 20	movs	r0, #0
   0x000380e2 <+106>:	a2 58	ldr	r2, [r4, r2]
   0x000380e4 <+108>:	18 60	str	r0, [r3, #0]
   0x000380e6 <+110>:	13 68	ldr	r3, [r2, #0]
   0x000380e8 <+112>:	0b 60	str	r3, [r1, #0]
   0x000380ea <+114>:	2b 68	ldr	r3, [r5, #0]
   0x000380ec <+116>:	00 2b	cmp	r3, #0
   0x000380ee <+118>:	e8 d1	bne.n	0x380c2 <msg_start+74>
   0x000380f0 <+120>:	1c 4a	ldr	r2, [pc, #112]	; (0x38164 <msg_start+236>)
   0x000380f2 <+122>:	a2 58	ldr	r2, [r4, r2]
   0x000380f4 <+124>:	13 60	str	r3, [r2, #0]
   0x000380f6 <+126>:	45 f0 4b fd	bl	0x7db90 <cursor_off>
   0x000380fa <+130>:	00 2e	cmp	r6, #0
   0x000380fc <+132>:	e2 d1	bne.n	0x380c4 <msg_start+76>
   0x000380fe <+134>:	1a 48	ldr	r0, [pc, #104]	; (0x38168 <msg_start+240>)
   0x00038100 <+136>:	4f f0 ff 31	mov.w	r1, #4294967295
   0x00038104 <+140>:	bd e8 f8 40	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   0x00038108 <+144>:	78 44	add	r0, pc
   0x0003810a <+146>:	fe f7 27 bf	b.w	0x36f5c <redir_write>
   0x0003810e <+150>:	00 21	movs	r1, #0
   0x00038110 <+152>:	0a 20	movs	r0, #10
   0x00038112 <+154>:	ff f7 af f8	bl	0x37274 <msg_putchar_attr>
   0x00038116 <+158>:	15 4b	ldr	r3, [pc, #84]	; (0x3816c <msg_start+244>)
   0x00038118 <+160>:	e3 58	ldr	r3, [r4, r3]
   0x0003811a <+162>:	1b 68	ldr	r3, [r3, #0]
   0x0003811c <+164>:	01 2b	cmp	r3, #1
   0x0003811e <+166>:	d6 d0	beq.n	0x380ce <msg_start+86>
   0x00038120 <+168>:	0c 4a	ldr	r2, [pc, #48]	; (0x38154 <msg_start+220>)
   0x00038122 <+170>:	01 26	movs	r6, #1
   0x00038124 <+172>:	0a 4b	ldr	r3, [pc, #40]	; (0x38150 <msg_start+216>)
   0x00038126 <+174>:	a2 58	ldr	r2, [r4, r2]
   0x00038128 <+176>:	e3 58	ldr	r3, [r4, r3]
   0x0003812a <+178>:	12 68	ldr	r2, [r2, #0]
   0x0003812c <+180>:	1a 60	str	r2, [r3, #0]
   0x0003812e <+182>:	cf e7	b.n	0x380d0 <msg_start+88>
   0x00038130 <+184>:	0f 4b	ldr	r3, [pc, #60]	; (0x38170 <msg_start+248>)
   0x00038132 <+186>:	e7 58	ldr	r7, [r4, r3]
   0x00038134 <+188>:	38 68	ldr	r0, [r7, #0]
   0x00038136 <+190>:	05 f0 35 f9	bl	0x3d3a4 <vim_free>
   0x0003813a <+194>:	3e 60	str	r6, [r7, #0]
   0x0003813c <+196>:	a4 e7	b.n	0x38088 <msg_start+16>
   0x0003813e <+198>:	00 bf	nop
   0x00038140 <+200>:	1a f6 06 00			; <UNDEFINED> instruction: 0xf61a0006
   0x00038144 <+204>:	74 02	lsls	r4, r6, #9
   0x00038146 <+206>:	00 00	movs	r0, r0
   0x00038148 <+208>:	8c 04	lsls	r4, r1, #18
   0x0003814a <+210>:	00 00	movs	r0, r0
   0x0003814c <+212>:	2c 07	lsls	r4, r5, #28
   0x0003814e <+214>:	00 00	movs	r0, r0
   0x00038150 <+216>:	d0 06	lsls	r0, r2, #27
   0x00038152 <+218>:	00 00	movs	r0, r0
   0x00038154 <+220>:	58 02	lsls	r0, r3, #9
   0x00038156 <+222>:	00 00	movs	r0, r0
   0x00038158 <+224>:	e0 06	lsls	r0, r4, #27
   0x0003815a <+226>:	00 00	movs	r0, r0
   0x0003815c <+228>:	c0 03	lsls	r0, r0, #15
   0x0003815e <+230>:	00 00	movs	r0, r0
   0x00038160 <+232>:	40 03	lsls	r0, r0, #13
   0x00038162 <+234>:	00 00	movs	r0, r0
   0x00038164 <+236>:	54 04	lsls	r4, r2, #17
   0x00038166 <+238>:	00 00	movs	r0, r0
   0x00038168 <+240>:	88 2d	cmp	r5, #136	; 0x88
   0x0003816a <+242>:	05 00	movs	r5, r0
   0x0003816c <+244>:	00 03	lsls	r0, r0, #12
   0x0003816e <+246>:	00 00	movs	r0, r0
   0x00038170 <+248>:	9c 08	lsrs	r4, r3, #2
   0x00038172 <+250>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function msg_starthere:
   0x00035fac <+0>:	07 4b	ldr	r3, [pc, #28]	; (0x35fcc <msg_starthere+32>)
   0x00035fae <+2>:	08 48	ldr	r0, [pc, #32]	; (0x35fd0 <msg_starthere+36>)
   0x00035fb0 <+4>:	7b 44	add	r3, pc
   0x00035fb2 <+6>:	08 49	ldr	r1, [pc, #32]	; (0x35fd4 <msg_starthere+40>)
   0x00035fb4 <+8>:	10 b4	push	{r4}
   0x00035fb6 <+10>:	00 24	movs	r4, #0
   0x00035fb8 <+12>:	18 58	ldr	r0, [r3, r0]
   0x00035fba <+14>:	59 58	ldr	r1, [r3, r1]
   0x00035fbc <+16>:	06 4a	ldr	r2, [pc, #24]	; (0x35fd8 <msg_starthere+44>)
   0x00035fbe <+18>:	00 68	ldr	r0, [r0, #0]
   0x00035fc0 <+20>:	08 60	str	r0, [r1, #0]
   0x00035fc2 <+22>:	9b 58	ldr	r3, [r3, r2]
   0x00035fc4 <+24>:	1c 60	str	r4, [r3, #0]
   0x00035fc6 <+26>:	5d f8 04 4b	ldr.w	r4, [sp], #4
   0x00035fca <+30>:	70 47	bx	lr
   0x00035fcc <+32>:	e8 16	asrs	r0, r5, #27
   0x00035fce <+34>:	07 00	movs	r7, r0
   0x00035fd0 <+36>:	d0 06	lsls	r0, r2, #27
   0x00035fd2 <+38>:	00 00	movs	r0, r0
   0x00035fd4 <+40>:	40 03	lsls	r0, r0, #13
   0x00035fd6 <+42>:	00 00	movs	r0, r0
   0x00035fd8 <+44>:	c0 03	lsls	r0, r0, #15
   0x00035fda <+46>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function msg_strtrunc:
   0x00035c04 <+0>:	f0 b5	push	{r4, r5, r6, r7, lr}
   0x00035c06 <+2>:	05 46	mov	r5, r0
   0x00035c08 <+4>:	39 4e	ldr	r6, [pc, #228]	; (0x35cf0 <msg_strtrunc+236>)
   0x00035c0a <+6>:	83 b0	sub	sp, #12
   0x00035c0c <+8>:	39 4b	ldr	r3, [pc, #228]	; (0x35cf4 <msg_strtrunc+240>)
   0x00035c0e <+10>:	7e 44	add	r6, pc
   0x00035c10 <+12>:	f3 58	ldr	r3, [r6, r3]
   0x00035c12 <+14>:	1b 68	ldr	r3, [r3, #0]
   0x00035c14 <+16>:	23 b9	cbnz	r3, 0x35c20 <msg_strtrunc+28>
   0x00035c16 <+18>:	38 4b	ldr	r3, [pc, #224]	; (0x35cf8 <msg_strtrunc+244>)
   0x00035c18 <+20>:	f3 58	ldr	r3, [r6, r3]
   0x00035c1a <+22>:	1b 68	ldr	r3, [r3, #0]
   0x00035c1c <+24>:	00 2b	cmp	r3, #0
   0x00035c1e <+26>:	51 d0	beq.n	0x35cc4 <msg_strtrunc+192>
   0x00035c20 <+28>:	00 29	cmp	r1, #0
   0x00035c22 <+30>:	61 d0	beq.n	0x35ce8 <msg_strtrunc+228>
   0x00035c24 <+32>:	28 46	mov	r0, r5
   0x00035c26 <+34>:	db f7 dd fa	bl	0x111e4 <vim_strsize>
   0x00035c2a <+38>:	34 4b	ldr	r3, [pc, #208]	; (0x35cfc <msg_strtrunc+248>)
   0x00035c2c <+40>:	f3 58	ldr	r3, [r6, r3]
   0x00035c2e <+42>:	1b 68	ldr	r3, [r3, #0]
   0x00035c30 <+44>:	00 2b	cmp	r3, #0
   0x00035c32 <+46>:	2f d1	bne.n	0x35c94 <msg_strtrunc+144>
   0x00035c34 <+48>:	32 4c	ldr	r4, [pc, #200]	; (0x35d00 <msg_strtrunc+252>)
   0x00035c36 <+50>:	33 4a	ldr	r2, [pc, #204]	; (0x35d04 <msg_strtrunc+256>)
   0x00035c38 <+52>:	33 49	ldr	r1, [pc, #204]	; (0x35d08 <msg_strtrunc+260>)
   0x00035c3a <+54>:	34 4b	ldr	r3, [pc, #208]	; (0x35d0c <msg_strtrunc+264>)
   0x00035c3c <+56>:	34 59	ldr	r4, [r6, r4]
   0x00035c3e <+58>:	b2 58	ldr	r2, [r6, r2]
   0x00035c40 <+60>:	77 58	ldr	r7, [r6, r1]
   0x00035c42 <+62>:	f1 58	ldr	r1, [r6, r3]
   0x00035c44 <+64>:	12 68	ldr	r2, [r2, #0]
   0x00035c46 <+66>:	23 68	ldr	r3, [r4, #0]
   0x00035c48 <+68>:	3c 68	ldr	r4, [r7, #0]
   0x00035c4a <+70>:	9b 1a	subs	r3, r3, r2
   0x00035c4c <+72>:	0a 68	ldr	r2, [r1, #0]
   0x00035c4e <+74>:	01 3b	subs	r3, #1
   0x00035c50 <+76>:	04 fb 03 24	mla	r4, r4, r3, r2
   0x00035c54 <+80>:	01 3c	subs	r4, #1
   0x00035c56 <+82>:	84 42	cmp	r4, r0
   0x00035c58 <+84>:	ac bf	ite	ge
   0x00035c5a <+86>:	00 20	movge	r0, #0
   0x00035c5c <+88>:	01 20	movlt	r0, #1
   0x00035c5e <+90>:	00 2c	cmp	r4, #0
   0x00035c60 <+92>:	d8 bf	it	le
   0x00035c62 <+94>:	00 20	movle	r0, #0
   0x00035c64 <+96>:	00 28	cmp	r0, #0
   0x00035c66 <+98>:	3f d0	beq.n	0x35ce8 <msg_strtrunc+228>
   0x00035c68 <+100>:	29 4b	ldr	r3, [pc, #164]	; (0x35d10 <msg_strtrunc+268>)
   0x00035c6a <+102>:	f3 58	ldr	r3, [r6, r3]
   0x00035c6c <+104>:	1b 68	ldr	r3, [r3, #0]
   0x00035c6e <+106>:	fb b1	cbz	r3, 0x35cb0 <msg_strtrunc+172>
   0x00035c70 <+108>:	a7 1c	adds	r7, r4, #2
   0x00035c72 <+110>:	3b 01	lsls	r3, r7, #4
   0x00035c74 <+112>:	03 eb 47 07	add.w	r7, r3, r7, lsl #1
   0x00035c78 <+116>:	38 46	mov	r0, r7
   0x00035c7a <+118>:	09 f0 fd f9	bl	0x3f078 <alloc>
   0x00035c7e <+122>:	06 46	mov	r6, r0
   0x00035c80 <+124>:	28 b1	cbz	r0, 0x35c8e <msg_strtrunc+138>
   0x00035c82 <+126>:	3b 46	mov	r3, r7
   0x00035c84 <+128>:	22 46	mov	r2, r4
   0x00035c86 <+130>:	28 46	mov	r0, r5
   0x00035c88 <+132>:	31 46	mov	r1, r6
   0x00035c8a <+134>:	ff f7 95 fe	bl	0x359b8 <trunc_string>
   0x00035c8e <+138>:	30 46	mov	r0, r6
   0x00035c90 <+140>:	03 b0	add	sp, #12
   0x00035c92 <+142>:	f0 bd	pop	{r4, r5, r6, r7, pc}
   0x00035c94 <+144>:	1b 4a	ldr	r2, [pc, #108]	; (0x35d04 <msg_strtrunc+256>)
   0x00035c96 <+146>:	1a 49	ldr	r1, [pc, #104]	; (0x35d00 <msg_strtrunc+252>)
   0x00035c98 <+148>:	1b 4b	ldr	r3, [pc, #108]	; (0x35d08 <msg_strtrunc+260>)
   0x00035c9a <+150>:	b4 58	ldr	r4, [r6, r2]
   0x00035c9c <+152>:	71 58	ldr	r1, [r6, r1]
   0x00035c9e <+154>:	f3 58	ldr	r3, [r6, r3]
   0x00035ca0 <+156>:	24 68	ldr	r4, [r4, #0]
   0x00035ca2 <+158>:	0a 68	ldr	r2, [r1, #0]
   0x00035ca4 <+160>:	1b 68	ldr	r3, [r3, #0]
   0x00035ca6 <+162>:	14 1b	subs	r4, r2, r4
   0x00035ca8 <+164>:	03 fb 04 f4	mul.w	r4, r3, r4
   0x00035cac <+168>:	01 3c	subs	r4, #1
   0x00035cae <+170>:	d2 e7	b.n	0x35c56 <msg_strtrunc+82>
   0x00035cb0 <+172>:	18 4b	ldr	r3, [pc, #96]	; (0x35d14 <msg_strtrunc+272>)
   0x00035cb2 <+174>:	a7 1c	adds	r7, r4, #2
   0x00035cb4 <+176>:	42 f2 cc 62	movw	r2, #9932	; 0x26cc
   0x00035cb8 <+180>:	f3 58	ldr	r3, [r6, r3]
   0x00035cba <+182>:	1b 68	ldr	r3, [r3, #0]
   0x00035cbc <+184>:	93 42	cmp	r3, r2
   0x00035cbe <+186>:	08 bf	it	eq
   0x00035cc0 <+188>:	7f 00	lsleq	r7, r7, #1
   0x00035cc2 <+190>:	d9 e7	b.n	0x35c78 <msg_strtrunc+116>
   0x00035cc4 <+192>:	54 20	movs	r0, #84	; 0x54
   0x00035cc6 <+194>:	01 91	str	r1, [sp, #4]
   0x00035cc8 <+196>:	1c f0 40 f8	bl	0x51d4c <shortmess>
   0x00035ccc <+200>:	01 99	ldr	r1, [sp, #4]
   0x00035cce <+202>:	00 28	cmp	r0, #0
   0x00035cd0 <+204>:	a6 d0	beq.n	0x35c20 <msg_strtrunc+28>
   0x00035cd2 <+206>:	11 4b	ldr	r3, [pc, #68]	; (0x35d18 <msg_strtrunc+276>)
   0x00035cd4 <+208>:	f3 58	ldr	r3, [r6, r3]
   0x00035cd6 <+210>:	1b 68	ldr	r3, [r3, #0]
   0x00035cd8 <+212>:	00 2b	cmp	r3, #0
   0x00035cda <+214>:	a1 d1	bne.n	0x35c20 <msg_strtrunc+28>
   0x00035cdc <+216>:	0f 4b	ldr	r3, [pc, #60]	; (0x35d1c <msg_strtrunc+280>)
   0x00035cde <+218>:	f3 58	ldr	r3, [r6, r3]
   0x00035ce0 <+220>:	1b 68	ldr	r3, [r3, #0]
   0x00035ce2 <+222>:	00 2b	cmp	r3, #0
   0x00035ce4 <+224>:	9c d1	bne.n	0x35c20 <msg_strtrunc+28>
   0x00035ce6 <+226>:	9d e7	b.n	0x35c24 <msg_strtrunc+32>
   0x00035ce8 <+228>:	00 26	movs	r6, #0
   0x00035cea <+230>:	30 46	mov	r0, r6
   0x00035cec <+232>:	03 b0	add	sp, #12
   0x00035cee <+234>:	f0 bd	pop	{r4, r5, r6, r7, pc}
   0x00035cf0 <+236>:	8a 1a	subs	r2, r1, r2
   0x00035cf2 <+238>:	07 00	movs	r7, r0
   0x00035cf4 <+240>:	8c 04	lsls	r4, r1, #18
   0x00035cf6 <+242>:	00 00	movs	r0, r0
   0x00035cf8 <+244>:	58 08	lsrs	r0, r3, #1
   0x00035cfa <+246>:	00 00	movs	r0, r0
   0x00035cfc <+248>:	ac 04	lsls	r4, r5, #18
   0x00035cfe <+250>:	00 00	movs	r0, r0
   0x00035d00 <+252>:	c8 08	lsrs	r0, r1, #3
   0x00035d02 <+254>:	00 00	movs	r0, r0
   0x00035d04 <+256>:	58 02	lsls	r0, r3, #9
   0x00035d06 <+258>:	00 00	movs	r0, r0
   0x00035d08 <+260>:	fc 07	lsls	r4, r7, #31
   0x00035d0a <+262>:	00 00	movs	r0, r0
   0x00035d0c <+264>:	0c 03	lsls	r4, r1, #12
   0x00035d0e <+266>:	00 00	movs	r0, r0
   0x00035d10 <+268>:	48 09	lsrs	r0, r1, #5
   0x00035d12 <+270>:	00 00	movs	r0, r0
   0x00035d14 <+272>:	0c 07	lsls	r4, r1, #28
   0x00035d16 <+274>:	00 00	movs	r0, r0
   0x00035d18 <+276>:	00 03	lsls	r0, r0, #12
   0x00035d1a <+278>:	00 00	movs	r0, r0
   0x00035d1c <+280>:	74 02	lsls	r4, r6, #9
   0x00035d1e <+282>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function msg_trunc_attr:
   0x00038354 <+0>:	2d e9 f0 41	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   0x00038358 <+4>:	0f 46	mov	r7, r1
   0x0003835a <+6>:	12 4d	ldr	r5, [pc, #72]	; (0x383a4 <msg_trunc_attr+80>)
   0x0003835c <+8>:	80 46	mov	r8, r0
   0x0003835e <+10>:	12 4b	ldr	r3, [pc, #72]	; (0x383a8 <msg_trunc_attr+84>)
   0x00038360 <+12>:	16 46	mov	r6, r2
   0x00038362 <+14>:	7d 44	add	r5, pc
   0x00038364 <+16>:	ec 58	ldr	r4, [r5, r3]
   0x00038366 <+18>:	23 68	ldr	r3, [r4, #0]
   0x00038368 <+20>:	1b b9	cbnz	r3, 0x38372 <msg_trunc_attr+30>
   0x0003836a <+22>:	10 4b	ldr	r3, [pc, #64]	; (0x383ac <msg_trunc_attr+88>)
   0x0003836c <+24>:	eb 58	ldr	r3, [r5, r3]
   0x0003836e <+26>:	1b 68	ldr	r3, [r3, #0]
   0x00038370 <+28>:	93 b1	cbz	r3, 0x38398 <msg_trunc_attr+68>
   0x00038372 <+30>:	41 46	mov	r1, r8
   0x00038374 <+32>:	38 46	mov	r0, r7
   0x00038376 <+34>:	fd f7 13 fd	bl	0x35da0 <msg_may_trunc>
   0x0003837a <+38>:	31 46	mov	r1, r6
   0x0003837c <+40>:	00 22	movs	r2, #0
   0x0003837e <+42>:	01 23	movs	r3, #1
   0x00038380 <+44>:	23 60	str	r3, [r4, #0]
   0x00038382 <+46>:	05 46	mov	r5, r0
   0x00038384 <+48>:	ff f7 f6 fe	bl	0x38174 <msg_attr_keep>
   0x00038388 <+52>:	00 23	movs	r3, #0
   0x0003838a <+54>:	23 60	str	r3, [r4, #0]
   0x0003838c <+56>:	98 42	cmp	r0, r3
   0x0003838e <+58>:	14 bf	ite	ne
   0x00038390 <+60>:	28 46	movne	r0, r5
   0x00038392 <+62>:	18 46	moveq	r0, r3
   0x00038394 <+64>:	bd e8 f0 81	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   0x00038398 <+68>:	4f f0 ff 31	mov.w	r1, #4294967295
   0x0003839c <+72>:	fd f7 82 fd	bl	0x35ea4 <add_msg_hist>
   0x000383a0 <+76>:	e7 e7	b.n	0x38372 <msg_trunc_attr+30>
   0x000383a2 <+78>:	00 bf	nop
   0x000383a4 <+80>:	36 f3 06 00			; <UNDEFINED> instruction: 0xf3360006
   0x000383a8 <+84>:	b8 07	lsls	r0, r7, #30
   0x000383aa <+86>:	00 00	movs	r0, r0
   0x000383ac <+88>:	74 02	lsls	r4, r6, #9
   0x000383ae <+90>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function msg_use_printf:
   0x00036204 <+0>:	10 b5	push	{r4, lr}
   0x00036206 <+2>:	17 4c	ldr	r4, [pc, #92]	; (0x36264 <msg_use_printf+96>)
   0x00036208 <+4>:	17 4b	ldr	r3, [pc, #92]	; (0x36268 <msg_use_printf+100>)
   0x0003620a <+6>:	7c 44	add	r4, pc
   0x0003620c <+8>:	e3 58	ldr	r3, [r4, r3]
   0x0003620e <+10>:	1b 68	ldr	r3, [r3, #0]
   0x00036210 <+12>:	0b b9	cbnz	r3, 0x36216 <msg_use_printf+18>
   0x00036212 <+14>:	01 20	movs	r0, #1
   0x00036214 <+16>:	10 bd	pop	{r4, pc}
   0x00036216 <+18>:	00 20	movs	r0, #0
   0x00036218 <+20>:	39 f0 88 ff	bl	0x7012c <screen_valid>
   0x0003621c <+24>:	00 28	cmp	r0, #0
   0x0003621e <+26>:	f8 d0	beq.n	0x36212 <msg_use_printf+14>
   0x00036220 <+28>:	12 4a	ldr	r2, [pc, #72]	; (0x3626c <msg_use_printf+104>)
   0x00036222 <+30>:	13 4b	ldr	r3, [pc, #76]	; (0x36270 <msg_use_printf+108>)
   0x00036224 <+32>:	a1 58	ldr	r1, [r4, r2]
   0x00036226 <+34>:	e2 58	ldr	r2, [r4, r3]
   0x00036228 <+36>:	0b 68	ldr	r3, [r1, #0]
   0x0003622a <+38>:	11 68	ldr	r1, [r2, #0]
   0x0003622c <+40>:	99 42	cmp	r1, r3
   0x0003622e <+42>:	a4 bf	itt	ge
   0x00036230 <+44>:	03 f1 ff 33	addge.w	r3, r3, #4294967295
   0x00036234 <+48>:	13 60	strge	r3, [r2, #0]
   0x00036236 <+50>:	0f 4a	ldr	r2, [pc, #60]	; (0x36274 <msg_use_printf+112>)
   0x00036238 <+52>:	0f 4b	ldr	r3, [pc, #60]	; (0x36278 <msg_use_printf+116>)
   0x0003623a <+54>:	a1 58	ldr	r1, [r4, r2]
   0x0003623c <+56>:	e2 58	ldr	r2, [r4, r3]
   0x0003623e <+58>:	0b 68	ldr	r3, [r1, #0]
   0x00036240 <+60>:	11 68	ldr	r1, [r2, #0]
   0x00036242 <+62>:	99 42	cmp	r1, r3
   0x00036244 <+64>:	a4 bf	itt	ge
   0x00036246 <+66>:	03 f1 ff 33	addge.w	r3, r3, #4294967295
   0x0003624a <+70>:	13 60	strge	r3, [r2, #0]
   0x0003624c <+72>:	47 f0 6a fc	bl	0x7db24 <swapping_screen>
   0x00036250 <+76>:	30 b1	cbz	r0, 0x36260 <msg_use_printf+92>
   0x00036252 <+78>:	0a 4b	ldr	r3, [pc, #40]	; (0x3627c <msg_use_printf+120>)
   0x00036254 <+80>:	e3 58	ldr	r3, [r4, r3]
   0x00036256 <+82>:	18 68	ldr	r0, [r3, #0]
   0x00036258 <+84>:	b0 fa 80 f0	clz	r0, r0
   0x0003625c <+88>:	40 09	lsrs	r0, r0, #5
   0x0003625e <+90>:	10 bd	pop	{r4, pc}
   0x00036260 <+92>:	10 bd	pop	{r4, pc}
   0x00036262 <+94>:	00 bf	nop
   0x00036264 <+96>:	8e 14	asrs	r6, r1, #18
   0x00036266 <+98>:	07 00	movs	r7, r0
   0x00036268 <+100>:	2c 07	lsls	r4, r5, #28
   0x0003626a <+102>:	00 00	movs	r0, r0
   0x0003626c <+104>:	c8 08	lsrs	r0, r1, #3
   0x0003626e <+106>:	00 00	movs	r0, r0
   0x00036270 <+108>:	58 02	lsls	r0, r3, #9
   0x00036272 <+110>:	00 00	movs	r0, r0
   0x00036274 <+112>:	fc 07	lsls	r4, r7, #31
   0x00036276 <+114>:	00 00	movs	r0, r0
   0x00036278 <+116>:	e0 06	lsls	r0, r4, #27
   0x0003627a <+118>:	00 00	movs	r0, r0
   0x0003627c <+120>:	a4 03	lsls	r4, r4, #14
   0x0003627e <+122>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function redirecting:
   0x00036df0 <+0>:	07 4b	ldr	r3, [pc, #28]	; (0x36e10 <redirecting+32>)
   0x00036df2 <+2>:	08 4a	ldr	r2, [pc, #32]	; (0x36e14 <redirecting+36>)
   0x00036df4 <+4>:	7b 44	add	r3, pc
   0x00036df6 <+6>:	9a 58	ldr	r2, [r3, r2]
   0x00036df8 <+8>:	12 68	ldr	r2, [r2, #0]
   0x00036dfa <+10>:	0a b1	cbz	r2, 0x36e00 <redirecting+16>
   0x00036dfc <+12>:	01 20	movs	r0, #1
   0x00036dfe <+14>:	70 47	bx	lr
   0x00036e00 <+16>:	05 4a	ldr	r2, [pc, #20]	; (0x36e18 <redirecting+40>)
   0x00036e02 <+18>:	9b 58	ldr	r3, [r3, r2]
   0x00036e04 <+20>:	1b 68	ldr	r3, [r3, #0]
   0x00036e06 <+22>:	18 78	ldrb	r0, [r3, #0]
   0x00036e08 <+24>:	00 30	adds	r0, #0
   0x00036e0a <+26>:	18 bf	it	ne
   0x00036e0c <+28>:	01 20	movne	r0, #1
   0x00036e0e <+30>:	70 47	bx	lr
   0x00036e10 <+32>:	a4 08	lsrs	r4, r4, #2
   0x00036e12 <+34>:	07 00	movs	r7, r0
   0x00036e14 <+36>:	cc 04	lsls	r4, r1, #19
   0x00036e16 <+38>:	00 00	movs	r0, r0
   0x00036e18 <+40>:	3c 05	lsls	r4, r7, #20
   0x00036e1a <+42>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function repeat_message:
   0x00037678 <+0>:	70 b5	push	{r4, r5, r6, lr}
   0x0003767a <+2>:	22 4c	ldr	r4, [pc, #136]	; (0x37704 <repeat_message+140>)
   0x0003767c <+4>:	22 4b	ldr	r3, [pc, #136]	; (0x37708 <repeat_message+144>)
   0x0003767e <+6>:	7c 44	add	r4, pc
   0x00037680 <+8>:	e3 58	ldr	r3, [r4, r3]
   0x00037682 <+10>:	1b 68	ldr	r3, [r3, #0]
   0x00037684 <+12>:	b3 f5 40 7f	cmp.w	r3, #768	; 0x300
   0x00037688 <+16>:	27 d0	beq.n	0x376da <repeat_message+98>
   0x0003768a <+18>:	b3 f5 c0 6f	cmp.w	r3, #1536	; 0x600
   0x0003768e <+22>:	2f d0	beq.n	0x376f0 <repeat_message+120>
   0x00037690 <+24>:	40 f2 01 22	movw	r2, #513	; 0x201
   0x00037694 <+28>:	b3 f5 80 6f	cmp.w	r3, #1024	; 0x400
   0x00037698 <+32>:	18 bf	it	ne
   0x0003769a <+34>:	93 42	cmpne	r3, r2
   0x0003769c <+36>:	0d d1	bne.n	0x376ba <repeat_message+66>
   0x0003769e <+38>:	1b 4a	ldr	r2, [pc, #108]	; (0x3770c <repeat_message+148>)
   0x000376a0 <+40>:	1b 4b	ldr	r3, [pc, #108]	; (0x37710 <repeat_message+152>)
   0x000376a2 <+42>:	a6 58	ldr	r6, [r4, r2]
   0x000376a4 <+44>:	e5 58	ldr	r5, [r4, r3]
   0x000376a6 <+46>:	33 68	ldr	r3, [r6, #0]
   0x000376a8 <+48>:	2a 68	ldr	r2, [r5, #0]
   0x000376aa <+50>:	01 3b	subs	r3, #1
   0x000376ac <+52>:	93 42	cmp	r3, r2
   0x000376ae <+54>:	05 d0	beq.n	0x376bc <repeat_message+68>
   0x000376b0 <+56>:	ff f7 a0 ff	bl	0x375f4 <hit_return_msg>
   0x000376b4 <+60>:	33 68	ldr	r3, [r6, #0]
   0x000376b6 <+62>:	01 3b	subs	r3, #1
   0x000376b8 <+64>:	2b 60	str	r3, [r5, #0]
   0x000376ba <+66>:	70 bd	pop	{r4, r5, r6, pc}
   0x000376bc <+68>:	15 49	ldr	r1, [pc, #84]	; (0x37714 <repeat_message+156>)
   0x000376be <+70>:	00 20	movs	r0, #0
   0x000376c0 <+72>:	15 4a	ldr	r2, [pc, #84]	; (0x37718 <repeat_message+160>)
   0x000376c2 <+74>:	16 4b	ldr	r3, [pc, #88]	; (0x3771c <repeat_message+164>)
   0x000376c4 <+76>:	61 58	ldr	r1, [r4, r1]
   0x000376c6 <+78>:	08 60	str	r0, [r1, #0]
   0x000376c8 <+80>:	a2 58	ldr	r2, [r4, r2]
   0x000376ca <+82>:	10 60	str	r0, [r2, #0]
   0x000376cc <+84>:	e3 58	ldr	r3, [r4, r3]
   0x000376ce <+86>:	1b 68	ldr	r3, [r3, #0]
   0x000376d0 <+88>:	00 2b	cmp	r3, #0
   0x000376d2 <+90>:	ed d1	bne.n	0x376b0 <repeat_message+56>
   0x000376d4 <+92>:	ff f7 02 fb	bl	0x36cdc <msg_clr_eos_force>
   0x000376d8 <+96>:	ea e7	b.n	0x376b0 <repeat_message+56>
   0x000376da <+98>:	01 20	movs	r0, #1
   0x000376dc <+100>:	fe f7 d0 fd	bl	0x36280 <msg_moremsg>
   0x000376e0 <+104>:	0a 4a	ldr	r2, [pc, #40]	; (0x3770c <repeat_message+148>)
   0x000376e2 <+106>:	0b 4b	ldr	r3, [pc, #44]	; (0x37710 <repeat_message+152>)
   0x000376e4 <+108>:	a1 58	ldr	r1, [r4, r2]
   0x000376e6 <+110>:	e2 58	ldr	r2, [r4, r3]
   0x000376e8 <+112>:	0b 68	ldr	r3, [r1, #0]
   0x000376ea <+114>:	01 3b	subs	r3, #1
   0x000376ec <+116>:	13 60	str	r3, [r2, #0]
   0x000376ee <+118>:	70 bd	pop	{r4, r5, r6, pc}
   0x000376f0 <+120>:	09 4a	ldr	r2, [pc, #36]	; (0x37718 <repeat_message+160>)
   0x000376f2 <+122>:	07 4b	ldr	r3, [pc, #28]	; (0x37710 <repeat_message+152>)
   0x000376f4 <+124>:	a2 58	ldr	r2, [r4, r2]
   0x000376f6 <+126>:	e3 58	ldr	r3, [r4, r3]
   0x000376f8 <+128>:	bd e8 70 40	ldmia.w	sp!, {r4, r5, r6, lr}
   0x000376fc <+132>:	11 68	ldr	r1, [r2, #0]
   0x000376fe <+134>:	18 68	ldr	r0, [r3, #0]
   0x00037700 <+136>:	38 f0 6c bd	b.w	0x701dc <windgoto>
   0x00037704 <+140>:	1a 00	movs	r2, r3
   0x00037706 <+142>:	07 00	movs	r7, r0
   0x00037708 <+144>:	ac 08	lsrs	r4, r5, #2
   0x0003770a <+146>:	00 00	movs	r0, r0
   0x0003770c <+148>:	c8 08	lsrs	r0, r1, #3
   0x0003770e <+150>:	00 00	movs	r0, r0
   0x00037710 <+152>:	58 02	lsls	r0, r3, #9
   0x00037712 <+154>:	00 00	movs	r0, r0
   0x00037714 <+156>:	54 04	lsls	r4, r2, #17
   0x00037716 <+158>:	00 00	movs	r0, r0
   0x00037718 <+160>:	e0 06	lsls	r0, r4, #27
   0x0003771a <+162>:	00 00	movs	r0, r0
   0x0003771c <+164>:	74 02	lsls	r4, r6, #9
   0x0003771e <+166>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function reset_last_sourcing:
   0x00035d20 <+0>:	10 b5	push	{r4, lr}
   0x00035d22 <+2>:	04 4c	ldr	r4, [pc, #16]	; (0x35d34 <reset_last_sourcing+20>)
   0x00035d24 <+4>:	7c 44	add	r4, pc
   0x00035d26 <+6>:	20 68	ldr	r0, [r4, #0]
   0x00035d28 <+8>:	07 f0 3c fb	bl	0x3d3a4 <vim_free>
   0x00035d2c <+12>:	00 23	movs	r3, #0
   0x00035d2e <+14>:	23 60	str	r3, [r4, #0]
   0x00035d30 <+16>:	63 60	str	r3, [r4, #4]
   0x00035d32 <+18>:	10 bd	pop	{r4, pc}
   0x00035d34 <+20>:	44 9f	ldr	r7, [sp, #272]	; 0x110
   0x00035d36 <+22>:	07 00	movs	r7, r0
End of assembler dump.
Dump of assembler code for function set_keep_msg:
   0x00035f5c <+0>:	f8 b5	push	{r3, r4, r5, r6, r7, lr}
   0x00035f5e <+2>:	07 46	mov	r7, r0
   0x00035f60 <+4>:	0d 4c	ldr	r4, [pc, #52]	; (0x35f98 <set_keep_msg+60>)
   0x00035f62 <+6>:	0e 46	mov	r6, r1
   0x00035f64 <+8>:	0d 4b	ldr	r3, [pc, #52]	; (0x35f9c <set_keep_msg+64>)
   0x00035f66 <+10>:	7c 44	add	r4, pc
   0x00035f68 <+12>:	e5 58	ldr	r5, [r4, r3]
   0x00035f6a <+14>:	28 68	ldr	r0, [r5, #0]
   0x00035f6c <+16>:	07 f0 1a fa	bl	0x3d3a4 <vim_free>
   0x00035f70 <+20>:	1f b1	cbz	r7, 0x35f7a <set_keep_msg+30>
   0x00035f72 <+22>:	0b 4b	ldr	r3, [pc, #44]	; (0x35fa0 <set_keep_msg+68>)
   0x00035f74 <+24>:	e3 58	ldr	r3, [r4, r3]
   0x00035f76 <+26>:	1b 68	ldr	r3, [r3, #0]
   0x00035f78 <+28>:	4b b1	cbz	r3, 0x35f8e <set_keep_msg+50>
   0x00035f7a <+30>:	00 23	movs	r3, #0
   0x00035f7c <+32>:	2b 60	str	r3, [r5, #0]
   0x00035f7e <+34>:	09 4a	ldr	r2, [pc, #36]	; (0x35fa4 <set_keep_msg+72>)
   0x00035f80 <+36>:	00 21	movs	r1, #0
   0x00035f82 <+38>:	09 4b	ldr	r3, [pc, #36]	; (0x35fa8 <set_keep_msg+76>)
   0x00035f84 <+40>:	a2 58	ldr	r2, [r4, r2]
   0x00035f86 <+42>:	11 60	str	r1, [r2, #0]
   0x00035f88 <+44>:	e3 58	ldr	r3, [r4, r3]
   0x00035f8a <+46>:	1e 60	str	r6, [r3, #0]
   0x00035f8c <+48>:	f8 bd	pop	{r3, r4, r5, r6, r7, pc}
   0x00035f8e <+50>:	38 46	mov	r0, r7
   0x00035f90 <+52>:	08 f0 ea fa	bl	0x3e568 <vim_strsave>
   0x00035f94 <+56>:	28 60	str	r0, [r5, #0]
   0x00035f96 <+58>:	f2 e7	b.n	0x35f7e <set_keep_msg+34>
   0x00035f98 <+60>:	32 17	asrs	r2, r6, #28
   0x00035f9a <+62>:	07 00	movs	r7, r0
   0x00035f9c <+64>:	9c 08	lsrs	r4, r3, #2
   0x00035f9e <+66>:	00 00	movs	r0, r0
   0x00035fa0 <+68>:	74 02	lsls	r4, r6, #9
   0x00035fa2 <+70>:	00 00	movs	r0, r0
   0x00035fa4 <+72>:	c4 02	lsls	r4, r0, #11
   0x00035fa6 <+74>:	00 00	movs	r0, r0
   0x00035fa8 <+76>:	0c 04	lsls	r4, r1, #16
   0x00035faa <+78>:	00 00	movs	r0, r0
End of assembler dump.
