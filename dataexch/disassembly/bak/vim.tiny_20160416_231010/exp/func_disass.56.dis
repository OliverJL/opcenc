GNU gdb (Ubuntu 7.10-1ubuntu2) 7.10
Copyright (C) 2015 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "arm-linux-gnueabihf".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /usr/bin/vim.tiny...Reading symbols from /usr/lib/debug//usr/bin/vim.tiny...done.
done.
Dump of assembler code for function latin_char2cells:
   0x00040d34 <+0>:	01 20	movs	r0, #1
   0x00040d36 <+2>:	70 47	bx	lr
End of assembler dump.
Dump of assembler code for function latin_head_off:
   0x00040f8c <+0>:	00 20	movs	r0, #0
   0x00040f8e <+2>:	70 47	bx	lr
End of assembler dump.
Dump of assembler code for function latin_off2cells:
   0x00040d68 <+0>:	01 20	movs	r0, #1
   0x00040d6a <+2>:	70 47	bx	lr
End of assembler dump.
Dump of assembler code for function latin_ptr2cells:
   0x00040cc8 <+0>:	01 20	movs	r0, #1
   0x00040cca <+2>:	70 47	bx	lr
End of assembler dump.
Dump of assembler code for function latin_ptr2cells_len:
   0x00040cfc <+0>:	01 20	movs	r0, #1
   0x00040cfe <+2>:	70 47	bx	lr
End of assembler dump.
Dump of assembler code for function latin_ptr2char:
   0x00040d94 <+0>:	00 78	ldrb	r0, [r0, #0]
   0x00040d96 <+2>:	70 47	bx	lr
End of assembler dump.
Dump of assembler code for function latin_ptr2len:
   0x00040c3c <+0>:	03 4a	ldr	r2, [pc, #12]	; (0x40c4c <latin_ptr2len+16>)
   0x00040c3e <+2>:	04 4b	ldr	r3, [pc, #16]	; (0x40c50 <latin_ptr2len+20>)
   0x00040c40 <+4>:	7a 44	add	r2, pc
   0x00040c42 <+6>:	01 78	ldrb	r1, [r0, #0]
   0x00040c44 <+8>:	d3 58	ldr	r3, [r2, r3]
   0x00040c46 <+10>:	58 5c	ldrb	r0, [r3, r1]
   0x00040c48 <+12>:	70 47	bx	lr
   0x00040c4a <+14>:	00 bf	nop
   0x00040c4c <+16>:	58 6a	ldr	r0, [r3, #36]	; 0x24
   0x00040c4e <+18>:	06 00	movs	r6, r0
   0x00040c50 <+20>:	54 06	lsls	r4, r2, #25
   0x00040c52 <+22>:	00 00	movs	r0, r0
End of assembler dump.
Dump of assembler code for function latin_ptr2len_len:
   0x00040c78 <+0>:	00 29	cmp	r1, #0
   0x00040c7a <+2>:	04 dd	ble.n	0x40c86 <latin_ptr2len_len+14>
   0x00040c7c <+4>:	00 78	ldrb	r0, [r0, #0]
   0x00040c7e <+6>:	00 30	adds	r0, #0
   0x00040c80 <+8>:	18 bf	it	ne
   0x00040c82 <+10>:	01 20	movne	r0, #1
   0x00040c84 <+12>:	70 47	bx	lr
   0x00040c86 <+14>:	00 20	movs	r0, #0
   0x00040c88 <+16>:	70 47	bx	lr
End of assembler dump.
Dump of assembler code for function mb_adjust_cursor:
   0x000425b8 <+0>:	07 4b	ldr	r3, [pc, #28]	; (0x425d8 <mb_adjust_cursor+32>)
   0x000425ba <+2>:	08 4a	ldr	r2, [pc, #32]	; (0x425dc <mb_adjust_cursor+36>)
   0x000425bc <+4>:	7b 44	add	r3, pc
   0x000425be <+6>:	9a 58	ldr	r2, [r3, r2]
   0x000425c0 <+8>:	11 68	ldr	r1, [r2, #0]
   0x000425c2 <+10>:	4a 69	ldr	r2, [r1, #20]
   0x000425c4 <+12>:	00 2a	cmp	r2, #0
   0x000425c6 <+14>:	05 dd	ble.n	0x425d4 <mb_adjust_cursor+28>
   0x000425c8 <+16>:	05 4a	ldr	r2, [pc, #20]	; (0x425e0 <mb_adjust_cursor+40>)
   0x000425ca <+18>:	10 31	adds	r1, #16
   0x000425cc <+20>:	9b 58	ldr	r3, [r3, r2]
   0x000425ce <+22>:	18 68	ldr	r0, [r3, #0]
   0x000425d0 <+24>:	ff f7 88 b8	b.w	0x416e4 <mb_adjustpos>
   0x000425d4 <+28>:	70 47	bx	lr
   0x000425d6 <+30>:	00 bf	nop
   0x000425d8 <+32>:	dc 50	str	r4, [r3, r3]
   0x000425da <+34>:	06 00	movs	r6, r0
   0x000425dc <+36>:	24 04	lsls	r4, r4, #16
   0x000425de <+38>:	00 00	movs	r0, r0
   0x000425e0 <+40>:	b0 07	lsls	r0, r6, #30
   0x000425e2 <+42>:	00 00	movs	r0, r0
End of assembler dump.
