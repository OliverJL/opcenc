GNU gdb (Ubuntu 7.10-1ubuntu2) 7.10
Copyright (C) 2015 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "arm-linux-gnueabihf".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /bin/tar...Reading symbols from /usr/lib/debug//bin/tar...done.
done.
Dump of assembler code for function open_fatal:
   0x000239b8 <+0>:	01 46	mov	r1, r0
   0x000239ba <+2>:	48 f6 00 70	movw	r0, #36608	; 0x8f00
   0x000239be <+6>:	08 b5	push	{r3, lr}
   0x000239c0 <+8>:	c0 f2 03 00	movt	r0, #3
   0x000239c4 <+12>:	ff f7 04 ff	bl	0x237d0 <call_arg_fatal>
End of assembler dump.
Dump of assembler code for function open_warn:
   0x000239c8 <+0>:	01 46	mov	r1, r0
   0x000239ca <+2>:	48 f6 00 70	movw	r0, #36608	; 0x8f00
   0x000239ce <+6>:	c0 f2 03 00	movt	r0, #3
   0x000239d2 <+10>:	ff f7 19 bf	b.w	0x23808 <call_arg_warn>
End of assembler dump.
Dump of assembler code for function pax_decode_mode:
   0x000236e4 <+0>:	10 f4 80 7f	tst.w	r0, #256	; 0x100
   0x000236e8 <+4>:	0c bf	ite	eq
   0x000236ea <+6>:	2d 23	moveq	r3, #45	; 0x2d
   0x000236ec <+8>:	72 23	movne	r3, #114	; 0x72
   0x000236ee <+10>:	10 f0 80 0f	tst.w	r0, #128	; 0x80
   0x000236f2 <+14>:	0b 70	strb	r3, [r1, #0]
   0x000236f4 <+16>:	0c bf	ite	eq
   0x000236f6 <+18>:	2d 23	moveq	r3, #45	; 0x2d
   0x000236f8 <+20>:	77 23	movne	r3, #119	; 0x77
   0x000236fa <+22>:	02 05	lsls	r2, r0, #20
   0x000236fc <+24>:	4b 70	strb	r3, [r1, #1]
   0x000236fe <+26>:	30 d5	bpl.n	0x23762 <pax_decode_mode+126>
   0x00023700 <+28>:	10 f0 40 0f	tst.w	r0, #64	; 0x40
   0x00023704 <+32>:	0c bf	ite	eq
   0x00023706 <+34>:	53 23	moveq	r3, #83	; 0x53
   0x00023708 <+36>:	73 23	movne	r3, #115	; 0x73
   0x0002370a <+38>:	10 f0 20 0f	tst.w	r0, #32
   0x0002370e <+42>:	8b 70	strb	r3, [r1, #2]
   0x00023710 <+44>:	0c bf	ite	eq
   0x00023712 <+46>:	2d 23	moveq	r3, #45	; 0x2d
   0x00023714 <+48>:	72 23	movne	r3, #114	; 0x72
   0x00023716 <+50>:	10 f0 10 0f	tst.w	r0, #16
   0x0002371a <+54>:	cb 70	strb	r3, [r1, #3]
   0x0002371c <+56>:	0c bf	ite	eq
   0x0002371e <+58>:	2d 23	moveq	r3, #45	; 0x2d
   0x00023720 <+60>:	77 23	movne	r3, #119	; 0x77
   0x00023722 <+62>:	42 05	lsls	r2, r0, #21
   0x00023724 <+64>:	0b 71	strb	r3, [r1, #4]
   0x00023726 <+66>:	2b d5	bpl.n	0x23780 <pax_decode_mode+156>
   0x00023728 <+68>:	10 f0 08 0f	tst.w	r0, #8
   0x0002372c <+72>:	0c bf	ite	eq
   0x0002372e <+74>:	53 23	moveq	r3, #83	; 0x53
   0x00023730 <+76>:	73 23	movne	r3, #115	; 0x73
   0x00023732 <+78>:	10 f0 04 0f	tst.w	r0, #4
   0x00023736 <+82>:	4b 71	strb	r3, [r1, #5]
   0x00023738 <+84>:	0c bf	ite	eq
   0x0002373a <+86>:	2d 23	moveq	r3, #45	; 0x2d
   0x0002373c <+88>:	72 23	movne	r3, #114	; 0x72
   0x0002373e <+90>:	10 f0 02 0f	tst.w	r0, #2
   0x00023742 <+94>:	8b 71	strb	r3, [r1, #6]
   0x00023744 <+96>:	0c bf	ite	eq
   0x00023746 <+98>:	2d 23	moveq	r3, #45	; 0x2d
   0x00023748 <+100>:	77 23	movne	r3, #119	; 0x77
   0x0002374a <+102>:	82 05	lsls	r2, r0, #22
   0x0002374c <+104>:	cb 71	strb	r3, [r1, #7]
   0x0002374e <+106>:	0e d5	bpl.n	0x2376e <pax_decode_mode+138>
   0x00023750 <+108>:	10 f0 01 0f	tst.w	r0, #1
   0x00023754 <+112>:	0c bf	ite	eq
   0x00023756 <+114>:	54 23	moveq	r3, #84	; 0x54
   0x00023758 <+116>:	74 23	movne	r3, #116	; 0x74
   0x0002375a <+118>:	0b 72	strb	r3, [r1, #8]
   0x0002375c <+120>:	00 23	movs	r3, #0
   0x0002375e <+122>:	4b 72	strb	r3, [r1, #9]
   0x00023760 <+124>:	70 47	bx	lr
   0x00023762 <+126>:	10 f0 40 0f	tst.w	r0, #64	; 0x40
   0x00023766 <+130>:	0c bf	ite	eq
   0x00023768 <+132>:	2d 23	moveq	r3, #45	; 0x2d
   0x0002376a <+134>:	78 23	movne	r3, #120	; 0x78
   0x0002376c <+136>:	cd e7	b.n	0x2370a <pax_decode_mode+38>
   0x0002376e <+138>:	10 f0 01 0f	tst.w	r0, #1
   0x00023772 <+142>:	0c bf	ite	eq
   0x00023774 <+144>:	2d 23	moveq	r3, #45	; 0x2d
   0x00023776 <+146>:	78 23	movne	r3, #120	; 0x78
   0x00023778 <+148>:	0b 72	strb	r3, [r1, #8]
   0x0002377a <+150>:	00 23	movs	r3, #0
   0x0002377c <+152>:	4b 72	strb	r3, [r1, #9]
   0x0002377e <+154>:	70 47	bx	lr
   0x00023780 <+156>:	10 f0 08 0f	tst.w	r0, #8
   0x00023784 <+160>:	0c bf	ite	eq
   0x00023786 <+162>:	2d 23	moveq	r3, #45	; 0x2d
   0x00023788 <+164>:	78 23	movne	r3, #120	; 0x78
   0x0002378a <+166>:	d2 e7	b.n	0x23732 <pax_decode_mode+78>
End of assembler dump.
Dump of assembler code for function read_error:
   0x000239d8 <+0>:	01 46	mov	r1, r0
   0x000239da <+2>:	42 f6 34 50	movw	r0, #11572	; 0x2d34
   0x000239de <+6>:	c0 f2 03 00	movt	r0, #3
   0x000239e2 <+10>:	ff f7 d3 be	b.w	0x2378c <call_arg_error>
End of assembler dump.
Dump of assembler code for function read_error_details:
   0x000239e8 <+0>:	2d e9 f0 47	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
   0x000239ec <+4>:	45 f2 70 76	movw	r6, #22384	; 0x5770
   0x000239f0 <+8>:	c0 f2 04 06	movt	r6, #4
   0x000239f4 <+12>:	1d 46	mov	r5, r3
   0x000239f6 <+14>:	8a b0	sub	sp, #40	; 0x28
   0x000239f8 <+16>:	81 46	mov	r9, r0
   0x000239fa <+18>:	33 68	ldr	r3, [r6, #0]
   0x000239fc <+20>:	14 46	mov	r4, r2
   0x000239fe <+22>:	12 9f	ldr	r7, [sp, #72]	; 0x48
   0x00023a00 <+24>:	09 93	str	r3, [sp, #36]	; 0x24
   0x00023a02 <+26>:	e7 f7 da ea	blx	0xafb8 <__errno_location@plt>
   0x00023a06 <+30>:	4f f0 05 0e	mov.w	lr, #5
   0x00023a0a <+34>:	3b 46	mov	r3, r7
   0x00023a0c <+36>:	48 f6 08 71	movw	r1, #36616	; 0x8f08
   0x00023a10 <+40>:	48 f6 3c 72	movw	r2, #36668	; 0x8f3c
   0x00023a14 <+44>:	c0 f2 03 01	movt	r1, #3
   0x00023a18 <+48>:	c0 f2 03 02	movt	r2, #3
   0x00023a1c <+52>:	d0 f8 00 80	ldr.w	r8, [r0]
   0x00023a20 <+56>:	00 20	movs	r0, #0
   0x00023a22 <+58>:	cd f8 00 e0	str.w	lr, [sp]
   0x00023a26 <+62>:	e7 f7 6e ec	blx	0xb304 <dcngettext@plt>
   0x00023a2a <+66>:	82 46	mov	r10, r0
   0x00023a2c <+68>:	48 46	mov	r0, r9
   0x00023a2e <+70>:	0b f0 5b f9	bl	0x2ece8 <quotearg_colon>
   0x00023a32 <+74>:	29 46	mov	r1, r5
   0x00023a34 <+76>:	03 aa	add	r2, sp, #12
   0x00023a36 <+78>:	81 46	mov	r9, r0
   0x00023a38 <+80>:	20 46	mov	r0, r4
   0x00023a3a <+82>:	08 f0 d9 f9	bl	0x2bdf0 <umaxtostr>
   0x00023a3e <+86>:	41 46	mov	r1, r8
   0x00023a40 <+88>:	52 46	mov	r2, r10
   0x00023a42 <+90>:	4b 46	mov	r3, r9
   0x00023a44 <+92>:	01 97	str	r7, [sp, #4]
   0x00023a46 <+94>:	00 90	str	r0, [sp, #0]
   0x00023a48 <+96>:	00 20	movs	r0, #0
   0x00023a4a <+98>:	e7 f7 ba e9	blx	0xadc0 <error@plt+4>
   0x00023a4e <+102>:	09 99	ldr	r1, [sp, #36]	; 0x24
   0x00023a50 <+104>:	32 68	ldr	r2, [r6, #0]
   0x00023a52 <+106>:	45 f6 ac 63	movw	r3, #24236	; 0x5eac
   0x00023a56 <+110>:	c0 f2 04 03	movt	r3, #4
   0x00023a5a <+114>:	02 20	movs	r0, #2
   0x00023a5c <+116>:	91 42	cmp	r1, r2
   0x00023a5e <+118>:	18 60	str	r0, [r3, #0]
   0x00023a60 <+120>:	02 d1	bne.n	0x23a68 <read_error_details+128>
   0x00023a62 <+122>:	0a b0	add	sp, #40	; 0x28
   0x00023a64 <+124>:	bd e8 f0 87	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
   0x00023a68 <+128>:	e7 f7 dc e8	blx	0xac24 <__stack_chk_fail@plt>
End of assembler dump.
Dump of assembler code for function read_fatal:
   0x00023ae4 <+0>:	01 46	mov	r1, r0
   0x00023ae6 <+2>:	42 f6 34 50	movw	r0, #11572	; 0x2d34
   0x00023aea <+6>:	08 b5	push	{r3, lr}
   0x00023aec <+8>:	c0 f2 03 00	movt	r0, #3
   0x00023af0 <+12>:	ff f7 6e fe	bl	0x237d0 <call_arg_fatal>
End of assembler dump.
Dump of assembler code for function read_fatal_details:
   0x00023af4 <+0>:	45 f2 70 71	movw	r1, #22384	; 0x5770
   0x00023af8 <+4>:	c0 f2 04 01	movt	r1, #4
   0x00023afc <+8>:	1d 46	mov	r5, r3
   0x00023afe <+10>:	80 46	mov	r8, r0
   0x00023b00 <+12>:	0b 68	ldr	r3, [r1, #0]
   0x00023b02 <+14>:	14 46	mov	r4, r2
   0x00023b04 <+16>:	80 b5	push	{r7, lr}
   0x00023b06 <+18>:	8a b0	sub	sp, #40	; 0x28
   0x00023b08 <+20>:	09 93	str	r3, [sp, #36]	; 0x24
   0x00023b0a <+22>:	e7 f7 56 ea	blx	0xafb8 <__errno_location@plt>
   0x00023b0e <+26>:	0c 9e	ldr	r6, [sp, #48]	; 0x30
   0x00023b10 <+28>:	4f f0 05 0e	mov.w	lr, #5
   0x00023b14 <+32>:	48 f6 08 71	movw	r1, #36616	; 0x8f08
   0x00023b18 <+36>:	48 f6 3c 72	movw	r2, #36668	; 0x8f3c
   0x00023b1c <+40>:	c0 f2 03 01	movt	r1, #3
   0x00023b20 <+44>:	c0 f2 03 02	movt	r2, #3
   0x00023b24 <+48>:	33 46	mov	r3, r6
   0x00023b26 <+50>:	07 68	ldr	r7, [r0, #0]
   0x00023b28 <+52>:	00 20	movs	r0, #0
   0x00023b2a <+54>:	cd f8 00 e0	str.w	lr, [sp]
   0x00023b2e <+58>:	e7 f7 ea eb	blx	0xb304 <dcngettext@plt>
   0x00023b32 <+62>:	81 46	mov	r9, r0
   0x00023b34 <+64>:	40 46	mov	r0, r8
   0x00023b36 <+66>:	0b f0 d7 f8	bl	0x2ece8 <quotearg_colon>
   0x00023b3a <+70>:	29 46	mov	r1, r5
   0x00023b3c <+72>:	03 aa	add	r2, sp, #12
   0x00023b3e <+74>:	80 46	mov	r8, r0
   0x00023b40 <+76>:	20 46	mov	r0, r4
   0x00023b42 <+78>:	08 f0 55 f9	bl	0x2bdf0 <umaxtostr>
   0x00023b46 <+82>:	39 46	mov	r1, r7
   0x00023b48 <+84>:	4a 46	mov	r2, r9
   0x00023b4a <+86>:	43 46	mov	r3, r8
   0x00023b4c <+88>:	01 96	str	r6, [sp, #4]
   0x00023b4e <+90>:	00 90	str	r0, [sp, #0]
   0x00023b50 <+92>:	00 20	movs	r0, #0
   0x00023b52 <+94>:	e7 f7 36 e9	blx	0xadc0 <error@plt+4>
   0x00023b56 <+98>:	ef f7 59 f9	bl	0x12e0c <fatal_exit>
End of assembler dump.
Dump of assembler code for function read_warn_details:
   0x00023a6c <+0>:	2d e9 f0 47	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
   0x00023a70 <+4>:	45 f2 70 76	movw	r6, #22384	; 0x5770
   0x00023a74 <+8>:	c0 f2 04 06	movt	r6, #4
   0x00023a78 <+12>:	1d 46	mov	r5, r3
   0x00023a7a <+14>:	8a b0	sub	sp, #40	; 0x28
   0x00023a7c <+16>:	81 46	mov	r9, r0
   0x00023a7e <+18>:	33 68	ldr	r3, [r6, #0]
   0x00023a80 <+20>:	14 46	mov	r4, r2
   0x00023a82 <+22>:	12 9f	ldr	r7, [sp, #72]	; 0x48
   0x00023a84 <+24>:	09 93	str	r3, [sp, #36]	; 0x24
   0x00023a86 <+26>:	e7 f7 98 ea	blx	0xafb8 <__errno_location@plt>
   0x00023a8a <+30>:	4f f0 05 0e	mov.w	lr, #5
   0x00023a8e <+34>:	3b 46	mov	r3, r7
   0x00023a90 <+36>:	48 f6 70 71	movw	r1, #36720	; 0x8f70
   0x00023a94 <+40>:	48 f6 ac 72	movw	r2, #36780	; 0x8fac
   0x00023a98 <+44>:	c0 f2 03 01	movt	r1, #3
   0x00023a9c <+48>:	c0 f2 03 02	movt	r2, #3
   0x00023aa0 <+52>:	d0 f8 00 80	ldr.w	r8, [r0]
   0x00023aa4 <+56>:	00 20	movs	r0, #0
   0x00023aa6 <+58>:	cd f8 00 e0	str.w	lr, [sp]
   0x00023aaa <+62>:	e7 f7 2c ec	blx	0xb304 <dcngettext@plt>
   0x00023aae <+66>:	82 46	mov	r10, r0
   0x00023ab0 <+68>:	48 46	mov	r0, r9
   0x00023ab2 <+70>:	0b f0 19 f9	bl	0x2ece8 <quotearg_colon>
   0x00023ab6 <+74>:	29 46	mov	r1, r5
   0x00023ab8 <+76>:	03 aa	add	r2, sp, #12
   0x00023aba <+78>:	81 46	mov	r9, r0
   0x00023abc <+80>:	20 46	mov	r0, r4
   0x00023abe <+82>:	08 f0 97 f9	bl	0x2bdf0 <umaxtostr>
   0x00023ac2 <+86>:	52 46	mov	r2, r10
   0x00023ac4 <+88>:	4b 46	mov	r3, r9
   0x00023ac6 <+90>:	41 46	mov	r1, r8
   0x00023ac8 <+92>:	01 97	str	r7, [sp, #4]
   0x00023aca <+94>:	00 90	str	r0, [sp, #0]
   0x00023acc <+96>:	00 20	movs	r0, #0
   0x00023ace <+98>:	e7 f7 78 e9	blx	0xadc0 <error@plt+4>
   0x00023ad2 <+102>:	09 9a	ldr	r2, [sp, #36]	; 0x24
   0x00023ad4 <+104>:	33 68	ldr	r3, [r6, #0]
   0x00023ad6 <+106>:	9a 42	cmp	r2, r3
   0x00023ad8 <+108>:	02 d1	bne.n	0x23ae0 <read_warn_details+116>
   0x00023ada <+110>:	0a b0	add	sp, #40	; 0x28
   0x00023adc <+112>:	bd e8 f0 87	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
   0x00023ae0 <+116>:	e7 f7 a0 e8	blx	0xac24 <__stack_chk_fail@plt>
End of assembler dump.
Dump of assembler code for function readlink_error:
   0x00023b5c <+0>:	01 46	mov	r1, r0
   0x00023b5e <+2>:	48 f6 e8 70	movw	r0, #36840	; 0x8fe8
   0x00023b62 <+6>:	c0 f2 03 00	movt	r0, #3
   0x00023b66 <+10>:	ff f7 11 be	b.w	0x2378c <call_arg_error>
End of assembler dump.
